(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{BPbP:function(e,t,b){"use strict";b.r(t);var c=b("d2mR"),a=b("tyNb"),d=b("leug"),o=b("fXoL"),l=b("5l+6"),n=b("OtPg"),r=b("LuDt"),s=b("OY9d"),i=b("ZemC"),R=b("ofXK"),h=b("dkiD"),m=b("uwiL");function Q(e,t){if(1&e&&(o.Rb(0,"tr",11),o.Rb(1,"td",12),o.xc(2),o.Qb(),o.Rb(3,"td",13),o.xc(4),o.Qb(),o.Rb(5,"td",13),o.xc(6),o.Qb(),o.Rb(7,"td",13),o.xc(8),o.Qb(),o.Rb(9,"td",12),o.xc(10),o.Qb(),o.Qb()),2&e){const e=t.$implicit;o.Bb(2),o.yc(e.name),o.Bb(2),o.yc(e.calories),o.Bb(2),o.yc(e.carbs),o.Bb(2),o.yc(e.protein),o.Bb(2),o.yc(e.comment)}}function x(e,t){if(1&e&&(o.Rb(0,"tr",14),o.Rb(1,"td",12),o.Mb(2,"mdc-checkbox",15),o.Qb(),o.Rb(3,"td",12),o.xc(4),o.Qb(),o.Rb(5,"td",13),o.xc(6),o.Qb(),o.Rb(7,"td",13),o.xc(8),o.Qb(),o.Rb(9,"td",13),o.xc(10),o.Qb(),o.Rb(11,"td",12),o.xc(12),o.Qb(),o.Qb()),2&e){const e=t.$implicit;o.ic("selected",e.checked),o.Bb(2),o.ic("checked",e.checked),o.Bb(2),o.yc(e.name),o.Bb(2),o.yc(e.calories),o.Bb(2),o.yc(e.carbs),o.Bb(2),o.yc(e.protein),o.Bb(2),o.yc(e.comment)}}let p=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=o.Fb({type:e,selectors:[["ng-component"]],decls:180,vars:0,consts:[[1,"docs-api"],["mdcHeadline6",""],[1,"markdown-code"],["mdcSubtitle2",""],["highlight","Array<string | null>"],["highlight","MDCDataTableRowSelectionChangedEvent {\n  index: number;\n  id: string | null;\n  selected: boolean;\n}"]],template:function(e,t){1&e&&(o.Rb(0,"div",0),o.Rb(1,"h3",1),o.xc(2,"MDCDataTable"),o.Qb(),o.Rb(3,"p"),o.xc(4," Selector: "),o.Rb(5,"span",2),o.xc(6,"mdc-data-table"),o.Qb(),o.Qb(),o.xc(7," Exported as: "),o.Rb(8,"span",2),o.xc(9,"mdcDataTable"),o.Qb(),o.Rb(10,"h4",3),o.xc(11,"Methods"),o.Qb(),o.Rb(12,"table"),o.Rb(13,"tbody"),o.Rb(14,"tr"),o.Rb(15,"td"),o.xc(16,"layoutAsync(): Promise"),o.Qb(),o.Rb(17,"td"),o.xc(18,"Re-initializes header row checkbox and row checkboxes when selectable rows are added or removed from table. Use this if registering checkbox is asynchronous. "),o.Qb(),o.Qb(),o.Rb(19,"tr"),o.Rb(20,"td"),o.xc(21,"layout(): void"),o.Qb(),o.Rb(22,"td"),o.xc(23,"Re-initializes header row checkbox and row checkboxes when selectable rows are added or removed from table."),o.Qb(),o.Qb(),o.Rb(24,"tr"),o.Rb(25,"td"),o.xc(26,"getHeaderCheckbox(): MdcCheckbox | undefined"),o.Qb(),o.Rb(27,"td"),o.xc(28,"Retrieve a reference to the header row checkbox."),o.Qb(),o.Qb(),o.Rb(29,"tr"),o.Rb(30,"td"),o.xc(31,"getRows(): MDCDataTableRow[]"),o.Qb(),o.Rb(32,"td"),o.xc(33,"Return an array of all MDCDataTableRow objects."),o.Qb(),o.Qb(),o.Rb(34,"tr"),o.Rb(35,"td"),o.xc(36,"getSelectedRowIds(): "),o.Rb(37,"pre"),o.Mb(38,"code",4),o.Qb(),o.Qb(),o.Rb(39,"td"),o.xc(40,"Returns array of selected row ids."),o.Qb(),o.Qb(),o.Rb(41,"tr"),o.Rb(42,"td"),o.xc(43,"setSelectedRowIds(rowIds: string[]): void"),o.Qb(),o.Rb(44,"td"),o.xc(45,"Array of row ids that needs to be selected."),o.Qb(),o.Qb(),o.Qb(),o.Qb(),o.Rb(46,"h4",3),o.xc(47,"Events"),o.Qb(),o.Rb(48,"table"),o.Rb(49,"tbody"),o.Rb(50,"tr"),o.Rb(51,"td"),o.xc(52,"selectionChanged: MDCDataTableRowSelectionChangedEvent "),o.Rb(53,"pre"),o.Mb(54,"code",5),o.Qb(),o.Qb(),o.Rb(55,"td"),o.xc(56,"Event emitted when row checkbox is checked or unchecked. "),o.Qb(),o.Qb(),o.Rb(57,"tr"),o.Rb(58,"td"),o.xc(59,"selectedAll"),o.Qb(),o.Rb(60,"td"),o.xc(61,"Event emitted when header row checkbox is checked."),o.Qb(),o.Qb(),o.Rb(62,"tr"),o.Rb(63,"td"),o.xc(64,"unselectedAll"),o.Qb(),o.Rb(65,"td"),o.xc(66,"Event emitted when header row checkbox is unchecked. "),o.Qb(),o.Qb(),o.Qb(),o.Qb(),o.Qb(),o.Rb(67,"div",0),o.Rb(68,"h3",1),o.xc(69,"MDCDataTableTable"),o.Qb(),o.xc(70," Mandatory. Table element. Added to table HTML tag. "),o.Rb(71,"p"),o.xc(72," Selector: "),o.Rb(73,"span",2),o.xc(74,"mdcDataTableTable"),o.Qb(),o.Qb(),o.xc(75," Exported as: "),o.Rb(76,"span",2),o.xc(77,"mdcDataTableTable"),o.Qb(),o.Qb(),o.Rb(78,"div",0),o.Rb(79,"h3",1),o.xc(80,"MDCDataTableHeaderRow"),o.Qb(),o.xc(81," Mandatory. Table header row element. Added to thead > tr HTML tag. "),o.Rb(82,"p"),o.xc(83," Selector: "),o.Rb(84,"span",2),o.xc(85,"mdcDataTableHeaderRow"),o.Qb(),o.Qb(),o.xc(86," Exported as: "),o.Rb(87,"span",2),o.xc(88,"mdcDataTableHeaderRow"),o.Qb(),o.Qb(),o.Rb(89,"div",0),o.Rb(90,"h3",1),o.xc(91,"MDCDataTableHeaderCell"),o.Qb(),o.Rb(92,"p"),o.xc(93," Selector: "),o.Rb(94,"span",2),o.xc(95,"mdcDataTableHeaderCell"),o.Qb(),o.Qb(),o.xc(96," Exported as: "),o.Rb(97,"span",2),o.xc(98,"mdcDataTableHeaderCell"),o.Qb(),o.Rb(99,"h4",3),o.xc(100,"Properties"),o.Qb(),o.Rb(101,"table"),o.Rb(102,"thead"),o.Rb(103,"tr"),o.Rb(104,"th"),o.xc(105,"Name"),o.Qb(),o.Rb(106,"th"),o.xc(107,"Description"),o.Qb(),o.Qb(),o.Qb(),o.Rb(108,"tbody"),o.Rb(109,"tr"),o.Rb(110,"td"),o.xc(111,"numeric: boolean"),o.Qb(),o.Rb(112,"td"),o.xc(113,"Optional. Table header cell element that maps to numeric cells."),o.Qb(),o.Qb(),o.Qb(),o.Qb(),o.Qb(),o.Rb(114,"div",0),o.Rb(115,"h3",1),o.xc(116,"MDCDataTableContent"),o.Qb(),o.xc(117," Mandatory. Table body element. Added to tbody HTML tag. "),o.Rb(118,"p"),o.xc(119," Selector: "),o.Rb(120,"span",2),o.xc(121,"mdcDataTableContent"),o.Qb(),o.Qb(),o.xc(122," Exported as: "),o.Rb(123,"span",2),o.xc(124,"mdcDataTableContent"),o.Qb(),o.Qb(),o.Rb(125,"div",0),o.Rb(126,"h3",1),o.xc(127,"MDCDataTableRow"),o.Qb(),o.Rb(128,"p"),o.xc(129," Selector: "),o.Rb(130,"span",2),o.xc(131,"mdcDataTableRow"),o.Qb(),o.Qb(),o.xc(132," Exported as: "),o.Rb(133,"span",2),o.xc(134,"mdcDataTableRow"),o.Qb(),o.Rb(135,"h4",3),o.xc(136,"Properties"),o.Qb(),o.Rb(137,"table"),o.Rb(138,"thead"),o.Rb(139,"tr"),o.Rb(140,"th"),o.xc(141,"Name"),o.Qb(),o.Rb(142,"th"),o.xc(143,"Description"),o.Qb(),o.Qb(),o.Qb(),o.Rb(144,"tbody"),o.Rb(145,"tr"),o.Rb(146,"td"),o.xc(147,"selected: boolean"),o.Qb(),o.Rb(148,"td"),o.xc(149,"Optional. Modifier class added to mdc-data-table__row when table row is selected."),o.Qb(),o.Qb(),o.Qb(),o.Qb(),o.Qb(),o.Rb(150,"div",0),o.Rb(151,"h3",1),o.xc(152,"MDCDataTableCell"),o.Qb(),o.Rb(153,"p"),o.xc(154," Selector: "),o.Rb(155,"span",2),o.xc(156,"mdcDataTableCell"),o.Qb(),o.Qb(),o.xc(157," Exported as: "),o.Rb(158,"span",2),o.xc(159,"mdcDataTableCell"),o.Qb(),o.Rb(160,"h4",3),o.xc(161,"Properties"),o.Qb(),o.Rb(162,"table"),o.Rb(163,"thead"),o.Rb(164,"tr"),o.Rb(165,"th"),o.xc(166,"Name"),o.Qb(),o.Rb(167,"th"),o.xc(168,"Description"),o.Qb(),o.Qb(),o.Qb(),o.Rb(169,"tbody"),o.Rb(170,"tr"),o.Rb(171,"td"),o.xc(172,"checkbox: boolean"),o.Qb(),o.Rb(173,"td"),o.xc(174,"Optional. Table cell element that contains mdc-checkbox."),o.Qb(),o.Qb(),o.Rb(175,"tr"),o.Rb(176,"td"),o.xc(177,"numeric: boolean"),o.Qb(),o.Rb(178,"td"),o.xc(179,"Optional. Table cell element that maps to numeric cells."),o.Qb(),o.Qb(),o.Qb(),o.Qb(),o.Qb())},directives:[l.i,l.l,n.b],encapsulation:2}),e})(),u=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=o.Fb({type:e,selectors:[["ng-component"]],decls:137,vars:0,consts:[[1,"docs-api"],["mdcSubtitle2",""]],template:function(e,t){1&e&&(o.Rb(0,"div",0),o.Rb(1,"h4",1),o.xc(2,"Sass Mixins"),o.Qb(),o.Rb(3,"table"),o.Rb(4,"thead"),o.Rb(5,"tr"),o.Rb(6,"th"),o.xc(7,"Mixin"),o.Qb(),o.Rb(8,"th"),o.xc(9,"Description"),o.Qb(),o.Qb(),o.Qb(),o.Rb(10,"tbody"),o.Rb(11,"tr"),o.Rb(12,"td"),o.Rb(13,"code"),o.xc(14,"fill-color($color)"),o.Qb(),o.Qb(),o.Rb(15,"td"),o.xc(16,"Sets the background color of data-table surface."),o.Qb(),o.Qb(),o.Rb(17,"tr"),o.Rb(18,"td"),o.Rb(19,"code"),o.xc(20,"row-fill-color($color)"),o.Qb(),o.Qb(),o.Rb(21,"td"),o.xc(22,"Sets the background color of table row container."),o.Qb(),o.Qb(),o.Rb(23,"tr"),o.Rb(24,"td"),o.Rb(25,"code"),o.xc(26,"header-row-fill-color($color)"),o.Qb(),o.Qb(),o.Rb(27,"td"),o.xc(28,"Sets the background color of table header row container."),o.Qb(),o.Qb(),o.Rb(29,"tr"),o.Rb(30,"td"),o.Rb(31,"code"),o.xc(32,"selected-row-fill-color($color)"),o.Qb(),o.Qb(),o.Rb(33,"td"),o.xc(34,"Sets the background color of selected row container."),o.Qb(),o.Qb(),o.Rb(35,"tr"),o.Rb(36,"td"),o.Rb(37,"code"),o.xc(38,"checked-icon-color($color)"),o.Qb(),o.Qb(),o.Rb(39,"td"),o.xc(40,"Sets the checked icon color."),o.Qb(),o.Qb(),o.Rb(41,"tr"),o.Rb(42,"td"),o.Rb(43,"code"),o.xc(44,"divider-color($color)"),o.Qb(),o.Qb(),o.Rb(45,"td"),o.xc(46,"Sets the table rows divider color."),o.Qb(),o.Qb(),o.Rb(47,"tr"),o.Rb(48,"td"),o.Rb(49,"code"),o.xc(50,"divider-size($size)"),o.Qb(),o.Qb(),o.Rb(51,"td"),o.xc(52,"Sets the table rows divider size."),o.Qb(),o.Qb(),o.Rb(53,"tr"),o.Rb(54,"td"),o.Rb(55,"code"),o.xc(56,"row-hover-fill-color($color)"),o.Qb(),o.Qb(),o.Rb(57,"td"),o.xc(58,"Sets the background color of table row on hover."),o.Qb(),o.Qb(),o.Rb(59,"tr"),o.Rb(60,"td"),o.Rb(61,"code"),o.xc(62,"header-row-text-color($color)"),o.Qb(),o.Qb(),o.Rb(63,"td"),o.xc(64,"Sets the header row text color."),o.Qb(),o.Qb(),o.Rb(65,"tr"),o.Rb(66,"td"),o.Rb(67,"code"),o.xc(68,"row-text-color($color)"),o.Qb(),o.Qb(),o.Rb(69,"td"),o.xc(70,"Sets the row text color."),o.Qb(),o.Qb(),o.Rb(71,"tr"),o.Rb(72,"td"),o.Rb(73,"code"),o.xc(74,"shape-radius($radius)"),o.Qb(),o.Qb(),o.Rb(75,"td"),o.xc(76,"Sets the rounded shape with given radius size. "),o.Rb(77,"code"),o.xc(78,"$radius"),o.Qb(),o.xc(79," can be single radius or list radius values up to 4 list size."),o.Qb(),o.Qb(),o.Rb(80,"tr"),o.Rb(81,"td"),o.Rb(82,"code"),o.xc(83,"stroke-size($size)"),o.Qb(),o.Qb(),o.Rb(84,"td"),o.xc(85,"Sets the border size of data-table."),o.Qb(),o.Qb(),o.Rb(86,"tr"),o.Rb(87,"td"),o.Rb(88,"code"),o.xc(89,"stroke-color($color)"),o.Qb(),o.Qb(),o.Rb(90,"td"),o.xc(91,"Sets the border color of data-table."),o.Qb(),o.Qb(),o.Rb(92,"tr"),o.Rb(93,"td"),o.Rb(94,"code"),o.xc(95,"header-cell-height($height)"),o.Qb(),o.Qb(),o.Rb(96,"td"),o.xc(97,"Sets table header cell height."),o.Qb(),o.Qb(),o.Rb(98,"tr"),o.Rb(99,"td"),o.Rb(100,"code"),o.xc(101,"cell-height($height)"),o.Qb(),o.Qb(),o.Rb(102,"td"),o.xc(103,"Sets table cell height."),o.Qb(),o.Qb(),o.Rb(104,"tr"),o.Rb(105,"td"),o.Rb(106,"code"),o.xc(107,"cell-padding($leading-padding, $trailing-padding)"),o.Qb(),o.Qb(),o.Rb(108,"td"),o.xc(109,"Sets leading & trailing padding for all cells."),o.Qb(),o.Qb(),o.Rb(110,"tr"),o.Rb(111,"td"),o.Rb(112,"code"),o.xc(113,"column-widths($width-list)"),o.Qb(),o.Qb(),o.Rb(114,"td"),o.xc(115,"Sets the custom widths for each table column."),o.Qb(),o.Qb(),o.Rb(116,"tr"),o.Rb(117,"td"),o.Rb(118,"code"),o.xc(119,"density($density-scale)"),o.Qb(),o.Qb(),o.Rb(120,"td"),o.xc(121,"Sets density scale to data table. Supported density scale values "),o.Rb(122,"code"),o.xc(123,"-4"),o.Qb(),o.xc(124,", "),o.Rb(125,"code"),o.xc(126,"-3"),o.Qb(),o.xc(127,", "),o.Rb(128,"code"),o.xc(129,"-2"),o.Qb(),o.xc(130,", "),o.Rb(131,"code"),o.xc(132,"-1"),o.Qb(),o.xc(133,", "),o.Rb(134,"code"),o.xc(135,"0"),o.Qb(),o.xc(136,". Use corresponding density mixins of child components (such as Checkbox) to apply density scales which will be rendered inside data table as content."),o.Qb(),o.Qb(),o.Qb(),o.Qb(),o.Qb())},directives:[l.l],encapsulation:2}),e})();const D=[{path:"",component:(()=>{class e{ngOnInit(){this._componentViewer.template={title:"Data Table",description:"Data tables display information in a grid-like format of rows and columns. \n      They organize information in a way that's easy to scan, so that users can look for patterns and insights.",references:[{name:"Material Design guidelines: Data Tables",url:"https://material.io/design/components/data-tables.html"},{name:"Material Components Web",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-data-table/README.md"}],code:"import {MDCDataTableModule} from '@angular-mdc/web';",sass:"@use '@material/data-table/mdc-data-table';\n@use '@material/data-table';"}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=o.Fb({type:e,selectors:[["ng-component"]],viewQuery:function(e,t){var b;1&e&&o.tc(d.a,!0),2&e&&o.nc(b=o.ac())&&(t._componentViewer=b.first)},decls:1,vars:0,template:function(e,t){1&e&&o.Mb(0,"component-viewer")},directives:[r.a],encapsulation:2}),e})(),children:[{path:"",redirectTo:"api"},{path:"api",component:p},{path:"sass",component:u},{path:"examples",component:(()=>{class e{constructor(){this.desserts=[{checked:!1,name:"Frozen yogurt",calories:159,carbs:24,protein:4,comment:"Super tasty"},{checked:!0,name:"Ice cream sandwich",calories:237,carbs:37,protein:4.3,comment:"I like ice cream more"},{checked:!1,name:"Eclair",calories:262,carbs:16,protein:6,comment:"New filling flavor"}],this.exampleDessertsArray="desserts = [\n  {checked: false, name: 'Frozen yogurt', calories: 159, carbs: 24, protein: 4, comment: 'Super tasty'},\n  {checked: true, name: 'Ice cream sandwich', calories: 237, carbs: 37, protein: 4.3, comment: 'I like ice cream more'},\n  {checked: false, name: 'Eclair', calories: 262, carbs: 16, protein: 6, comment: 'New filling flavor'}\n];",this.exampleStandard={html:'<mdc-data-table>\n  <table mdcDataTableTable>\n    <thead>\n      <tr mdcDataTableHeaderRow>\n        <th mdcDataTableHeaderCell>Dessert</th>\n        <th mdcDataTableHeaderCell numeric>Calories</th>\n        <th mdcDataTableHeaderCell numeric>Carbs</th>\n        <th mdcDataTableHeaderCell numeric>Protein (g)</th>\n        <th mdcDataTableHeaderCell>Comments</th>\n      </tr>\n    </thead>\n    <tbody mdcDataTableContent>\n      <tr mdcDataTableRow *ngFor="let dessert of desserts">\n        <td mdcDataTableCell>{{dessert.name}}</td>\n        <td mdcDataTableCell numeric>{{dessert.calories}}</td>\n        <td mdcDataTableCell numeric>{{dessert.carbs}}</td>\n        <td mdcDataTableCell numeric>{{dessert.protein}}</td>\n        <td mdcDataTableCell>{{dessert.comment}}</td>\n      </tr>\n    </tbody>\n  </table>\n</mdc-data-table>',ts:this.exampleDessertsArray},this.exampleRowSelection={html:'<mdc-data-table (selectionChanged)="onSelectionChanged($event)"\n  (selectedAll)="onSelectedAll()" (unselectedAll)="onUnselectedAll()">\n  <table mdcDataTableTable>\n    <thead>\n      <tr mdcDataTableHeaderRow>\n        <th mdcDataTableHeaderCell>\n          <mdc-checkbox></mdc-checkbox>\n        </th>\n        <th mdcDataTableHeaderCell>Dessert</th>\n        <th mdcDataTableHeaderCell numeric>Calories</th>\n        <th mdcDataTableHeaderCell numeric>Carbs</th>\n        <th mdcDataTableHeaderCell numeric>Protein (g)</th>\n        <th mdcDataTableHeaderCell>Comments</th>\n      </tr>\n    </thead>\n    <tbody mdcDataTableContent>\n      <tr mdcDataTableRow *ngFor="let dessert of desserts" [selected]="dessert.checked">\n        <td mdcDataTableCell>\n          <mdc-checkbox [checked]="dessert.checked"></mdc-checkbox>\n        </td>\n        <td mdcDataTableCell>{{dessert.name}}</td>\n        <td mdcDataTableCell numeric>{{dessert.calories}}</td>\n        <td mdcDataTableCell numeric>{{dessert.carbs}}</td>\n        <td mdcDataTableCell numeric>{{dessert.protein}}</td>\n        <td mdcDataTableCell>{{dessert.comment}}</td>\n      </tr>\n    </tbody>\n  </table>\n</mdc-data-table>',ts:`${this.exampleDessertsArray}\n\nonSelectionChanged(event: MDCDataTableRowSelectionChangedEvent): void {\n  this.selectionChangedEvent = event;\n  this.desserts[event.index].checked = event.selected;\n}\n\nonSelectedAll(): void {\n  this.desserts.forEach(_ => _.checked = true);\n}\n\nonUnselectedAll(): void {\n  this.desserts.forEach(_ => _.checked = false);\n}`}}onSelectionChanged(e){this.selectionChangedEvent=e,this.desserts[e.index].checked=e.selected}onSelectedAll(){this.desserts.forEach(e=>e.checked=!0)}onUnselectedAll(){this.desserts.forEach(e=>e.checked=!1)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=o.Fb({type:e,selectors:[["ng-component"]],decls:45,vars:7,consts:[[1,"demo-content"],[1,"demo-content__headline"],["mdcDataTableTable",""],["mdcDataTableHeaderRow",""],["mdcDataTableHeaderCell",""],["mdcDataTableHeaderCell","","numeric",""],["mdcDataTableContent",""],["mdcDataTableRow","",4,"ngFor","ngForOf"],[3,"example"],[3,"selectionChanged","selectedAll","unselectedAll"],["mdcDataTableRow","",3,"selected",4,"ngFor","ngForOf"],["mdcDataTableRow",""],["mdcDataTableCell",""],["mdcDataTableCell","","numeric",""],["mdcDataTableRow","",3,"selected"],[3,"checked"]],template:function(e,t){1&e&&(o.Rb(0,"div",0),o.Rb(1,"h3",1),o.xc(2,"Standard"),o.Qb(),o.Rb(3,"mdc-data-table"),o.Rb(4,"table",2),o.Rb(5,"thead"),o.Rb(6,"tr",3),o.Rb(7,"th",4),o.xc(8,"Dessert"),o.Qb(),o.Rb(9,"th",5),o.xc(10,"Calories"),o.Qb(),o.Rb(11,"th",5),o.xc(12,"Carbs"),o.Qb(),o.Rb(13,"th",5),o.xc(14,"Protein (g)"),o.Qb(),o.Rb(15,"th",4),o.xc(16,"Comments"),o.Qb(),o.Qb(),o.Qb(),o.Rb(17,"tbody",6),o.vc(18,Q,11,5,"tr",7),o.Qb(),o.Qb(),o.Qb(),o.Mb(19,"example-viewer",8),o.Qb(),o.Rb(20,"div",0),o.Rb(21,"h3",1),o.xc(22,"Data Table with Row Selection"),o.Qb(),o.Rb(23,"mdc-data-table",9),o.Zb("selectionChanged",(function(e){return t.onSelectionChanged(e)}))("selectedAll",(function(){return t.onSelectedAll()}))("unselectedAll",(function(){return t.onUnselectedAll()})),o.Rb(24,"table",2),o.Rb(25,"thead"),o.Rb(26,"tr",3),o.Rb(27,"th",4),o.Mb(28,"mdc-checkbox"),o.Qb(),o.Rb(29,"th",4),o.xc(30,"Dessert"),o.Qb(),o.Rb(31,"th",5),o.xc(32,"Calories"),o.Qb(),o.Rb(33,"th",5),o.xc(34,"Carbs"),o.Qb(),o.Rb(35,"th",5),o.xc(36,"Protein (g)"),o.Qb(),o.Rb(37,"th",4),o.xc(38,"Comments"),o.Qb(),o.Qb(),o.Qb(),o.Rb(39,"tbody",6),o.vc(40,x,13,7,"tr",10),o.Qb(),o.Qb(),o.Qb(),o.Rb(41,"p"),o.xc(42),o.ec(43,"json"),o.Qb(),o.Mb(44,"example-viewer",8),o.Qb()),2&e&&(o.Bb(18),o.ic("ngForOf",t.desserts),o.Bb(1),o.ic("example",t.exampleStandard),o.Bb(21),o.ic("ngForOf",t.desserts),o.Bb(2),o.zc("Selection event: ",o.fc(43,5,t.selectionChangedEvent),""),o.Bb(2),o.ic("example",t.exampleRowSelection))},directives:[s.a,i.f,i.d,i.c,i.b,R.j,h.a,m.a,i.e,i.a],pipes:[R.f],encapsulation:2}),e})()}]}];let w=(()=>{class e{}return e.\u0275mod=o.Jb({type:e}),e.\u0275inj=o.Ib({factory:function(t){return new(t||e)},imports:[[a.e.forChild(D)],a.e]}),e})();b.d(t,"DataTableModule",(function(){return T}));let T=(()=>{class e{}return e.\u0275mod=o.Jb({type:e}),e.\u0275inj=o.Ib({factory:function(t){return new(t||e)},imports:[[c.a,w]]}),e})()}}]);