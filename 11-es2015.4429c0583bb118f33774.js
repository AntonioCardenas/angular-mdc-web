(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"+iFw":function(e,c,t){"use strict";t.r(c);var b=t("d2mR"),o=t("tyNb"),n=t("leug"),d=t("fXoL"),i=t("5l+6"),a=t("LuDt"),l=t("uwiL"),r=t("dkiD"),m=t("4G1d"),s=t("9UYg");let h=(()=>{class e{}return e.\u0275fac=function(c){return new(c||e)},e.\u0275cmp=d.Fb({type:e,selectors:[["ng-component"]],decls:108,vars:0,consts:[[1,"docs-api"],["mdcHeadline6",""],[1,"markdown-code"],["mdcSubtitle2",""]],template:function(e,c){1&e&&(d.Rb(0,"div",0),d.Rb(1,"h3",1),d.wc(2,"MdcCheckbox"),d.Qb(),d.Rb(3,"p"),d.wc(4," Selector: "),d.Rb(5,"span",2),d.wc(6,"mdc-checkbox"),d.Qb(),d.Qb(),d.wc(7," Exported as: "),d.Rb(8,"span",2),d.wc(9,"mdcCheckbox"),d.Qb(),d.Rb(10,"h4",3),d.wc(11,"Properties"),d.Qb(),d.Rb(12,"table"),d.Rb(13,"thead"),d.Rb(14,"tr"),d.Rb(15,"th"),d.wc(16,"Name"),d.Qb(),d.Rb(17,"th"),d.wc(18,"Description"),d.Qb(),d.Qb(),d.Qb(),d.Rb(19,"tbody"),d.Rb(20,"tr"),d.Rb(21,"td"),d.wc(22,"id: string"),d.Qb(),d.Rb(23,"td"),d.wc(24,"Unique Id of the checkbox (auto generated if not supplied)."),d.Qb(),d.Qb(),d.Rb(25,"tr"),d.Rb(26,"td"),d.wc(27,"name: string"),d.Qb(),d.Rb(28,"td"),d.wc(29,"Name of the checkbox."),d.Qb(),d.Qb(),d.Rb(30,"tr"),d.Rb(31,"td"),d.wc(32,"checked: boolean"),d.Qb(),d.Rb(33,"td"),d.wc(34,"Whether the checkbox is checked."),d.Qb(),d.Qb(),d.Rb(35,"tr"),d.Rb(36,"td"),d.wc(37,"value: string"),d.Qb(),d.Rb(38,"td"),d.wc(39,"The value attribute of the native input element."),d.Qb(),d.Qb(),d.Rb(40,"tr"),d.Rb(41,"td"),d.wc(42,"tabIndex: number"),d.Qb(),d.Rb(43,"td"),d.wc(44,"Set the underlying tab index of the checkbox. (Default: 0)"),d.Qb(),d.Qb(),d.Rb(45,"tr"),d.Rb(46,"td"),d.wc(47,"ariaLabel: string"),d.Qb(),d.Rb(48,"td"),d.wc(49,"Used to set the 'aria-label' attribute on the underlying input element."),d.Qb(),d.Qb(),d.Rb(50,"tr"),d.Rb(51,"td"),d.wc(52,"ariaLabelledby: string"),d.Qb(),d.Rb(53,"td"),d.wc(54,"The 'aria-labelledby' attribute takes precedence as the element's text alternative."),d.Qb(),d.Qb(),d.Rb(55,"tr"),d.Rb(56,"td"),d.wc(57,"indeterminate: boolean"),d.Qb(),d.Rb(58,"td"),d.wc(59,"Represent a checkbox with three states (e.g. a nested list of checkable items)."),d.Qb(),d.Qb(),d.Rb(60,"tr"),d.Rb(61,"td"),d.wc(62,"disabled: boolean"),d.Qb(),d.Rb(63,"td"),d.wc(64,"Disables the component."),d.Qb(),d.Qb(),d.Rb(65,"tr"),d.Rb(66,"td"),d.wc(67,"disableRipple: boolean"),d.Qb(),d.Rb(68,"td"),d.wc(69,"Whether ripple ink is disabled."),d.Qb(),d.Qb(),d.Rb(70,"tr"),d.Rb(71,"td"),d.wc(72,"indeterminateToChecked: boolean"),d.Qb(),d.Rb(73,"td"),d.wc(74,"Whether the checkbox should go to checked state or unchecked when toggled from indeterminate state."),d.Qb(),d.Qb(),d.Rb(75,"tr"),d.Rb(76,"td"),d.wc(77,"touch: boolean"),d.Qb(),d.Rb(78,"td"),d.wc(79,"Set the component touch target to 48 x 48 px."),d.Qb(),d.Qb(),d.Qb(),d.Qb(),d.Rb(80,"h4",3),d.wc(81,"Methods"),d.Qb(),d.Rb(82,"table"),d.Rb(83,"tbody"),d.Rb(84,"tr"),d.Rb(85,"td"),d.wc(86,"focus()"),d.Qb(),d.Rb(87,"td"),d.wc(88,"Set focus to the checkbox."),d.Qb(),d.Qb(),d.Rb(89,"tr"),d.Rb(90,"td"),d.wc(91,"toggle(checked?: boolean)"),d.Qb(),d.Rb(92,"td"),d.wc(93,"Toggles checkbox via user action. When it is indeterminate, toggle can go to checked or unchecked, depending on state."),d.Qb(),d.Qb(),d.Qb(),d.Qb(),d.Rb(94,"h4",3),d.wc(95,"Events"),d.Qb(),d.Rb(96,"table"),d.Rb(97,"tbody"),d.Rb(98,"tr"),d.Rb(99,"td"),d.wc(100,"change(source: MdcCheckBox, checked: boolean)"),d.Qb(),d.Rb(101,"td"),d.wc(102,"Event dispatched on checked change."),d.Qb(),d.Qb(),d.Rb(103,"tr"),d.Rb(104,"td"),d.wc(105,"indeterminateChange(source: MdcCheckbox, indeterminate: boolean)"),d.Qb(),d.Rb(106,"td"),d.wc(107,"Emit when checkbox goes in and out of indeterminate state, but not when set to checked."),d.Qb(),d.Qb(),d.Qb(),d.Qb(),d.Qb())},directives:[i.i,i.l],encapsulation:2}),e})(),k=(()=>{class e{}return e.\u0275fac=function(c){return new(c||e)},e.\u0275cmp=d.Fb({type:e,selectors:[["ng-component"]],decls:31,vars:0,consts:[[1,"docs-api"],["mdcSubtitle2",""]],template:function(e,c){1&e&&(d.Rb(0,"div",0),d.Rb(1,"h4",1),d.wc(2,"Sass Mixins"),d.Qb(),d.Rb(3,"p"),d.wc(4," The following mixins apply only to enabled checkboxes. It is not currently possible to customize the color of a disabled checkbox. "),d.Qb(),d.Rb(5,"table"),d.Rb(6,"thead"),d.Rb(7,"tr"),d.Rb(8,"th"),d.wc(9,"Mixin"),d.Qb(),d.Rb(10,"th"),d.wc(11,"Description"),d.Qb(),d.Qb(),d.Qb(),d.Rb(12,"tbody"),d.Rb(13,"tr"),d.Rb(14,"td"),d.Rb(15,"code"),d.wc(16,"container-colors($unmarked-stroke-color, $unmarked-fill-color, $marked-stroke-color, $marked-fill-color, $generate-keyframes)"),d.Qb(),d.Qb(),d.Rb(17,"td"),d.wc(18,"Generates CSS classes to set and animate the stroke color and/or container fill color of a checkbox"),d.Qb(),d.Qb(),d.Rb(19,"tr"),d.Rb(20,"td"),d.Rb(21,"code"),d.wc(22,"ink-color($color)"),d.Qb(),d.Qb(),d.Rb(23,"td"),d.wc(24,"Sets the ink color of the checked and indeterminate icons"),d.Qb(),d.Qb(),d.Rb(25,"tr"),d.Rb(26,"td"),d.Rb(27,"code"),d.wc(28,"focus-indicator-color($color)"),d.Qb(),d.Qb(),d.Rb(29,"td"),d.wc(30,"Sets the color of the focus indicator"),d.Qb(),d.Qb(),d.Qb(),d.Qb(),d.Qb())},directives:[i.l],encapsulation:2}),e})();const u=[{path:"",component:(()=>{class e{ngOnInit(){this._componentViewer.template={title:"Checkbox",description:"Checkboxes allow the user to select one or more items from a set.",references:[{name:"Material Design guidelines: Checkbox",url:"https://material.io/design/components/selection-controls.html#checkboxes"},{name:"Material Components Web",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-checkbox/README.md"}],code:"import {MdcCheckboxModule} from '@angular-mdc/web';",sass:"@use '@material/checkbox/mdc-checkbox';\n@use '@material/checkbox';"}}}return e.\u0275fac=function(c){return new(c||e)},e.\u0275cmp=d.Fb({type:e,selectors:[["ng-component"]],viewQuery:function(e,c){var t;1&e&&d.tc(n.a,!0),2&e&&d.nc(t=d.ac())&&(c._componentViewer=t.first)},decls:1,vars:0,template:function(e,c){1&e&&d.Mb(0,"component-viewer")},directives:[a.a],encapsulation:2}),e})(),children:[{path:"",redirectTo:"api"},{path:"api",component:h},{path:"sass",component:k},{path:"examples",component:(()=>{class e{constructor(){this.exampleSimple={html:'<mdc-checkbox></mdc-checkbox>\n\n<mdc-checkbox checked></mdc-checkbox>\n\n<mdc-checkbox disabled></mdc-checkbox>\n\n<mdc-checkbox checked disabled></mdc-checkbox>\n\n<mdc-checkbox indeterminate></mdc-checkbox>\n\n<mdc-checkbox indeterminate indeterminateToChecked="false"></mdc-checkbox>'},this.exampleLabel={html:"<mdc-form-field>\n  <mdc-checkbox></mdc-checkbox>\n  <label>Label</label>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-checkbox disabled></mdc-checkbox>\n  <label>Disabled</label>\n</mdc-form-field>\n\n<mdc-form-field alignEnd>\n  <mdc-checkbox></mdc-checkbox>\n  <label>Label</label>\n</mdc-form-field>"},this.exampleDynamic={html:'<mdc-form-field #formField>\n  <mdc-checkbox #cb indeterminateToChecked (change)="onChange($event)"></mdc-checkbox>\n  <label>Checkbox value is {{cb.checked}}</label>\n</mdc-form-field>',ts:"import { MdcCheckbox, MdcCheckboxChange } from '@angular-mdc/web';\n\nonChange(event: MdcCheckboxChange) {\n  console.log(event.checked);\n}\n\ntoggle(cb: MdcCheckbox): void {\n  cb.toggle();\n}"},this.exampleTheme={html:'<mdc-form-field>\n  <mdc-checkbox class="demo-checkbox--custom-all"></mdc-checkbox>\n  <label>Custom Stroke/Fill/Ink</label>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-checkbox class="demo-checkbox--custom-stroke-and-fill"></mdc-checkbox>\n  <label>Custom Stroke and Fill</label>\n</mdc-form-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_checkbox.scss"},this.exampleAccessibility={html:'<div class="mdc-touch-target-wrapper">\n  <mdc-form-field>\n    <mdc-checkbox touch></mdc-checkbox>\n    <label>My Accessible Checkbox</label>\n  </mdc-form-field>\n</div>'}}onChange(e){console.log(e.checked)}toggle(e){e.toggle()}}return e.\u0275fac=function(c){return new(c||e)},e.\u0275cmp=d.Fb({type:e,selectors:[["ng-component"]],decls:77,vars:10,consts:[[1,"demo-content"],["checked",""],["disabled",""],["checked","","disabled",""],["indeterminate",""],["indeterminate","","indeterminateToChecked","false"],[3,"example"],[1,"demo-layout__column"],[1,"demo-container"],["alignEnd",""],[1,"demo-layout__row"],["mdc-button","",3,"click"],["formField",""],["indeterminateToChecked","",3,"change"],["cb",""],[1,"demo-content__headline"],[1,"demo-checkbox--custom-all"],[1,"demo-checkbox--custom-stroke-and-fill"],[1,"mdc-touch-target-wrapper"],["touch",""]],template:function(e,c){if(1&e){const e=d.Sb();d.Rb(0,"div",0),d.Mb(1,"mdc-checkbox"),d.Mb(2,"mdc-checkbox",1),d.Mb(3,"mdc-checkbox",2),d.Mb(4,"mdc-checkbox",3),d.Mb(5,"mdc-checkbox",4),d.Mb(6,"mdc-checkbox",5),d.Mb(7,"example-viewer",6),d.Qb(),d.Rb(8,"div",0),d.Rb(9,"div",7),d.Rb(10,"div",8),d.Rb(11,"mdc-form-field"),d.Mb(12,"mdc-checkbox"),d.Rb(13,"label"),d.wc(14,"Label"),d.Qb(),d.Qb(),d.Qb(),d.Rb(15,"div",8),d.Rb(16,"mdc-form-field"),d.Mb(17,"mdc-checkbox",2),d.Rb(18,"label"),d.wc(19,"Disabled"),d.Qb(),d.Qb(),d.Qb(),d.Rb(20,"div",8),d.Rb(21,"mdc-form-field",9),d.Mb(22,"mdc-checkbox"),d.Rb(23,"label"),d.wc(24,"Label (RTL)"),d.Qb(),d.Qb(),d.Qb(),d.Qb(),d.Mb(25,"example-viewer",6),d.Qb(),d.Rb(26,"div",0),d.Rb(27,"div",10),d.Rb(28,"button",11),d.Zb("click",(function(){return d.pc(e),d.oc(44).indeterminate=!0})),d.wc(29,"Indeterminate"),d.Qb(),d.Rb(30,"button",11),d.Zb("click",(function(){d.pc(e);const t=d.oc(44);return c.toggle(t)})),d.wc(31,"Toggle"),d.Qb(),d.Qb(),d.Rb(32,"div",10),d.Rb(33,"button",11),d.Zb("click",(function(){d.pc(e);const c=d.oc(44);return c.indeterminateToChecked=!c.indeterminateToChecked})),d.wc(34),d.Qb(),d.Rb(35,"button",11),d.Zb("click",(function(){d.pc(e);const c=d.oc(42);return c.alignEnd=!c.alignEnd})),d.wc(36),d.Qb(),d.Rb(37,"button",11),d.Zb("click",(function(){d.pc(e);const c=d.oc(44);return c.disabled=!c.disabled})),d.wc(38),d.Qb(),d.Rb(39,"button",11),d.Zb("click",(function(){d.pc(e);const c=d.oc(44);return c.disableRipple=!c.disableRipple})),d.wc(40),d.Qb(),d.Qb(),d.Rb(41,"mdc-form-field",null,12),d.Rb(43,"mdc-checkbox",13,14),d.Zb("change",(function(e){return c.onChange(e)})),d.Qb(),d.Rb(45,"label"),d.wc(46),d.Qb(),d.Qb(),d.Mb(47,"example-viewer",6),d.Qb(),d.Rb(48,"div",0),d.Rb(49,"h3",15),d.wc(50,"Theme"),d.Qb(),d.Rb(51,"div",7),d.Rb(52,"div",8),d.Rb(53,"mdc-form-field"),d.Mb(54,"mdc-checkbox",16),d.Rb(55,"label"),d.wc(56,"Custom Stroke/Fill/Ink"),d.Qb(),d.Qb(),d.Qb(),d.Rb(57,"div",8),d.Rb(58,"mdc-form-field"),d.Mb(59,"mdc-checkbox",17),d.Rb(60,"label"),d.wc(61,"Custom Stroke and Fill"),d.Qb(),d.Qb(),d.Qb(),d.Qb(),d.Mb(62,"example-viewer",6),d.Qb(),d.Rb(63,"div",0),d.Rb(64,"h3",15),d.wc(65,"Accessibility"),d.Qb(),d.Rb(66,"p"),d.wc(67," Material Design spec advises that touch targets should be at least 48 x 48 px. To meet this requirement, add the `touch` property. "),d.Qb(),d.Rb(68,"p"),d.wc(69," Note that the outer mdc-touch-target-wrapper element is only necessary if you want to avoid potentially overlapping touch targets on adjacent elements (due to collapsing margins). "),d.Qb(),d.Rb(70,"div",10),d.Rb(71,"div",18),d.Rb(72,"mdc-form-field"),d.Mb(73,"mdc-checkbox",19),d.Rb(74,"label"),d.wc(75,"My Accessible Checkbox"),d.Qb(),d.Qb(),d.Qb(),d.Qb(),d.Mb(76,"example-viewer",6),d.Qb()}if(2&e){const e=d.oc(42),t=d.oc(44);d.Bb(7),d.ic("example",c.exampleSimple),d.Bb(18),d.ic("example",c.exampleLabel),d.Bb(9),d.yc(" Indeterminate To Checked: ",t.indeterminateToChecked?"On":"Off",""),d.Bb(2),d.yc("RTL: ",e.alignEnd?"On":"Off",""),d.Bb(2),d.yc("Disabled: ",t.disabled?"On":"Off",""),d.Bb(2),d.yc("Ripple: ",t.disableRipple?"Off":"On",""),d.Bb(6),d.yc("Checkbox value is ",t.checked,""),d.Bb(1),d.ic("example",c.exampleDynamic),d.Bb(15),d.ic("example",c.exampleTheme),d.Bb(14),d.ic("example",c.exampleAccessibility)}},directives:[l.a,r.a,m.a,s.a],encapsulation:2}),e})()}]}];let R=(()=>{class e{}return e.\u0275mod=d.Jb({type:e}),e.\u0275inj=d.Ib({factory:function(c){return new(c||e)},imports:[[o.e.forChild(u)],o.e]}),e})();t.d(c,"CheckboxModule",(function(){return p}));let p=(()=>{class e{}return e.\u0275mod=d.Jb({type:e}),e.\u0275inj=d.Ib({factory:function(c){return new(c||e)},imports:[[b.a,R]]}),e})()},leug:function(e,c,t){"use strict";var b=t("LuDt");t.d(c,"a",(function(){return b.a}))}}]);