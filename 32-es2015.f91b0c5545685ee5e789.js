(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{9085:function(e,c,t){"use strict";t.r(c),t.d(c,"SwitchModule",(function(){return u}));var n=t("d2mR"),i=t("tyNb"),m=t("leug"),o=t("fXoL"),a=t("LuDt"),l=t("w0pw"),s=t("ywDi"),d=t("4G1d"),b=t("dkiD"),r=t("9UYg"),h=t("3Pt+");const w=[{path:"",component:(()=>{class e{ngOnInit(){this._componentViewer.template={title:"Switches",description:"Buttons allow users to take actions, and make choices, with a single tap.",references:[{name:"Material Design guidelines: Switches",url:"https://material.io/design/components/selection-controls.html#switches"},{name:"Material Components Web",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-switch/README.md"}],mdcUrls:[{name:"Sass Mixins",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-switch/README.md#sass-mixins"}],code:"import {MdcSwitchModule} from '@angular-mdc/web/switch';",sass:"@use '@material/switch/mdc-switch';\n@use '@material/switch';"}}}return e.\u0275fac=function(c){return new(c||e)},e.\u0275cmp=o.Fb({type:e,selectors:[["ng-component"]],viewQuery:function(e,c){var t;1&e&&o.tc(m.b,!0),2&e&&o.nc(t=o.ac())&&(c._componentViewer=t.first)},decls:1,vars:0,template:function(e,c){1&e&&o.Mb(0,"component-viewer")},directives:[a.a],encapsulation:2}),e})(),children:[{path:"",redirectTo:"api"},{path:"api",component:(()=>{class e{ngOnInit(){this._componentApi.docApi={sections:[{header:"MdcSwitch",selectors:["mdc-switch"],exportedAs:"mdcSwitch",categories:[{name:"Properties",items:[{name:"id: string",summary:"Unique Id of the switch (auto generated if not supplied)."},{name:"name: string",summary:"Name of the switch."},{name:"ariaLabel: string",summary:"Used to set the 'aria-label' attribute on the underlying input element."},{name:"ariaLabelledby: string",summary:"The 'aria-labelledby' attribute takes precedence as the element's text alternative."},{name:"tabIndex: number",summary:"Set the underlying tab index of the switch. (Default: 0)"},{name:"checked: boolean",summary:"Use to set the checked value."},{name:"disabled: boolean",summary:"Disables the switch."},{name:"required: boolean",summary:"Whether the switch is required."}]},{name:"Methods",items:[{name:"toggle()",summary:"Toggle the checked state of the switch."},{name:"focus()",summary:"Set focus to the switch."}]},{name:"Events",items:[{name:"change(source: MdcSwitch, checked: boolean)",summary:"Event dispatched on value change."}]}]}]}}}return e.\u0275fac=function(c){return new(c||e)},e.\u0275cmp=o.Fb({type:e,selectors:[["ng-component"]],viewQuery:function(e,c){var t;1&e&&o.tc(m.a,!0),2&e&&o.nc(t=o.ac())&&(c._componentApi=t.first)},decls:1,vars:0,template:function(e,c){1&e&&o.Mb(0,"component-api")},directives:[l.a],encapsulation:2}),e})()},{path:"examples",component:(()=>{class e{constructor(){this.isSwitchOn=!1,this.exampleBasic={html:"<mdc-switch></mdc-switch>\n\n<mdc-form-field>\n  <mdc-switch></mdc-switch>\n  <label>off/on</label>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-switch disabled></mdc-switch>\n  <label>off/on</label>\n</mdc-form-field>\n\n<mdc-form-field alignEnd>\n  <mdc-switch></mdc-switch>\n  <label>RTL</label>\n</mdc-form-field>"},this.exampleChangeEvent={html:'<mdc-form-field>\n  <mdc-switch (change)="onChange($event)"></mdc-switch>\n  <label>off/on</label>\n</mdc-form-field>',ts:"import { MdcSwitchChange } from '@angular-mdc/web';\n\nonChange(evt: MdcSwitchChange): void {\n  console.log(evt.checked);\n}"},this.exampleCustom={html:'<mdc-form-field class="custom-switch__label-left-margin">\n  <mdc-switch></mdc-switch>\n  <label>Label margin</label>\n</mdc-form-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_switch.scss"},this.exampleNgModel={html:'<mdc-form-field>\n  <mdc-switch [(ngModel)]="isSwitchOn"></mdc-switch>\n  <label>off/on</label>\n</mdc-form-field>\n\n<p>NgModel value: {{isSwitchOn}}</p>',ts:"isSwitchOn: boolean = false;"},this.exampleNgModelForm={html:'<form #demoForm="ngForm" id="demoForm">\n  <mdc-form-field>\n    <mdc-switch #demoSwitch ngModel name="demoSwitch" #demoSwitchModel="ngModel"></mdc-switch>\n    <label>off/on</label>\n  </mdc-form-field>\n</form>\n\n<p>Dirty: {{ demoSwitchModel.dirty }}</p>\n<p>Touched: {{ demoSwitchModel.touched }}</p>\n<p>Value: {{ demoSwitchModel.value }}</p>'},this.exampleTheme={html:'<mdc-form-field>\n  <mdc-switch class="demo-switch--custom"></mdc-switch>\n  <label>Custom Theme</label>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-switch class="custom-switch--thumb-color"></mdc-switch>\n  <label>Thumb Color</label>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-switch class="custom-switch--track-color"></mdc-switch>\n  <label>Track Color</label>\n</mdc-form-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_switch.scss"}}onChange(e){this.changeEvent=e.checked}}return e.\u0275fac=function(c){return new(c||e)},e.\u0275cmp=o.Fb({type:e,selectors:[["ng-component"]],decls:92,vars:13,consts:[[1,"demo-content"],[1,"demo-layout__row"],[1,"demo-container",2,"align-items","center","padding","6px"],[1,"demo-container"],["disabled",""],["alignEnd",""],[3,"example"],[1,"demo-content__headline"],[3,"change"],["mdc-button","",3,"click"],["demoformfield",""],["name","demoswitch",3,"ngModel","ngModelChange"],["demoswitch",""],["id","demoForm"],["demoForm","ngForm"],["ngModel","","name","demoSwitch"],["demoSwitch","","demoSwitchModel","ngModel"],[1,"custom-switch__label-left-margin"],[1,"demo-switch--custom"],[1,"custom-switch--thumb-color"],[1,"custom-switch--track-color"]],template:function(e,c){if(1&e){const e=o.Sb();o.Rb(0,"div",0),o.Rb(1,"div",1),o.Rb(2,"div",2),o.Mb(3,"mdc-switch"),o.Qb(),o.Rb(4,"div",3),o.Rb(5,"mdc-form-field"),o.Mb(6,"mdc-switch"),o.Rb(7,"label"),o.wc(8,"off/on"),o.Qb(),o.Qb(),o.Qb(),o.Rb(9,"div",3),o.Rb(10,"mdc-form-field"),o.Mb(11,"mdc-switch",4),o.Rb(12,"label"),o.wc(13,"Disabled"),o.Qb(),o.Qb(),o.Qb(),o.Rb(14,"div",3),o.Rb(15,"mdc-form-field",5),o.Mb(16,"mdc-switch"),o.Rb(17,"label"),o.wc(18,"RTL"),o.Qb(),o.Qb(),o.Qb(),o.Qb(),o.Mb(19,"example-viewer",6),o.Qb(),o.Rb(20,"div",0),o.Rb(21,"h3",7),o.wc(22,"Change event"),o.Qb(),o.Rb(23,"mdc-form-field"),o.Rb(24,"mdc-switch",8),o.Zb("change",(function(e){return c.onChange(e)})),o.Qb(),o.Rb(25,"label"),o.wc(26,"off/on"),o.Qb(),o.Qb(),o.Rb(27,"p"),o.wc(28),o.Qb(),o.Mb(29,"example-viewer",6),o.Qb(),o.Rb(30,"div",0),o.Rb(31,"h3",7),o.wc(32,"ngModel"),o.Qb(),o.Rb(33,"div",1),o.Rb(34,"button",9),o.Zb("click",(function(){return o.pc(e),o.oc(41).toggle()})),o.wc(35,"Toggle"),o.Qb(),o.Rb(36,"button",9),o.Zb("click",(function(){o.pc(e);const c=o.oc(41);return c.disabled=!c.disabled})),o.wc(37),o.Qb(),o.Qb(),o.Rb(38,"mdc-form-field",null,10),o.Rb(40,"mdc-switch",11,12),o.Zb("ngModelChange",(function(e){return c.isSwitchOn=e})),o.Qb(),o.Rb(42,"label"),o.wc(43,"off/on"),o.Qb(),o.Qb(),o.Rb(44,"p"),o.wc(45),o.Qb(),o.Mb(46,"example-viewer",6),o.Qb(),o.Rb(47,"div",0),o.Rb(48,"h3",7),o.wc(49,"NgModel Form Directive"),o.Qb(),o.Rb(50,"form",13,14),o.Rb(52,"mdc-form-field"),o.Mb(53,"mdc-switch",15,16),o.Rb(56,"label"),o.wc(57,"off/on"),o.Qb(),o.Qb(),o.Qb(),o.Rb(58,"p"),o.wc(59),o.Qb(),o.Rb(60,"p"),o.wc(61),o.Qb(),o.Rb(62,"p"),o.wc(63),o.Qb(),o.Mb(64,"example-viewer",6),o.Qb(),o.Rb(65,"div",0),o.Rb(66,"h3",7),o.wc(67,"Custom"),o.Qb(),o.Rb(68,"mdc-form-field",17),o.Mb(69,"mdc-switch"),o.Rb(70,"label"),o.wc(71,"Label margin"),o.Qb(),o.Qb(),o.Mb(72,"example-viewer",6),o.Qb(),o.Rb(73,"div",0),o.Rb(74,"h3",7),o.wc(75,"Theme"),o.Qb(),o.Rb(76,"div",3),o.Rb(77,"mdc-form-field"),o.Mb(78,"mdc-switch",18),o.Rb(79,"label"),o.wc(80,"Custom Theme"),o.Qb(),o.Qb(),o.Qb(),o.Rb(81,"div",3),o.Rb(82,"mdc-form-field"),o.Mb(83,"mdc-switch",19),o.Rb(84,"label"),o.wc(85,"Thumb Color"),o.Qb(),o.Qb(),o.Qb(),o.Rb(86,"div",3),o.Rb(87,"mdc-form-field"),o.Mb(88,"mdc-switch",20),o.Rb(89,"label"),o.wc(90,"Track Color"),o.Qb(),o.Qb(),o.Qb(),o.Mb(91,"example-viewer",6),o.Qb()}if(2&e){const e=o.oc(41),t=o.oc(55);o.Bb(19),o.ic("example",c.exampleBasic),o.Bb(9),o.yc("Change value: ",c.changeEvent,""),o.Bb(1),o.ic("example",c.exampleChangeEvent),o.Bb(8),o.yc("Disabled: ",e.disabled?"On":"Off",""),o.Bb(3),o.ic("ngModel",c.isSwitchOn),o.Bb(5),o.yc("NgModel value: ",c.isSwitchOn,""),o.Bb(1),o.ic("example",c.exampleNgModel),o.Bb(13),o.yc("Dirty: ",t.dirty,""),o.Bb(2),o.yc("Touched: ",t.touched,""),o.Bb(2),o.yc("Value: ",t.value,""),o.Bb(1),o.ic("example",c.exampleNgModelForm),o.Bb(8),o.ic("example",c.exampleCustom),o.Bb(19),o.ic("example",c.exampleTheme)}},directives:[s.a,d.a,b.a,r.a,h.j,h.m,h.q,h.k,h.l],encapsulation:2}),e})()}]}];let f=(()=>{class e{}return e.\u0275mod=o.Jb({type:e}),e.\u0275inj=o.Ib({factory:function(c){return new(c||e)},imports:[[i.e.forChild(w)],i.e]}),e})(),u=(()=>{class e{}return e.\u0275mod=o.Jb({type:e}),e.\u0275inj=o.Ib({factory:function(c){return new(c||e)},imports:[[n.a,f]]}),e})()}}]);