(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{T82o:function(c,e,i){"use strict";i.r(e),i.d(e,"ChipsModule",(function(){return f}));var t=i("d2mR"),n=i("tyNb"),o=i("3Pt+"),h=i("leug"),m=i("fXoL"),p=i("w0pw"),a=i("LuDt"),d=i("9UYg"),s=i("zlO5"),l=i("PMnV"),b=i("VRYb"),r=i("dkiD"),u=i("ofXK");function v(c,e){if(1&c){const c=m.Sb();m.Rb(0,"mdc-chip",35),m.Zb("selectionChange",(function(e){return m.pc(c),m.dc().onChipSelection(e)})),m.wc(1),m.Qb()}if(2&c){const c=e.$implicit;m.ic("value",c.value),m.Bb(1),m.yc(" ",c.viewValue," ")}}function g(c,e){if(1&c&&(m.Rb(0,"mdc-chip",36),m.wc(1),m.Qb()),2&c){const c=e.$implicit;m.ic("value",c.value),m.Bb(1),m.yc(" ",c.viewValue," ")}}function w(c,e){if(1&c&&(m.Rb(0,"mdc-chip",36),m.wc(1),m.Qb()),2&c){const c=e.$implicit;m.ic("value",c.value),m.Bb(1),m.yc(" ",c.viewValue," ")}}let x=(()=>{class c{ngOnInit(){this._componentApi.docApi={sections:[{header:"MdcChipSet",selectors:["mdc-chip-set"],exportedAs:"mdcChipSet",categories:[{name:"Properties",items:[{name:"choice: boolean",summary:"Indicates that the chips in the set are choice chips, which allow a single selection from a set of options."},{name:"filter: boolean",summary:"Indicates that the chips in the set are filter chips, which allow multiple selection from a set of options."},{name:"input: boolean",summary:"Indicates that the chips in the set are input chips, which enable user input by converting text into chips."},{name:"touch: boolean",summary:"Set the component touch target to 48 x 48 px."}]},{name:"Methods",items:[{name:"getSelectedChipIds(): string[]",summary:"Returns an array of the IDs of all selected chips."},{name:"select(chipId: string): void",summary:"Selects the chip with the given id. Deselects all other chips if the chip set is of the choice variant."}]},{name:"Events",items:[{name:"interaction: MdcChipInteractionEvent",summary:"Indicates when a chip is interacted with (via click/tap or Enter key)"},{name:"change: MdcChipSetChange",summary:"Emitted when a chip is interacted with."}]}]},{header:"MdcChip",selectors:["mdc-chip"],exportedAs:"mdcChip",categories:[{name:"Properties",items:[{name:"choice: boolean",summary:"Indicates that the chips in the set are choice chips, which allow a single selection from a set of options."},{name:"filter: boolean",summary:"Indicates that the chips in the set are filter chips, which allow multiple selection from a set of options."},{name:"input: boolean",summary:"Indicates that the chips in the set are input chips, which enable user input by converting text into chips."},{name:"touch: boolean",summary:"Set the component touch target to 48 x 48 px."},{name:"label: string",summary:"Sets the text content of the chip."},{name:"value: string | string[]",summary:"The value of the chip. Defaults to the content inside mdc-chip."},{name:"removable: boolean",summary:"Sets whether a trailing icon click should trigger exit/removal of the chip. (Default is true)"},{name:"disableRipple: boolean",summary:"Whether ripples are disabled."}]},{name:"Methods",items:[{name:"focus()",summary:"Set focus to the chip."}]},{name:"Events",items:[{name:"interactionEvent: MdcChipInteractionEvent",summary:"Indicates the chip was interacted with (via click/tap or Enter key)"},{name:"selectionChange: MdcChipSelectionEvent",summary:"Indicates the chip's selection state has changed (for choice/filter chips)"},{name:"removalEvent: MdcChipRemovalEvent",summary:"Indicates the chip removal event from a chip set"},{name:"navigationEvent: MdcChipNavigationEvent",summary:"Indicates a navigation event has occurred on a chip"},{name:"trailingIconInteraction: MdcChipInteractionEvent",summary:"Indicates the chip's trailing icon was interacted with (via click/tap or Enter key)"}]}]},{header:"MdcChipText",summary:"Optional. Indicates the text content of the chip.",selectors:["mdc-chip-text"],exportedAs:"mdcChipText"},{header:"MdcChipIcon",summary:"Optional. Indicates an icon in the chip.",selectors:["mdc-chip-icon"],exportedAs:"mdcChipIcon",categories:[{name:"Properties",items:[{name:"leading: boolean",summary:"Indicates a leading icon in the chip"},{name:"leading: boolean",summary:"Indicates a trailing icon in the chip"}]}]}]}}}return c.\u0275fac=function(e){return new(e||c)},c.\u0275cmp=m.Fb({type:c,selectors:[["ng-component"]],viewQuery:function(c,e){var i;1&c&&m.tc(h.a,!0),2&c&&m.nc(i=m.ac())&&(e._componentApi=i.first)},decls:1,vars:0,template:function(c,e){1&c&&m.Mb(0,"component-api")},directives:[p.a],encapsulation:2}),c})();const R=[{path:"",component:(()=>{class c{ngOnInit(){this._componentViewer.template={title:"Chips",description:"Chips are compact elements that allow users to enter information, select a choice, filter content, or trigger an action.",references:[{name:"Material Design guidelines: Chips",url:"https://material.io/guidelines/components/chips.html"},{name:"Material Components Web",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-chips/README.md"}],mdcUrls:[{name:"Sass Mixins",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-chips/README.md#sass-mixins"}],code:"import {MdcChipsModule} from '@angular-mdc/web/chips';",sass:"@use '@material/chips/mdc-chips';\n@use '@material/chips';"}}}return c.\u0275fac=function(e){return new(e||c)},c.\u0275cmp=m.Fb({type:c,selectors:[["ng-component"]],viewQuery:function(c,e){var i;1&c&&m.tc(h.b,!0),2&c&&m.nc(i=m.ac())&&(e._componentViewer=i.first)},decls:1,vars:0,template:function(c,e){1&c&&m.Mb(0,"component-viewer")},directives:[a.a],encapsulation:2}),c})(),children:[{path:"",redirectTo:"api"},{path:"api",component:x},{path:"examples",component:(()=>{class c{constructor(){this.demoChipValue="pizza-1",this.ngModelValue="tacos-2",this.chipForm=new o.d({chipFood:new o.b("steak-0")}),this.foods=[{value:"steak-0",viewValue:"Steak"},{value:"pizza-1",viewValue:"Pizza"},{value:"tacos-2",viewValue:"Tacos"}],this.reuseFoods="foods: ChipFood[] = [\n  {value: 'steak-0', viewValue: 'Steak'},\n  {value: 'pizza-1', viewValue: 'Pizza'},\n  {value: 'tacos-2', viewValue: 'Tacos'},\n];",this.exampleSimple={html:"<mdc-chip-set>\n  <mdc-chip>\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-text>Jane Smith</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>"},this.exampleInput={html:'<mdc-chip-set input>\n  <mdc-chip label="Alice" (removalEvent)="onChipRemoved($event)">\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-icon trailing>cancel</mdc-chip-icon>\n  </mdc-chip>\n  <mdc-chip label="Bob" (removalEvent)="onChipRemoved($event)">\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-icon trailing>cancel</mdc-chip-icon>\n  </mdc-chip>\n  <mdc-chip label=\'Charlie\' (removalEvent)="onChipRemoved($event)">\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-icon trailing>cancel</mdc-chip-icon>\n  </mdc-chip>\n  <mdc-chip label=\'David\' (removalEvent)="onChipRemoved($event)">\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-icon trailing>cancel</mdc-chip-icon>\n  </mdc-chip>\n</mdc-chip-set>'},this.exampleChoice={html:"<mdc-chip-set choice>\n  <mdc-chip>\n    <mdc-chip-text>Get Directions</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-text>Get Weather</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-text>Add to Calendar</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>"},this.exampleFilter={html:"<mdc-chip-set filter>\n  <mdc-chip>\n    <mdc-chip-text>Tops</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-text>Bottoms</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-text>Shoes</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-text>Accessories</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>"},this.exampleFilterWithIcon={html:"<mdc-chip-set filter>\n  <mdc-chip>\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-text>Alice</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-text>Bob</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-text>Charlie</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-text>David</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>"},this.exampleAction={html:"<mdc-chip-set>\n  <mdc-chip>\n    <mdc-chip-icon leading>wb_sunny</mdc-chip-icon>\n    <mdc-chip-text>Turn on lights</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>bookmark</mdc-chip-icon>\n    <mdc-chip-text>Bookmark</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>alarm</mdc-chip-icon>\n    <mdc-chip-text>Set alarm</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>directions</mdc-chip-icon>\n    <mdc-chip-text>Get Directions</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>"},this.exampleShape={html:'<mdc-chip-set>\n  <mdc-chip class="custom-chip--shape-radius">\n    <mdc-chip-text>Turn on lights</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--shape-radius">\n    <mdc-chip-text>Bookmark</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--shape-radius">\n    <mdc-chip-text>Set alarm</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--shape-radius">\n    <mdc-chip-text>Get Directions</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_chips.scss"},this.exampleTheme={html:'<mdc-chip-set>\n  <mdc-chip class="custom-chip-secondary">\n    <mdc-chip-text>Turn on lights</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip-secondary">\n    <mdc-chip-text>Bookmark</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip-secondary">\n    <mdc-chip-text>Set alarm</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip-secondary">\n    <mdc-chip-text>Get Directions</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_chips.scss"},this.exampleCustom={html:'<mdc-chip-set>\n  <mdc-chip class="custom-chip--height">\n    <mdc-chip-text>Height</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--horizontal-padding">\n    <mdc-chip-text>Horizontal Padding</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--leading-icon-color">\n    <mdc-chip-icon leading>wb_sunny</mdc-chip-icon>\n    <mdc-chip-text>Leading Icon Color</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--trailing-icon-color">\n    <mdc-chip-text>Trailing Icon Color</mdc-chip-text>\n    <mdc-chip-icon trailing>wb_sunny</mdc-chip-icon>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--leading-icon-size">\n    <mdc-chip-icon leading>wb_sunny</mdc-chip-icon>\n    <mdc-chip-text>Leading Icon Size</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--trailing-icon-size">\n    <mdc-chip-text>Trailing Icon Size</mdc-chip-text>\n    <mdc-chip-icon trailing>wb_sunny</mdc-chip-icon>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--leading-icon-margin">\n    <mdc-chip-icon leading>wb_sunny</mdc-chip-icon>\n    <mdc-chip-text>Leading Icon Margin</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--trailing-icon-margin">\n    <mdc-chip-text>Trailing Icon Margin</mdc-chip-text>\n    <mdc-chip-icon trailing>wb_sunny</mdc-chip-icon>\n  </mdc-chip>\n</mdc-chip-set>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_chips.scss"},this.exampleValue={html:'<mdc-chip-set choice #chipSetValue (change)="onChipSetChange($event)" [value]="demoChipValue">\n  <mdc-chip *ngFor="let food of foods" [value]="food.value"\n    (interaction)="onChipInteraction($event)"\n    (selectionChange)="onChipInteraction($event)">\n    {{food.viewValue}}\n  </mdc-chip>\n</mdc-chip-set>',ts:`${this.reuseFoods}\n\ndemoChipValue = 'pizza-1';\n\nonChipSetChange(evt: MdcChipSetChange): void {\n  // do something\n}\n\nonChipInteraction(evt: MdcChipInteractionEvent): void {\n  // do something\n}\n\nonChipSelection(evt: MdcChipSelectionEvent): void {\n  // do something\n}`},this.exampleNgModel={html:'<mdc-chip-set choice [(ngModel)]="ngModelValue">\n  <mdc-chip *ngFor="let food of foods" [value]="food.value">\n    {{food.viewValue}}\n  </mdc-chip>\n</mdc-chip-set>',ts:`ngModelValue = 'tacos-2';\n\n${this.reuseFoods}`},this.exampleReactiveForm={html:'<form [formGroup]="chipForm" novalidate>\n  <mdc-chip-set choice formControlName="chipFood">\n    <mdc-chip *ngFor="let food of foods" [value]="food.value">\n      {{food.viewValue}}\n    </mdc-chip>\n  </mdc-chip-set>\n</form>',ts:`${this.reuseFoods}\n\nchipForm = new FormGroup({\n  chipFood: new FormControl('steak-0')\n});`},this.exampleAccessibility={html:'<div class="mdc-touch-target-wrapper">\n  <mdc-chip touch label="My Accessibility Chip"></mdc-chip>\n</div>'}}onChipSetChange(c){console.log(c)}onChipInteraction(c){console.log(`MdcChipInteractionEvent: ${c.chipId} : ${c.value}`)}onChipSelection(c){console.log(`MdcChipSelectionEvent: ${c.chipId} : ${c.selected}`)}onChipRemoved(c){console.log(`MdcChipRemovalEvent: ${c.chipId}`)}}return c.\u0275fac=function(e){return new(e||c)},c.\u0275cmp=m.Fb({type:c,selectors:[["ng-component"]],decls:239,vars:26,consts:[[1,"demo-content"],[1,"demo-layout__row"],["mdc-button","",3,"click"],["simplechip",""],["leading",""],[3,"example"],[1,"demo-content__headline"],["input",""],["inputchipset",""],["label","Alice",3,"removalEvent"],["trailing",""],["label","Bob",3,"removalEvent"],["label","Charlie",3,"removalEvent"],["label","David",3,"removalEvent"],["choice",""],["filter",""],["choice","",3,"value","change","interaction"],["chipSetValue",""],[3,"value","selectionChange",4,"ngFor","ngForOf"],["choice","",3,"ngModel","ngModelChange"],[3,"value",4,"ngFor","ngForOf"],["novalidate","",3,"formGroup"],["choice","","formControlName","chipFood"],[1,"custom-chip--shape-radius"],[1,"custom-chip-secondary"],[1,"custom-chip--height"],[1,"custom-chip--horizontal-padding"],[1,"custom-chip--leading-icon-color"],[1,"custom-chip--trailing-icon-color",3,"removable"],[1,"custom-chip--leading-icon-size"],[1,"custom-chip--trailing-icon-size",3,"removable"],[1,"custom-chip--leading-icon-margin"],[1,"custom-chip--trailing-icon-margin",3,"removable"],[1,"mdc-touch-target-wrapper"],["touch","","label","My Accessibility Chip"],[3,"value","selectionChange"],[3,"value"]],template:function(c,e){if(1&c){const c=m.Sb();m.Rb(0,"div",0),m.Rb(1,"div",1),m.Rb(2,"button",2),m.Zb("click",(function(){m.pc(c);const e=m.oc(6);return e.disableRipple=!e.disableRipple})),m.wc(3),m.Qb(),m.Qb(),m.Rb(4,"mdc-chip-set"),m.Rb(5,"mdc-chip",null,3),m.Rb(7,"mdc-chip-icon",4),m.wc(8,"face"),m.Qb(),m.Rb(9,"mdc-chip-text"),m.wc(10,"Jane Smith"),m.Qb(),m.Qb(),m.Qb(),m.Mb(11,"example-viewer",5),m.Qb(),m.Rb(12,"div",0),m.Rb(13,"h3",6),m.wc(14,"Input Chips"),m.Qb(),m.Rb(15,"div",1),m.Rb(16,"mdc-chip-set",7,8),m.Rb(18,"mdc-chip",9),m.Zb("removalEvent",(function(c){return e.onChipRemoved(c)})),m.Rb(19,"mdc-chip-icon",4),m.wc(20,"face"),m.Qb(),m.Rb(21,"mdc-chip-icon",10),m.wc(22,"cancel"),m.Qb(),m.Qb(),m.Rb(23,"mdc-chip",11),m.Zb("removalEvent",(function(c){return e.onChipRemoved(c)})),m.Rb(24,"mdc-chip-icon",4),m.wc(25,"face"),m.Qb(),m.Rb(26,"mdc-chip-icon",10),m.wc(27,"cancel"),m.Qb(),m.Qb(),m.Rb(28,"mdc-chip",12),m.Zb("removalEvent",(function(c){return e.onChipRemoved(c)})),m.Rb(29,"mdc-chip-icon",4),m.wc(30,"face"),m.Qb(),m.Rb(31,"mdc-chip-icon",10),m.wc(32,"cancel"),m.Qb(),m.Qb(),m.Rb(33,"mdc-chip",13),m.Zb("removalEvent",(function(c){return e.onChipRemoved(c)})),m.Rb(34,"mdc-chip-icon",4),m.wc(35,"face"),m.Qb(),m.Rb(36,"mdc-chip-icon",10),m.wc(37,"cancel"),m.Qb(),m.Qb(),m.Qb(),m.Qb(),m.Mb(38,"example-viewer",5),m.Qb(),m.Rb(39,"div",0),m.Rb(40,"h3",6),m.wc(41,"Choice Chips"),m.Qb(),m.Rb(42,"div",1),m.Rb(43,"mdc-chip-set",14),m.Rb(44,"mdc-chip"),m.Rb(45,"mdc-chip-text"),m.wc(46,"Get Directions"),m.Qb(),m.Qb(),m.Rb(47,"mdc-chip"),m.Rb(48,"mdc-chip-text"),m.wc(49,"Get Weather"),m.Qb(),m.Qb(),m.Rb(50,"mdc-chip"),m.Rb(51,"mdc-chip-text"),m.wc(52,"Add to Calendar"),m.Qb(),m.Qb(),m.Qb(),m.Qb(),m.Mb(53,"example-viewer",5),m.Qb(),m.Rb(54,"div",0),m.Rb(55,"h3",6),m.wc(56,"Filter Chips"),m.Qb(),m.Rb(57,"div",1),m.Rb(58,"mdc-chip-set",15),m.Rb(59,"mdc-chip"),m.Rb(60,"mdc-chip-text"),m.wc(61,"Tops"),m.Qb(),m.Qb(),m.Rb(62,"mdc-chip"),m.Rb(63,"mdc-chip-text"),m.wc(64,"Bottoms"),m.Qb(),m.Qb(),m.Rb(65,"mdc-chip"),m.Rb(66,"mdc-chip-text"),m.wc(67,"Shoes"),m.Qb(),m.Qb(),m.Rb(68,"mdc-chip"),m.Rb(69,"mdc-chip-text"),m.wc(70,"Accessories"),m.Qb(),m.Qb(),m.Qb(),m.Qb(),m.Mb(71,"example-viewer",5),m.Qb(),m.Rb(72,"div",0),m.Rb(73,"h3",6),m.wc(74,"Filter Chips with Leading Icon"),m.Qb(),m.Rb(75,"div",1),m.Rb(76,"mdc-chip-set",15),m.Rb(77,"mdc-chip"),m.Rb(78,"mdc-chip-icon",4),m.wc(79,"face"),m.Qb(),m.Rb(80,"mdc-chip-text"),m.wc(81,"Alice"),m.Qb(),m.Qb(),m.Rb(82,"mdc-chip"),m.Rb(83,"mdc-chip-icon",4),m.wc(84,"face"),m.Qb(),m.Rb(85,"mdc-chip-text"),m.wc(86,"Bob"),m.Qb(),m.Qb(),m.Rb(87,"mdc-chip"),m.Rb(88,"mdc-chip-icon",4),m.wc(89,"face"),m.Qb(),m.Rb(90,"mdc-chip-text"),m.wc(91,"Charlie"),m.Qb(),m.Qb(),m.Rb(92,"mdc-chip"),m.Rb(93,"mdc-chip-icon",4),m.wc(94,"face"),m.Qb(),m.Rb(95,"mdc-chip-text"),m.wc(96,"David"),m.Qb(),m.Qb(),m.Qb(),m.Qb(),m.Mb(97,"example-viewer",5),m.Qb(),m.Rb(98,"div",0),m.Rb(99,"h3",6),m.wc(100,"Action Chips"),m.Qb(),m.Rb(101,"div",1),m.Rb(102,"mdc-chip-set"),m.Rb(103,"mdc-chip"),m.Rb(104,"mdc-chip-icon",4),m.wc(105,"wb_sunny"),m.Qb(),m.Rb(106,"mdc-chip-text"),m.wc(107,"Turn on lights"),m.Qb(),m.Qb(),m.Rb(108,"mdc-chip"),m.Rb(109,"mdc-chip-icon",4),m.wc(110,"bookmark"),m.Qb(),m.Rb(111,"mdc-chip-text"),m.wc(112,"Bookmark"),m.Qb(),m.Qb(),m.Rb(113,"mdc-chip"),m.Rb(114,"mdc-chip-icon",4),m.wc(115,"alarm"),m.Qb(),m.Rb(116,"mdc-chip-text"),m.wc(117,"Set alarm"),m.Qb(),m.Qb(),m.Rb(118,"mdc-chip"),m.Rb(119,"mdc-chip-icon",4),m.wc(120,"directions"),m.Qb(),m.Rb(121,"mdc-chip-text"),m.wc(122,"Get Directions"),m.Qb(),m.Qb(),m.Qb(),m.Qb(),m.Mb(123,"example-viewer",5),m.Qb(),m.Rb(124,"div",0),m.Rb(125,"h3",6),m.wc(126,"Choice with value"),m.Qb(),m.Rb(127,"mdc-chip-set",16,17),m.Zb("change",(function(c){return e.onChipSetChange(c)}))("interaction",(function(c){return e.onChipInteraction(c)})),m.uc(129,v,2,2,"mdc-chip",18),m.Qb(),m.Rb(130,"p"),m.wc(131),m.Qb(),m.Mb(132,"example-viewer",5),m.Qb(),m.Rb(133,"div",0),m.Rb(134,"h3",6),m.wc(135,"NgModel"),m.Qb(),m.Rb(136,"mdc-chip-set",19),m.Zb("ngModelChange",(function(c){return e.ngModelValue=c})),m.uc(137,g,2,2,"mdc-chip",20),m.Qb(),m.Rb(138,"p"),m.wc(139),m.Qb(),m.Mb(140,"example-viewer",5),m.Qb(),m.Rb(141,"div",0),m.Rb(142,"h3",6),m.wc(143,"Reactive Form"),m.Qb(),m.Rb(144,"form",21),m.Rb(145,"mdc-chip-set",22),m.uc(146,w,2,2,"mdc-chip",20),m.Qb(),m.Qb(),m.Rb(147,"p"),m.wc(148),m.Qb(),m.Mb(149,"example-viewer",5),m.Qb(),m.Rb(150,"div",0),m.Rb(151,"h3",6),m.wc(152,"Shape"),m.Qb(),m.Rb(153,"div",1),m.Rb(154,"mdc-chip-set"),m.Rb(155,"mdc-chip",23),m.Rb(156,"mdc-chip-text"),m.wc(157,"Turn on lights"),m.Qb(),m.Qb(),m.Rb(158,"mdc-chip",23),m.Rb(159,"mdc-chip-text"),m.wc(160,"Bookmark"),m.Qb(),m.Qb(),m.Rb(161,"mdc-chip",23),m.Rb(162,"mdc-chip-text"),m.wc(163,"Set alarm"),m.Qb(),m.Qb(),m.Rb(164,"mdc-chip",23),m.Rb(165,"mdc-chip-text"),m.wc(166,"Get Directions"),m.Qb(),m.Qb(),m.Qb(),m.Qb(),m.Mb(167,"example-viewer",5),m.Qb(),m.Rb(168,"div",0),m.Rb(169,"h3",6),m.wc(170,"Theme"),m.Qb(),m.Rb(171,"div",1),m.Rb(172,"mdc-chip-set"),m.Rb(173,"mdc-chip",24),m.Rb(174,"mdc-chip-text"),m.wc(175,"Turn on lights"),m.Qb(),m.Qb(),m.Rb(176,"mdc-chip",24),m.Rb(177,"mdc-chip-text"),m.wc(178,"Bookmark"),m.Qb(),m.Qb(),m.Rb(179,"mdc-chip",24),m.Rb(180,"mdc-chip-text"),m.wc(181,"Set alarm"),m.Qb(),m.Qb(),m.Rb(182,"mdc-chip",24),m.Rb(183,"mdc-chip-text"),m.wc(184,"Get Directions"),m.Qb(),m.Qb(),m.Qb(),m.Qb(),m.Mb(185,"example-viewer",5),m.Qb(),m.Rb(186,"div",0),m.Rb(187,"h3",6),m.wc(188,"Custom"),m.Qb(),m.Rb(189,"div",1),m.Rb(190,"mdc-chip-set"),m.Rb(191,"mdc-chip",25),m.Rb(192,"mdc-chip-text"),m.wc(193,"Height"),m.Qb(),m.Qb(),m.Rb(194,"mdc-chip",26),m.Rb(195,"mdc-chip-text"),m.wc(196,"Horizontal Padding"),m.Qb(),m.Qb(),m.Rb(197,"mdc-chip",27),m.Rb(198,"mdc-chip-icon",4),m.wc(199,"wb_sunny"),m.Qb(),m.Rb(200,"mdc-chip-text"),m.wc(201,"Leading Icon Color"),m.Qb(),m.Qb(),m.Rb(202,"mdc-chip",28),m.Rb(203,"mdc-chip-text"),m.wc(204,"Trailing Icon Color"),m.Qb(),m.Rb(205,"mdc-chip-icon",10),m.wc(206,"wb_sunny"),m.Qb(),m.Qb(),m.Rb(207,"mdc-chip",29),m.Rb(208,"mdc-chip-icon",4),m.wc(209,"wb_sunny"),m.Qb(),m.Rb(210,"mdc-chip-text"),m.wc(211,"Leading Icon Size"),m.Qb(),m.Qb(),m.Rb(212,"mdc-chip",30),m.Rb(213,"mdc-chip-text"),m.wc(214,"Trailing Icon Size"),m.Qb(),m.Rb(215,"mdc-chip-icon",10),m.wc(216,"wb_sunny"),m.Qb(),m.Qb(),m.Rb(217,"mdc-chip",31),m.Rb(218,"mdc-chip-icon",4),m.wc(219,"wb_sunny"),m.Qb(),m.Rb(220,"mdc-chip-text"),m.wc(221,"Leading Icon Margin"),m.Qb(),m.Qb(),m.Rb(222,"mdc-chip",32),m.Rb(223,"mdc-chip-text"),m.wc(224,"Trailing Icon Margin"),m.Qb(),m.Rb(225,"mdc-chip-icon",10),m.wc(226,"wb_sunny"),m.Qb(),m.Qb(),m.Qb(),m.Qb(),m.Mb(227,"example-viewer",5),m.Qb(),m.Rb(228,"div",0),m.Rb(229,"h3",6),m.wc(230,"Accessibility"),m.Qb(),m.Rb(231,"p"),m.wc(232," Material Design spec advises that touch targets should be at least 48 x 48 px. To meet this requirement, add the `touch` property. "),m.Qb(),m.Rb(233,"p"),m.wc(234," Note that the outer mdc-touch-target-wrapper element is only necessary if you want to avoid potentially overlapping touch targets on adjacent elements (due to collapsing margins). "),m.Qb(),m.Rb(235,"div",1),m.Rb(236,"div",33),m.Mb(237,"mdc-chip",34),m.Qb(),m.Qb(),m.Mb(238,"example-viewer",5),m.Qb()}if(2&c){const c=m.oc(6),i=m.oc(128);m.Bb(3),m.yc("Disable Ripple: ",c.disableRipple?"On":"Off",""),m.Bb(8),m.ic("example",e.exampleSimple),m.Bb(27),m.ic("example",e.exampleInput),m.Bb(15),m.ic("example",e.exampleChoice),m.Bb(18),m.ic("example",e.exampleFilter),m.Bb(26),m.ic("example",e.exampleFilterWithIcon),m.Bb(26),m.ic("example",e.exampleAction),m.Bb(4),m.ic("value",e.demoChipValue),m.Bb(2),m.ic("ngForOf",e.foods),m.Bb(2),m.yc("Value: ",i.value,""),m.Bb(1),m.ic("example",e.exampleValue),m.Bb(4),m.ic("ngModel",e.ngModelValue),m.Bb(1),m.ic("ngForOf",e.foods),m.Bb(2),m.yc("Value: ",e.ngModelValue,""),m.Bb(1),m.ic("example",e.exampleNgModel),m.Bb(4),m.ic("formGroup",e.chipForm),m.Bb(2),m.ic("ngForOf",e.foods),m.Bb(2),m.yc("Value: ",e.chipForm.controls.chipFood.value,""),m.Bb(1),m.ic("example",e.exampleReactiveForm),m.Bb(18),m.ic("example",e.exampleShape),m.Bb(18),m.ic("example",e.exampleTheme),m.Bb(17),m.ic("removable",!1),m.Bb(10),m.ic("removable",!1),m.Bb(10),m.ic("removable",!1),m.Bb(5),m.ic("example",e.exampleCustom),m.Bb(11),m.ic("example",e.exampleAccessibility)}},directives:[d.a,s.a,l.b,l.d,b.b,r.a,u.j,o.j,o.m,o.q,o.k,o.e,o.c],encapsulation:2}),c})()}]}];let Q=(()=>{class c{}return c.\u0275mod=m.Jb({type:c}),c.\u0275inj=m.Ib({factory:function(e){return new(e||c)},imports:[[n.e.forChild(R)],n.e]}),c})(),f=(()=>{class c{}return c.\u0275mod=m.Jb({type:c}),c.\u0275inj=m.Ib({factory:function(e){return new(e||c)},imports:[[t.a,Q]]}),c})()}}]);