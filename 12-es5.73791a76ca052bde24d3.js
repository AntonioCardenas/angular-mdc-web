function _classCallCheck(c,e){if(!(c instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(c,e){for(var i=0;i<e.length;i++){var t=e[i];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(c,t.key,t)}}function _createClass(c,e,i){return e&&_defineProperties(c.prototype,e),i&&_defineProperties(c,i),c}(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{T82o:function(c,e,i){"use strict";i.r(e),i.d(e,"ChipsModule",(function(){return k}));var t=i("d2mR"),n=i("tyNb"),o=i("3Pt+"),h=i("leug"),a=i("fXoL"),m=i("w0pw"),p=i("LuDt"),d=i("9UYg"),s=i("zlO5"),l=i("PMnV"),r=i("VRYb"),b=i("dkiD"),u=i("ofXK");function v(c,e){if(1&c){var i=a.Sb();a.Rb(0,"mdc-chip",35),a.Zb("selectionChange",(function(c){return a.pc(i),a.dc().onChipSelection(c)})),a.wc(1),a.Qb()}if(2&c){var t=e.$implicit;a.ic("value",t.value),a.Bb(1),a.yc(" ",t.viewValue," ")}}function g(c,e){if(1&c&&(a.Rb(0,"mdc-chip",36),a.wc(1),a.Qb()),2&c){var i=e.$implicit;a.ic("value",i.value),a.Bb(1),a.yc(" ",i.viewValue," ")}}function w(c,e){if(1&c&&(a.Rb(0,"mdc-chip",36),a.wc(1),a.Qb()),2&c){var i=e.$implicit;a.ic("value",i.value),a.Bb(1),a.yc(" ",i.viewValue," ")}}var x,R,f,Q,C,y=((x=function(){function c(){_classCallCheck(this,c)}return _createClass(c,[{key:"ngOnInit",value:function(){this._componentApi.docApi={sections:[{header:"MdcChipSet",selectors:["mdc-chip-set"],exportedAs:"mdcChipSet",categories:[{name:"Properties",items:[{name:"choice: boolean",summary:"Indicates that the chips in the set are choice chips, which allow a single selection from a set of options."},{name:"filter: boolean",summary:"Indicates that the chips in the set are filter chips, which allow multiple selection from a set of options."},{name:"input: boolean",summary:"Indicates that the chips in the set are input chips, which enable user input by converting text into chips."},{name:"touch: boolean",summary:"Set the component touch target to 48 x 48 px."}]},{name:"Methods",items:[{name:"getSelectedChipIds(): string[]",summary:"Returns an array of the IDs of all selected chips."},{name:"select(chipId: string): void",summary:"Selects the chip with the given id. Deselects all other chips if the chip set is of the choice variant."}]},{name:"Events",items:[{name:"interaction: MdcChipInteractionEvent",summary:"Indicates when a chip is interacted with (via click/tap or Enter key)"},{name:"change: MdcChipSetChange",summary:"Emitted when a chip is interacted with."}]}]},{header:"MdcChip",selectors:["mdc-chip"],exportedAs:"mdcChip",categories:[{name:"Properties",items:[{name:"choice: boolean",summary:"Indicates that the chips in the set are choice chips, which allow a single selection from a set of options."},{name:"filter: boolean",summary:"Indicates that the chips in the set are filter chips, which allow multiple selection from a set of options."},{name:"input: boolean",summary:"Indicates that the chips in the set are input chips, which enable user input by converting text into chips."},{name:"touch: boolean",summary:"Set the component touch target to 48 x 48 px."},{name:"label: string",summary:"Sets the text content of the chip."},{name:"value: string | string[]",summary:"The value of the chip. Defaults to the content inside mdc-chip."},{name:"removable: boolean",summary:"Sets whether a trailing icon click should trigger exit/removal of the chip. (Default is true)"},{name:"disableRipple: boolean",summary:"Whether ripples are disabled."}]},{name:"Methods",items:[{name:"focus()",summary:"Set focus to the chip."}]},{name:"Events",items:[{name:"interactionEvent: MdcChipInteractionEvent",summary:"Indicates the chip was interacted with (via click/tap or Enter key)"},{name:"selectionChange: MdcChipSelectionEvent",summary:"Indicates the chip's selection state has changed (for choice/filter chips)"},{name:"removalEvent: MdcChipRemovalEvent",summary:"Indicates the chip removal event from a chip set"},{name:"navigationEvent: MdcChipNavigationEvent",summary:"Indicates a navigation event has occurred on a chip"},{name:"trailingIconInteraction: MdcChipInteractionEvent",summary:"Indicates the chip's trailing icon was interacted with (via click/tap or Enter key)"}]}]},{header:"MdcChipText",summary:"Optional. Indicates the text content of the chip.",selectors:["mdc-chip-text"],exportedAs:"mdcChipText"},{header:"MdcChipIcon",summary:"Optional. Indicates an icon in the chip.",selectors:["mdc-chip-icon"],exportedAs:"mdcChipIcon",categories:[{name:"Properties",items:[{name:"leading: boolean",summary:"Indicates a leading icon in the chip"},{name:"leading: boolean",summary:"Indicates a trailing icon in the chip"}]}]}]}}}]),c}()).\u0275fac=function(c){return new(c||x)},x.\u0275cmp=a.Fb({type:x,selectors:[["ng-component"]],viewQuery:function(c,e){var i;1&c&&a.tc(h.a,!0),2&c&&a.nc(i=a.ac())&&(e._componentApi=i.first)},decls:1,vars:0,template:function(c,e){1&c&&a.Mb(0,"component-api")},directives:[m.a],encapsulation:2}),x),M=[{path:"",component:(f=function(){function c(){_classCallCheck(this,c)}return _createClass(c,[{key:"ngOnInit",value:function(){this._componentViewer.template={title:"Chips",description:"Chips are compact elements that allow users to enter information, select a choice, filter content, or trigger an action.",references:[{name:"Material Design guidelines: Chips",url:"https://material.io/guidelines/components/chips.html"},{name:"Material Components Web",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-chips/README.md"}],mdcUrls:[{name:"Sass Mixins",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-chips/README.md#sass-mixins"}],code:"import {MdcChipsModule} from '@angular-mdc/web/chips';",sass:"@use '@material/chips/mdc-chips';\n@use '@material/chips';"}}}]),c}(),f.\u0275fac=function(c){return new(c||f)},f.\u0275cmp=a.Fb({type:f,selectors:[["ng-component"]],viewQuery:function(c,e){var i;1&c&&a.tc(h.b,!0),2&c&&a.nc(i=a.ac())&&(e._componentViewer=i.first)},decls:1,vars:0,template:function(c,e){1&c&&a.Mb(0,"component-viewer")},directives:[p.a],encapsulation:2}),f),children:[{path:"",redirectTo:"api"},{path:"api",component:y},{path:"examples",component:(R=function(){function c(){_classCallCheck(this,c),this.demoChipValue="pizza-1",this.ngModelValue="tacos-2",this.chipForm=new o.d({chipFood:new o.b("steak-0")}),this.foods=[{value:"steak-0",viewValue:"Steak"},{value:"pizza-1",viewValue:"Pizza"},{value:"tacos-2",viewValue:"Tacos"}],this.reuseFoods="foods: ChipFood[] = [\n  {value: 'steak-0', viewValue: 'Steak'},\n  {value: 'pizza-1', viewValue: 'Pizza'},\n  {value: 'tacos-2', viewValue: 'Tacos'},\n];",this.exampleSimple={html:"<mdc-chip-set>\n  <mdc-chip>\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-text>Jane Smith</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>"},this.exampleInput={html:'<mdc-chip-set input>\n  <mdc-chip label="Alice" (removalEvent)="onChipRemoved($event)">\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-icon trailing>cancel</mdc-chip-icon>\n  </mdc-chip>\n  <mdc-chip label="Bob" (removalEvent)="onChipRemoved($event)">\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-icon trailing>cancel</mdc-chip-icon>\n  </mdc-chip>\n  <mdc-chip label=\'Charlie\' (removalEvent)="onChipRemoved($event)">\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-icon trailing>cancel</mdc-chip-icon>\n  </mdc-chip>\n  <mdc-chip label=\'David\' (removalEvent)="onChipRemoved($event)">\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-icon trailing>cancel</mdc-chip-icon>\n  </mdc-chip>\n</mdc-chip-set>'},this.exampleChoice={html:"<mdc-chip-set choice>\n  <mdc-chip>\n    <mdc-chip-text>Get Directions</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-text>Get Weather</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-text>Add to Calendar</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>"},this.exampleFilter={html:"<mdc-chip-set filter>\n  <mdc-chip>\n    <mdc-chip-text>Tops</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-text>Bottoms</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-text>Shoes</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-text>Accessories</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>"},this.exampleFilterWithIcon={html:"<mdc-chip-set filter>\n  <mdc-chip>\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-text>Alice</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-text>Bob</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-text>Charlie</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-text>David</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>"},this.exampleAction={html:"<mdc-chip-set>\n  <mdc-chip>\n    <mdc-chip-icon leading>wb_sunny</mdc-chip-icon>\n    <mdc-chip-text>Turn on lights</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>bookmark</mdc-chip-icon>\n    <mdc-chip-text>Bookmark</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>alarm</mdc-chip-icon>\n    <mdc-chip-text>Set alarm</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>directions</mdc-chip-icon>\n    <mdc-chip-text>Get Directions</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>"},this.exampleShape={html:'<mdc-chip-set>\n  <mdc-chip class="custom-chip--shape-radius">\n    <mdc-chip-text>Turn on lights</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--shape-radius">\n    <mdc-chip-text>Bookmark</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--shape-radius">\n    <mdc-chip-text>Set alarm</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--shape-radius">\n    <mdc-chip-text>Get Directions</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_chips.scss"},this.exampleTheme={html:'<mdc-chip-set>\n  <mdc-chip class="custom-chip-secondary">\n    <mdc-chip-text>Turn on lights</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip-secondary">\n    <mdc-chip-text>Bookmark</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip-secondary">\n    <mdc-chip-text>Set alarm</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip-secondary">\n    <mdc-chip-text>Get Directions</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_chips.scss"},this.exampleCustom={html:'<mdc-chip-set>\n  <mdc-chip class="custom-chip--height">\n    <mdc-chip-text>Height</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--horizontal-padding">\n    <mdc-chip-text>Horizontal Padding</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--leading-icon-color">\n    <mdc-chip-icon leading>wb_sunny</mdc-chip-icon>\n    <mdc-chip-text>Leading Icon Color</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--trailing-icon-color">\n    <mdc-chip-text>Trailing Icon Color</mdc-chip-text>\n    <mdc-chip-icon trailing>wb_sunny</mdc-chip-icon>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--leading-icon-size">\n    <mdc-chip-icon leading>wb_sunny</mdc-chip-icon>\n    <mdc-chip-text>Leading Icon Size</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--trailing-icon-size">\n    <mdc-chip-text>Trailing Icon Size</mdc-chip-text>\n    <mdc-chip-icon trailing>wb_sunny</mdc-chip-icon>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--leading-icon-margin">\n    <mdc-chip-icon leading>wb_sunny</mdc-chip-icon>\n    <mdc-chip-text>Leading Icon Margin</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--trailing-icon-margin">\n    <mdc-chip-text>Trailing Icon Margin</mdc-chip-text>\n    <mdc-chip-icon trailing>wb_sunny</mdc-chip-icon>\n  </mdc-chip>\n</mdc-chip-set>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_chips.scss"},this.exampleValue={html:'<mdc-chip-set choice #chipSetValue (change)="onChipSetChange($event)" [value]="demoChipValue">\n  <mdc-chip *ngFor="let food of foods" [value]="food.value"\n    (interaction)="onChipInteraction($event)"\n    (selectionChange)="onChipInteraction($event)">\n    {{food.viewValue}}\n  </mdc-chip>\n</mdc-chip-set>',ts:"".concat(this.reuseFoods,"\n\ndemoChipValue = 'pizza-1';\n\nonChipSetChange(evt: MdcChipSetChange): void {\n  // do something\n}\n\nonChipInteraction(evt: MdcChipInteractionEvent): void {\n  // do something\n}\n\nonChipSelection(evt: MdcChipSelectionEvent): void {\n  // do something\n}")},this.exampleNgModel={html:'<mdc-chip-set choice [(ngModel)]="ngModelValue">\n  <mdc-chip *ngFor="let food of foods" [value]="food.value">\n    {{food.viewValue}}\n  </mdc-chip>\n</mdc-chip-set>',ts:"ngModelValue = 'tacos-2';\n\n".concat(this.reuseFoods)},this.exampleReactiveForm={html:'<form [formGroup]="chipForm" novalidate>\n  <mdc-chip-set choice formControlName="chipFood">\n    <mdc-chip *ngFor="let food of foods" [value]="food.value">\n      {{food.viewValue}}\n    </mdc-chip>\n  </mdc-chip-set>\n</form>',ts:"".concat(this.reuseFoods,"\n\nchipForm = new FormGroup({\n  chipFood: new FormControl('steak-0')\n});")},this.exampleAccessibility={html:'<div class="mdc-touch-target-wrapper">\n  <mdc-chip touch label="My Accessibility Chip"></mdc-chip>\n</div>'}}return _createClass(c,[{key:"onChipSetChange",value:function(c){console.log(c)}},{key:"onChipInteraction",value:function(c){console.log("MdcChipInteractionEvent: ".concat(c.chipId," : ").concat(c.value))}},{key:"onChipSelection",value:function(c){console.log("MdcChipSelectionEvent: ".concat(c.chipId," : ").concat(c.selected))}},{key:"onChipRemoved",value:function(c){console.log("MdcChipRemovalEvent: ".concat(c.chipId))}}]),c}(),R.\u0275fac=function(c){return new(c||R)},R.\u0275cmp=a.Fb({type:R,selectors:[["ng-component"]],decls:239,vars:26,consts:[[1,"demo-content"],[1,"demo-layout__row"],["mdc-button","",3,"click"],["simplechip",""],["leading",""],[3,"example"],[1,"demo-content__headline"],["input",""],["inputchipset",""],["label","Alice",3,"removalEvent"],["trailing",""],["label","Bob",3,"removalEvent"],["label","Charlie",3,"removalEvent"],["label","David",3,"removalEvent"],["choice",""],["filter",""],["choice","",3,"value","change","interaction"],["chipSetValue",""],[3,"value","selectionChange",4,"ngFor","ngForOf"],["choice","",3,"ngModel","ngModelChange"],[3,"value",4,"ngFor","ngForOf"],["novalidate","",3,"formGroup"],["choice","","formControlName","chipFood"],[1,"custom-chip--shape-radius"],[1,"custom-chip-secondary"],[1,"custom-chip--height"],[1,"custom-chip--horizontal-padding"],[1,"custom-chip--leading-icon-color"],[1,"custom-chip--trailing-icon-color",3,"removable"],[1,"custom-chip--leading-icon-size"],[1,"custom-chip--trailing-icon-size",3,"removable"],[1,"custom-chip--leading-icon-margin"],[1,"custom-chip--trailing-icon-margin",3,"removable"],[1,"mdc-touch-target-wrapper"],["touch","","label","My Accessibility Chip"],[3,"value","selectionChange"],[3,"value"]],template:function(c,e){if(1&c){var i=a.Sb();a.Rb(0,"div",0),a.Rb(1,"div",1),a.Rb(2,"button",2),a.Zb("click",(function(){a.pc(i);var c=a.oc(6);return c.disableRipple=!c.disableRipple})),a.wc(3),a.Qb(),a.Qb(),a.Rb(4,"mdc-chip-set"),a.Rb(5,"mdc-chip",null,3),a.Rb(7,"mdc-chip-icon",4),a.wc(8,"face"),a.Qb(),a.Rb(9,"mdc-chip-text"),a.wc(10,"Jane Smith"),a.Qb(),a.Qb(),a.Qb(),a.Mb(11,"example-viewer",5),a.Qb(),a.Rb(12,"div",0),a.Rb(13,"h3",6),a.wc(14,"Input Chips"),a.Qb(),a.Rb(15,"div",1),a.Rb(16,"mdc-chip-set",7,8),a.Rb(18,"mdc-chip",9),a.Zb("removalEvent",(function(c){return e.onChipRemoved(c)})),a.Rb(19,"mdc-chip-icon",4),a.wc(20,"face"),a.Qb(),a.Rb(21,"mdc-chip-icon",10),a.wc(22,"cancel"),a.Qb(),a.Qb(),a.Rb(23,"mdc-chip",11),a.Zb("removalEvent",(function(c){return e.onChipRemoved(c)})),a.Rb(24,"mdc-chip-icon",4),a.wc(25,"face"),a.Qb(),a.Rb(26,"mdc-chip-icon",10),a.wc(27,"cancel"),a.Qb(),a.Qb(),a.Rb(28,"mdc-chip",12),a.Zb("removalEvent",(function(c){return e.onChipRemoved(c)})),a.Rb(29,"mdc-chip-icon",4),a.wc(30,"face"),a.Qb(),a.Rb(31,"mdc-chip-icon",10),a.wc(32,"cancel"),a.Qb(),a.Qb(),a.Rb(33,"mdc-chip",13),a.Zb("removalEvent",(function(c){return e.onChipRemoved(c)})),a.Rb(34,"mdc-chip-icon",4),a.wc(35,"face"),a.Qb(),a.Rb(36,"mdc-chip-icon",10),a.wc(37,"cancel"),a.Qb(),a.Qb(),a.Qb(),a.Qb(),a.Mb(38,"example-viewer",5),a.Qb(),a.Rb(39,"div",0),a.Rb(40,"h3",6),a.wc(41,"Choice Chips"),a.Qb(),a.Rb(42,"div",1),a.Rb(43,"mdc-chip-set",14),a.Rb(44,"mdc-chip"),a.Rb(45,"mdc-chip-text"),a.wc(46,"Get Directions"),a.Qb(),a.Qb(),a.Rb(47,"mdc-chip"),a.Rb(48,"mdc-chip-text"),a.wc(49,"Get Weather"),a.Qb(),a.Qb(),a.Rb(50,"mdc-chip"),a.Rb(51,"mdc-chip-text"),a.wc(52,"Add to Calendar"),a.Qb(),a.Qb(),a.Qb(),a.Qb(),a.Mb(53,"example-viewer",5),a.Qb(),a.Rb(54,"div",0),a.Rb(55,"h3",6),a.wc(56,"Filter Chips"),a.Qb(),a.Rb(57,"div",1),a.Rb(58,"mdc-chip-set",15),a.Rb(59,"mdc-chip"),a.Rb(60,"mdc-chip-text"),a.wc(61,"Tops"),a.Qb(),a.Qb(),a.Rb(62,"mdc-chip"),a.Rb(63,"mdc-chip-text"),a.wc(64,"Bottoms"),a.Qb(),a.Qb(),a.Rb(65,"mdc-chip"),a.Rb(66,"mdc-chip-text"),a.wc(67,"Shoes"),a.Qb(),a.Qb(),a.Rb(68,"mdc-chip"),a.Rb(69,"mdc-chip-text"),a.wc(70,"Accessories"),a.Qb(),a.Qb(),a.Qb(),a.Qb(),a.Mb(71,"example-viewer",5),a.Qb(),a.Rb(72,"div",0),a.Rb(73,"h3",6),a.wc(74,"Filter Chips with Leading Icon"),a.Qb(),a.Rb(75,"div",1),a.Rb(76,"mdc-chip-set",15),a.Rb(77,"mdc-chip"),a.Rb(78,"mdc-chip-icon",4),a.wc(79,"face"),a.Qb(),a.Rb(80,"mdc-chip-text"),a.wc(81,"Alice"),a.Qb(),a.Qb(),a.Rb(82,"mdc-chip"),a.Rb(83,"mdc-chip-icon",4),a.wc(84,"face"),a.Qb(),a.Rb(85,"mdc-chip-text"),a.wc(86,"Bob"),a.Qb(),a.Qb(),a.Rb(87,"mdc-chip"),a.Rb(88,"mdc-chip-icon",4),a.wc(89,"face"),a.Qb(),a.Rb(90,"mdc-chip-text"),a.wc(91,"Charlie"),a.Qb(),a.Qb(),a.Rb(92,"mdc-chip"),a.Rb(93,"mdc-chip-icon",4),a.wc(94,"face"),a.Qb(),a.Rb(95,"mdc-chip-text"),a.wc(96,"David"),a.Qb(),a.Qb(),a.Qb(),a.Qb(),a.Mb(97,"example-viewer",5),a.Qb(),a.Rb(98,"div",0),a.Rb(99,"h3",6),a.wc(100,"Action Chips"),a.Qb(),a.Rb(101,"div",1),a.Rb(102,"mdc-chip-set"),a.Rb(103,"mdc-chip"),a.Rb(104,"mdc-chip-icon",4),a.wc(105,"wb_sunny"),a.Qb(),a.Rb(106,"mdc-chip-text"),a.wc(107,"Turn on lights"),a.Qb(),a.Qb(),a.Rb(108,"mdc-chip"),a.Rb(109,"mdc-chip-icon",4),a.wc(110,"bookmark"),a.Qb(),a.Rb(111,"mdc-chip-text"),a.wc(112,"Bookmark"),a.Qb(),a.Qb(),a.Rb(113,"mdc-chip"),a.Rb(114,"mdc-chip-icon",4),a.wc(115,"alarm"),a.Qb(),a.Rb(116,"mdc-chip-text"),a.wc(117,"Set alarm"),a.Qb(),a.Qb(),a.Rb(118,"mdc-chip"),a.Rb(119,"mdc-chip-icon",4),a.wc(120,"directions"),a.Qb(),a.Rb(121,"mdc-chip-text"),a.wc(122,"Get Directions"),a.Qb(),a.Qb(),a.Qb(),a.Qb(),a.Mb(123,"example-viewer",5),a.Qb(),a.Rb(124,"div",0),a.Rb(125,"h3",6),a.wc(126,"Choice with value"),a.Qb(),a.Rb(127,"mdc-chip-set",16,17),a.Zb("change",(function(c){return e.onChipSetChange(c)}))("interaction",(function(c){return e.onChipInteraction(c)})),a.uc(129,v,2,2,"mdc-chip",18),a.Qb(),a.Rb(130,"p"),a.wc(131),a.Qb(),a.Mb(132,"example-viewer",5),a.Qb(),a.Rb(133,"div",0),a.Rb(134,"h3",6),a.wc(135,"NgModel"),a.Qb(),a.Rb(136,"mdc-chip-set",19),a.Zb("ngModelChange",(function(c){return e.ngModelValue=c})),a.uc(137,g,2,2,"mdc-chip",20),a.Qb(),a.Rb(138,"p"),a.wc(139),a.Qb(),a.Mb(140,"example-viewer",5),a.Qb(),a.Rb(141,"div",0),a.Rb(142,"h3",6),a.wc(143,"Reactive Form"),a.Qb(),a.Rb(144,"form",21),a.Rb(145,"mdc-chip-set",22),a.uc(146,w,2,2,"mdc-chip",20),a.Qb(),a.Qb(),a.Rb(147,"p"),a.wc(148),a.Qb(),a.Mb(149,"example-viewer",5),a.Qb(),a.Rb(150,"div",0),a.Rb(151,"h3",6),a.wc(152,"Shape"),a.Qb(),a.Rb(153,"div",1),a.Rb(154,"mdc-chip-set"),a.Rb(155,"mdc-chip",23),a.Rb(156,"mdc-chip-text"),a.wc(157,"Turn on lights"),a.Qb(),a.Qb(),a.Rb(158,"mdc-chip",23),a.Rb(159,"mdc-chip-text"),a.wc(160,"Bookmark"),a.Qb(),a.Qb(),a.Rb(161,"mdc-chip",23),a.Rb(162,"mdc-chip-text"),a.wc(163,"Set alarm"),a.Qb(),a.Qb(),a.Rb(164,"mdc-chip",23),a.Rb(165,"mdc-chip-text"),a.wc(166,"Get Directions"),a.Qb(),a.Qb(),a.Qb(),a.Qb(),a.Mb(167,"example-viewer",5),a.Qb(),a.Rb(168,"div",0),a.Rb(169,"h3",6),a.wc(170,"Theme"),a.Qb(),a.Rb(171,"div",1),a.Rb(172,"mdc-chip-set"),a.Rb(173,"mdc-chip",24),a.Rb(174,"mdc-chip-text"),a.wc(175,"Turn on lights"),a.Qb(),a.Qb(),a.Rb(176,"mdc-chip",24),a.Rb(177,"mdc-chip-text"),a.wc(178,"Bookmark"),a.Qb(),a.Qb(),a.Rb(179,"mdc-chip",24),a.Rb(180,"mdc-chip-text"),a.wc(181,"Set alarm"),a.Qb(),a.Qb(),a.Rb(182,"mdc-chip",24),a.Rb(183,"mdc-chip-text"),a.wc(184,"Get Directions"),a.Qb(),a.Qb(),a.Qb(),a.Qb(),a.Mb(185,"example-viewer",5),a.Qb(),a.Rb(186,"div",0),a.Rb(187,"h3",6),a.wc(188,"Custom"),a.Qb(),a.Rb(189,"div",1),a.Rb(190,"mdc-chip-set"),a.Rb(191,"mdc-chip",25),a.Rb(192,"mdc-chip-text"),a.wc(193,"Height"),a.Qb(),a.Qb(),a.Rb(194,"mdc-chip",26),a.Rb(195,"mdc-chip-text"),a.wc(196,"Horizontal Padding"),a.Qb(),a.Qb(),a.Rb(197,"mdc-chip",27),a.Rb(198,"mdc-chip-icon",4),a.wc(199,"wb_sunny"),a.Qb(),a.Rb(200,"mdc-chip-text"),a.wc(201,"Leading Icon Color"),a.Qb(),a.Qb(),a.Rb(202,"mdc-chip",28),a.Rb(203,"mdc-chip-text"),a.wc(204,"Trailing Icon Color"),a.Qb(),a.Rb(205,"mdc-chip-icon",10),a.wc(206,"wb_sunny"),a.Qb(),a.Qb(),a.Rb(207,"mdc-chip",29),a.Rb(208,"mdc-chip-icon",4),a.wc(209,"wb_sunny"),a.Qb(),a.Rb(210,"mdc-chip-text"),a.wc(211,"Leading Icon Size"),a.Qb(),a.Qb(),a.Rb(212,"mdc-chip",30),a.Rb(213,"mdc-chip-text"),a.wc(214,"Trailing Icon Size"),a.Qb(),a.Rb(215,"mdc-chip-icon",10),a.wc(216,"wb_sunny"),a.Qb(),a.Qb(),a.Rb(217,"mdc-chip",31),a.Rb(218,"mdc-chip-icon",4),a.wc(219,"wb_sunny"),a.Qb(),a.Rb(220,"mdc-chip-text"),a.wc(221,"Leading Icon Margin"),a.Qb(),a.Qb(),a.Rb(222,"mdc-chip",32),a.Rb(223,"mdc-chip-text"),a.wc(224,"Trailing Icon Margin"),a.Qb(),a.Rb(225,"mdc-chip-icon",10),a.wc(226,"wb_sunny"),a.Qb(),a.Qb(),a.Qb(),a.Qb(),a.Mb(227,"example-viewer",5),a.Qb(),a.Rb(228,"div",0),a.Rb(229,"h3",6),a.wc(230,"Accessibility"),a.Qb(),a.Rb(231,"p"),a.wc(232," Material Design spec advises that touch targets should be at least 48 x 48 px. To meet this requirement, add the `touch` property. "),a.Qb(),a.Rb(233,"p"),a.wc(234," Note that the outer mdc-touch-target-wrapper element is only necessary if you want to avoid potentially overlapping touch targets on adjacent elements (due to collapsing margins). "),a.Qb(),a.Rb(235,"div",1),a.Rb(236,"div",33),a.Mb(237,"mdc-chip",34),a.Qb(),a.Qb(),a.Mb(238,"example-viewer",5),a.Qb()}if(2&c){var t=a.oc(6),n=a.oc(128);a.Bb(3),a.yc("Disable Ripple: ",t.disableRipple?"On":"Off",""),a.Bb(8),a.ic("example",e.exampleSimple),a.Bb(27),a.ic("example",e.exampleInput),a.Bb(15),a.ic("example",e.exampleChoice),a.Bb(18),a.ic("example",e.exampleFilter),a.Bb(26),a.ic("example",e.exampleFilterWithIcon),a.Bb(26),a.ic("example",e.exampleAction),a.Bb(4),a.ic("value",e.demoChipValue),a.Bb(2),a.ic("ngForOf",e.foods),a.Bb(2),a.yc("Value: ",n.value,""),a.Bb(1),a.ic("example",e.exampleValue),a.Bb(4),a.ic("ngModel",e.ngModelValue),a.Bb(1),a.ic("ngForOf",e.foods),a.Bb(2),a.yc("Value: ",e.ngModelValue,""),a.Bb(1),a.ic("example",e.exampleNgModel),a.Bb(4),a.ic("formGroup",e.chipForm),a.Bb(2),a.ic("ngForOf",e.foods),a.Bb(2),a.yc("Value: ",e.chipForm.controls.chipFood.value,""),a.Bb(1),a.ic("example",e.exampleReactiveForm),a.Bb(18),a.ic("example",e.exampleShape),a.Bb(18),a.ic("example",e.exampleTheme),a.Bb(17),a.ic("removable",!1),a.Bb(10),a.ic("removable",!1),a.Bb(10),a.ic("removable",!1),a.Bb(5),a.ic("example",e.exampleCustom),a.Bb(11),a.ic("example",e.exampleAccessibility)}},directives:[d.a,s.a,l.b,l.d,r.b,b.a,u.j,o.j,o.m,o.q,o.k,o.e,o.c],encapsulation:2}),R)}]}],I=((C=function c(){_classCallCheck(this,c)}).\u0275mod=a.Jb({type:C}),C.\u0275inj=a.Ib({factory:function(c){return new(c||C)},imports:[[n.e.forChild(M)],n.e]}),C),k=((Q=function c(){_classCallCheck(this,c)}).\u0275mod=a.Jb({type:Q}),Q.\u0275inj=a.Ib({factory:function(c){return new(c||Q)},imports:[[t.a,I]]}),Q)}}]);