(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{WxHU:function(e,t,b){"use strict";b.r(t),b.d(t,"TextFieldModule",(function(){return O}));var d=b("d2mR"),i=b("tyNb"),o=b("3Pt+"),c=b("AytR"),n=b("leug"),l=b("fXoL"),r=b("LuDt"),a=b("5l+6"),s=b("OtPg"),m=b("U/DG"),u=b("jhN1"),R=b("9UYg"),h=b("6D23"),Q=b("OA+s"),f=b("dkiD"),p=b("4G1d"),x=b("ofXK"),w=b("Nwyg"),v=b("o085"),g=b("xBmo"),y=b("o/N6");function T(e,t){1&e&&(l.Rb(0,"span"),l.wc(1,"Username is required"),l.Qb())}function M(e,t){1&e&&(l.Rb(0,"span"),l.wc(1,"Username is not long enough"),l.Qb())}function F(e,t){1&e&&(l.Rb(0,"span"),l.wc(1,"Username is max length is 11"),l.Qb())}function S(e,t){1&e&&(l.Rb(0,"span"),l.wc(1,"Weight is required"),l.Qb())}function C(e,t){1&e&&(l.Rb(0,"span"),l.wc(1,"Field is required"),l.Qb())}class B{isErrorState(e,t){return!!(e&&e.invalid&&(e.dirty||e.touched||t&&t.submitted))}}let I=(()=>{class e{ngOnInit(){this._componentViewer.template={title:"Text Field",description:"Text fields let users enter and edit text.",references:[{name:"Material Design guidelines: Text Fields",url:"https://material.io/design/components/text-fields.html"},{name:"Material Components Web",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-textfield/README.md"}],code:"import {MdcTextFieldModule} from '@angular-mdc/web';",sass:"@use '@material/textfield/mdc-text-field';\n@use '@material/textfield';\n@use '@material/form-field/mdc-form-field';"}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=l.Fb({type:e,selectors:[["ng-component"]],viewQuery:function(e,t){var b;1&e&&l.tc(n.a,!0),2&e&&l.nc(b=l.ac())&&(t._componentViewer=b.first)},decls:1,vars:0,template:function(e,t){1&e&&l.Mb(0,"component-viewer")},directives:[r.a],encapsulation:2}),e})(),E=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=l.Fb({type:e,selectors:[["ng-component"]],decls:342,vars:0,consts:[[1,"docs-api"],["mdcHeadline6",""],[1,"markdown-code"],["mdcSubtitle2",""],["highlight","const MDC_TEXT_FIELD_DEFAULT_OPTIONS:\n     InjectionToken<MdcTextFieldDefaultOptions>;"]],template:function(e,t){1&e&&(l.Rb(0,"div",0),l.Rb(1,"h3",1),l.wc(2,"MdcTextField"),l.Qb(),l.Rb(3,"p"),l.wc(4," Selector: "),l.Rb(5,"span",2),l.wc(6,"mdc-text-field"),l.Qb(),l.Qb(),l.wc(7," Exported as: "),l.Rb(8,"span",2),l.wc(9,"mdcTextField"),l.Qb(),l.Rb(10,"h4",3),l.wc(11,"Properties"),l.Qb(),l.Rb(12,"table"),l.Rb(13,"thead"),l.Rb(14,"tr"),l.Rb(15,"th"),l.wc(16,"Name"),l.Qb(),l.Rb(17,"th"),l.wc(18,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(19,"tbody"),l.Rb(20,"tr"),l.Rb(21,"td"),l.wc(22,"id: string"),l.Qb(),l.Rb(23,"td"),l.wc(24,"Unique id of the element."),l.Qb(),l.Qb(),l.Rb(25,"tr"),l.Rb(26,"td"),l.wc(27,"type: string = 'text'"),l.Qb(),l.Rb(28,"td"),l.wc(29,"Input type of textfield (e.g.: email, password, date, color)."),l.Qb(),l.Qb(),l.Rb(30,"tr"),l.Rb(31,"td"),l.wc(32,"name: string"),l.Qb(),l.Rb(33,"td"),l.wc(34,"Name of the textfield."),l.Qb(),l.Qb(),l.Rb(35,"tr"),l.Rb(36,"td"),l.wc(37,"label: string"),l.Qb(),l.Rb(38,"td"),l.wc(39,"Shown to the user when there's no focus or values."),l.Qb(),l.Qb(),l.Rb(40,"tr"),l.Rb(41,"td"),l.wc(42,"value: string"),l.Qb(),l.Rb(43,"td"),l.wc(44,"The input element's value."),l.Qb(),l.Qb(),l.Rb(45,"tr"),l.Rb(46,"td"),l.wc(47,"outlined: boolean"),l.Qb(),l.Rb(48,"td"),l.wc(49,"Set a border around all sides of the text field."),l.Qb(),l.Qb(),l.Rb(50,"tr"),l.Rb(51,"td"),l.wc(52,"fullwidth: boolean"),l.Qb(),l.Rb(53,"td"),l.wc(54,"Set to fullwidth textfield. "),l.Rb(55,"p"),l.wc(56,"Do not use "),l.Rb(57,"code",2),l.wc(58,"outlined"),l.Qb(),l.wc(59," to style a full width text field."),l.Qb(),l.Qb(),l.Qb(),l.Rb(60,"tr"),l.Rb(61,"td"),l.wc(62,"disabled: boolean"),l.Qb(),l.Rb(63,"td"),l.wc(64,"Disables the component."),l.Qb(),l.Qb(),l.Rb(65,"tr"),l.Rb(66,"td"),l.wc(67,"prefix: string"),l.Qb(),l.Rb(68,"td"),l.wc(69,"Gets or sets the text content of the prefix, if it exists."),l.Qb(),l.Qb(),l.Rb(70,"tr"),l.Rb(71,"td"),l.wc(72,"suffix: string"),l.Qb(),l.Rb(73,"td"),l.wc(74,"Gets or sets the text content of the suffix, if it exists."),l.Qb(),l.Qb(),l.Rb(75,"tr"),l.Rb(76,"td"),l.wc(77,"readonly: boolean"),l.Qb(),l.Rb(78,"td"),l.wc(79,"Whether or not the textfield value is editable."),l.Qb(),l.Qb(),l.Rb(80,"tr"),l.Rb(81,"td"),l.wc(82,"required: boolean"),l.Qb(),l.Rb(83,"td"),l.wc(84,"Whether the element is required."),l.Qb(),l.Qb(),l.Rb(85,"tr"),l.Rb(86,"td"),l.wc(87,"characterCounter: boolean"),l.Qb(),l.Rb(88,"td"),l.wc(89,"Character counter is used if there is a character limit. It displays the ratio of characters used and the total character limit. "),l.Rb(90,"p"),l.Rb(91,"code",2),l.wc(92,"maxlength"),l.Qb(),l.wc(93," is required on "),l.Rb(94,"code",2),l.wc(95,"MdcTextField"),l.Qb(),l.wc(96,"."),l.Qb(),l.Qb(),l.Qb(),l.Rb(97,"tr"),l.Rb(98,"td"),l.wc(99,"useNativeValidation: boolean"),l.Qb(),l.Rb(100,"td"),l.wc(101,"Sets whether to check native HTML validity state (true, default) or custom validity state when updating styles (false)."),l.Qb(),l.Qb(),l.Rb(102,"tr"),l.Rb(103,"td"),l.wc(104,"valid: boolean"),l.Qb(),l.Rb(105,"td"),l.wc(106,"Updates input validity styling using passed value."),l.Qb(),l.Qb(),l.Rb(107,"tr"),l.Rb(108,"td"),l.wc(109,"empty: boolean"),l.Qb(),l.Rb(110,"td"),l.wc(111,"Returns whether the control is empty."),l.Qb(),l.Qb(),l.Rb(112,"tr"),l.Rb(113,"td"),l.wc(114,"endAligned: boolean"),l.Qb(),l.Rb(115,"td"),l.wc(116,"Styles the text field with an end-aligned input."),l.Qb(),l.Qb(),l.Rb(117,"tr"),l.Rb(118,"td"),l.wc(119,"ltrText: boolean"),l.Qb(),l.Rb(120,"td"),l.wc(121,"Styles the text field's text elements (input, prefix, and suffix) as LTR even when the direction is RTL. Useful for RTL languages that use LTR for fractional notations."),l.Qb(),l.Qb(),l.Rb(122,"tr"),l.Rb(123,"td"),l.wc(124,"inputmode: string"),l.Qb(),l.Rb(125,"td"),l.wc(126,"Provides a hint to browsers for devices with onscreen keyboards to help them decide which keyboard to display. "),l.Rb(127,"p"),l.Rb(128,"code",2),l.wc(129,"'verbatim' | 'latin' | 'latin-name' | 'latin-prose' | 'full-width-latin' | 'kana' | 'kana-name' | 'katakana' | 'numeric' | 'tel' | 'email' | 'url'"),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(130,"tr"),l.Rb(131,"td"),l.wc(132,"autocomplete: string"),l.Qb(),l.Rb(133,"td"),l.wc(134,"Indicates if the input can be automatically completed by the browser, usually by remembering previous values the user has entered."),l.Qb(),l.Qb(),l.Rb(135,"tr"),l.Rb(136,"td"),l.wc(137,"tabIndex: number"),l.Qb(),l.Rb(138,"td"),l.wc(139,"Tab index of the text element."),l.Qb(),l.Qb(),l.Rb(140,"tr"),l.Rb(141,"td"),l.wc(142,"pattern: string"),l.Qb(),l.Rb(143,"td"),l.wc(144,"Regular expression that the control's value is checked against."),l.Qb(),l.Qb(),l.Rb(145,"tr"),l.Rb(146,"td"),l.wc(147,"maxlength: number"),l.Qb(),l.Rb(148,"td"),l.wc(149,"Maxlength of characters allowed to be entered."),l.Qb(),l.Qb(),l.Rb(150,"tr"),l.Rb(151,"td"),l.wc(152,"minlength: number"),l.Qb(),l.Rb(153,"td"),l.wc(154,"Specifies the minimum number of characters that the user can enter. "),l.Qb(),l.Qb(),l.Rb(155,"tr"),l.Rb(156,"td"),l.wc(157,"max: number"),l.Qb(),l.Rb(158,"td"),l.wc(159,"The maximum numeric value for the input."),l.Qb(),l.Qb(),l.Rb(160,"tr"),l.Rb(161,"td"),l.wc(162,"min: number"),l.Qb(),l.Rb(163,"td"),l.wc(164,"The minimum numeric value for this input, which must not be greater than its maximum (max attribute) value."),l.Qb(),l.Qb(),l.Rb(165,"tr"),l.Rb(166,"td"),l.wc(167,"step: number"),l.Qb(),l.Rb(168,"td"),l.wc(169,"Works with the min and max attributes to limit the increments at which a numeric or date-time value can be set."),l.Qb(),l.Qb(),l.Rb(170,"tr"),l.Rb(171,"td"),l.wc(172,"size: number"),l.Qb(),l.Rb(173,"td"),l.wc(174,"The initial size of the control."),l.Qb(),l.Qb(),l.Rb(175,"tr"),l.Rb(176,"td"),l.wc(177,"helperText: MdcHelperText"),l.Qb(),l.Rb(178,"td"),l.wc(179,"Reference to related "),l.Rb(180,"code",2),l.wc(181,"MdcHelperText"),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(182,"h4",3),l.wc(183,"Methods"),l.Qb(),l.Rb(184,"table"),l.Rb(185,"tbody"),l.Rb(186,"tr"),l.Rb(187,"td"),l.wc(188,"focus()"),l.Qb(),l.Rb(189,"td"),l.wc(190,"Sets focus to the input."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(191,"h4",3),l.wc(192,"Events"),l.Qb(),l.Rb(193,"table"),l.Rb(194,"tbody"),l.Rb(195,"tr"),l.Rb(196,"td"),l.wc(197,"change(value)"),l.Qb(),l.Rb(198,"td"),l.wc(199,"Emitted when an alteration to the element value is committed."),l.Qb(),l.Qb(),l.Rb(200,"tr"),l.Rb(201,"td"),l.wc(202,"blur(value)"),l.Qb(),l.Rb(203,"td"),l.wc(204,"Emitted whenever the input loses focus."),l.Qb(),l.Qb(),l.Rb(205,"tr"),l.Rb(206,"td"),l.wc(207,"input(value)"),l.Qb(),l.Rb(208,"td"),l.wc(209,"Emitted synchronously when the value has been altered."),l.Qb(),l.Qb(),l.Rb(210,"tr"),l.Rb(211,"td"),l.wc(212,"focus(boolean)"),l.Qb(),l.Rb(213,"td"),l.wc(214,"Emitted when the input gains or loses focus."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(215,"div",0),l.Rb(216,"h3",1),l.wc(217,"MdcHelperText"),l.Qb(),l.Rb(218,"p"),l.wc(219," Selector: "),l.Rb(220,"span",2),l.wc(221,"mdc-helper-text"),l.Qb(),l.Rb(222,"span",2),l.wc(223,"mdcHelperText"),l.Qb(),l.Qb(),l.wc(224," Exported as: "),l.Rb(225,"span",2),l.wc(226,"mdcHelperText"),l.Qb(),l.Rb(227,"h4",3),l.wc(228,"Properties"),l.Qb(),l.Rb(229,"table"),l.Rb(230,"thead"),l.Rb(231,"tr"),l.Rb(232,"th"),l.wc(233,"Name"),l.Qb(),l.Rb(234,"th"),l.wc(235,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(236,"tbody"),l.Rb(237,"tr"),l.Rb(238,"td"),l.wc(239,"validation: boolean"),l.Qb(),l.Rb(240,"td"),l.wc(241,"Help text can be used to provide additional validation messages. "),l.Qb(),l.Qb(),l.Rb(242,"tr"),l.Rb(243,"td"),l.wc(244,"persistent: boolean"),l.Qb(),l.Rb(245,"td"),l.wc(246,"Help text will always be visible."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(247,"h4",3),l.wc(248,"Methods"),l.Qb(),l.Rb(249,"table"),l.Rb(250,"tbody"),l.Rb(251,"tr"),l.Rb(252,"td"),l.wc(253,"showToScreenReader()"),l.Qb(),l.Rb(254,"td"),l.wc(255,"Makes the helper text visible to the screen reader."),l.Qb(),l.Qb(),l.Rb(256,"tr"),l.Rb(257,"td"),l.wc(258,"setValidity(inputIsValid: boolean)"),l.Qb(),l.Rb(259,"td"),l.wc(260,"Sets the validity of the helper text. "),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(261,"div",0),l.Rb(262,"h3",1),l.wc(263,"MdcTextFieldIcon"),l.Qb(),l.Rb(264,"p"),l.wc(265," Selector: "),l.Rb(266,"span",2),l.wc(267,"mdc-icon[mdcTextFieldIcon]"),l.Qb(),l.Qb(),l.wc(268," Exported as: "),l.Rb(269,"span",2),l.wc(270,"mdcTextFieldIcon"),l.Qb(),l.Rb(271,"h4",3),l.wc(272,"Properties"),l.Qb(),l.Rb(273,"table"),l.Rb(274,"thead"),l.Rb(275,"tr"),l.Rb(276,"th"),l.wc(277,"Name"),l.Qb(),l.Rb(278,"th"),l.wc(279,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(280,"tbody"),l.Rb(281,"tr"),l.Rb(282,"td"),l.wc(283,"leading: boolean"),l.Qb(),l.Rb(284,"td"),l.wc(285,"Styles the text field as a text field with a leading icon."),l.Qb(),l.Qb(),l.Rb(286,"tr"),l.Rb(287,"td"),l.wc(288,"trailing: boolean"),l.Qb(),l.Rb(289,"td"),l.wc(290,"Styles the text field as a text field with a trailing icon."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(291,"div",0),l.Rb(292,"h3",1),l.wc(293,"MdcTextarea"),l.Qb(),l.wc(294," Same properties, methods and events as "),l.Rb(295,"code",2),l.wc(296,"MdcTextField"),l.Qb(),l.Rb(297,"p"),l.wc(298," Selector: "),l.Rb(299,"span",2),l.wc(300,"mdc-textarea"),l.Qb(),l.Qb(),l.wc(301," Exported as: "),l.Rb(302,"span",2),l.wc(303,"mdcTextarea"),l.Qb(),l.Rb(304,"h4",3),l.wc(305,"Additional Properties"),l.Qb(),l.Rb(306,"table"),l.Rb(307,"thead"),l.Rb(308,"tr"),l.Rb(309,"th"),l.wc(310,"Name"),l.Qb(),l.Rb(311,"th"),l.wc(312,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(313,"tbody"),l.Rb(314,"tr"),l.Rb(315,"td"),l.wc(316,"rows: number"),l.Qb(),l.Rb(317,"td"),l.wc(318,"Number of rows for this textarea."),l.Qb(),l.Qb(),l.Rb(319,"tr"),l.Rb(320,"td"),l.wc(321,"cols: number"),l.Qb(),l.Rb(322,"td"),l.wc(323,"Number of columns for this textarea."),l.Qb(),l.Qb(),l.Rb(324,"tr"),l.Rb(325,"td"),l.wc(326,"characterCounter: boolean"),l.Qb(),l.Rb(327,"td"),l.wc(328,"Character counter is used if there is a character limit. It displays the ratio of characters used and the total character limit. "),l.Rb(329,"p"),l.Rb(330,"code",2),l.wc(331,"maxlength"),l.Qb(),l.wc(332," is required on "),l.Rb(333,"code",2),l.wc(334,"MdcTextArea"),l.Qb(),l.wc(335,"."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(336,"div",0),l.Rb(337,"h3",1),l.wc(338,"MDC_TEXT_FIELD_DEFAULT_OPTIONS"),l.Qb(),l.wc(339," Injection token that can be used to configure the default options for all text fields within an app. "),l.Rb(340,"pre"),l.Mb(341,"code",4),l.Qb(),l.Qb())},directives:[a.i,a.l,s.b],encapsulation:2}),e})(),D=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=l.Fb({type:e,selectors:[["ng-component"]],decls:379,vars:0,consts:[[1,"docs-api"],["mdcSubtitle2",""]],template:function(e,t){1&e&&(l.Rb(0,"div",0),l.Rb(1,"h4",1),l.wc(2,"Mixins for all Text Fields"),l.Qb(),l.Rb(3,"table"),l.Rb(4,"thead"),l.Rb(5,"tr"),l.Rb(6,"th"),l.wc(7,"Mixin"),l.Qb(),l.Rb(8,"th"),l.wc(9,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(10,"tbody"),l.Rb(11,"tr"),l.Rb(12,"td"),l.Rb(13,"code"),l.wc(14,"ink-color($color)"),l.Qb(),l.Qb(),l.Rb(15,"td"),l.wc(16,"Customizes the color of the text entered into an enabled text field. "),l.Qb(),l.Qb(),l.Rb(17,"tr"),l.Rb(18,"td"),l.Rb(19,"code"),l.wc(20,"placeholder-color($color)"),l.Qb(),l.Qb(),l.Rb(21,"td"),l.wc(22,"Customizes the color of the placeholder in an enabled text field. "),l.Qb(),l.Qb(),l.Rb(23,"tr"),l.Rb(24,"td"),l.Rb(25,"code"),l.wc(26,"disabled-ink-color($color)"),l.Qb(),l.Qb(),l.Rb(27,"td"),l.wc(28,"Customizes the color of the entered text in a disabled text field. "),l.Qb(),l.Qb(),l.Rb(29,"tr"),l.Rb(30,"td"),l.Rb(31,"code"),l.wc(32,"disabled-placeholder-color($color)"),l.Qb(),l.Qb(),l.Rb(33,"td"),l.wc(34,"Customizes the color of the placeholder in a disabled text field. "),l.Qb(),l.Qb(),l.Rb(35,"tr"),l.Rb(36,"td"),l.Rb(37,"code"),l.wc(38,"label-color($color)"),l.Qb(),l.Qb(),l.Rb(39,"td"),l.wc(40,"Customizes the text color of the label in an enabled text field. "),l.Qb(),l.Qb(),l.Rb(41,"tr"),l.Rb(42,"td"),l.Rb(43,"code"),l.wc(44,"disabled-label-color($color)"),l.Qb(),l.Qb(),l.Rb(45,"td"),l.wc(46,"Customizes the text color of the label in a disabled text field. "),l.Qb(),l.Qb(),l.Rb(47,"tr"),l.Rb(48,"td"),l.Rb(49,"code"),l.wc(50,"caret-color($color)"),l.Qb(),l.Qb(),l.Rb(51,"td"),l.wc(52,"Customizes the color of the cursor caret of the text field."),l.Qb(),l.Qb(),l.Rb(53,"tr"),l.Rb(54,"td"),l.Rb(55,"code"),l.wc(56,"prefix-color($color)"),l.Qb(),l.Qb(),l.Rb(57,"td"),l.wc(58,"Customizes the color of the prefix text of an enabled text field. "),l.Qb(),l.Qb(),l.Rb(59,"tr"),l.Rb(60,"td"),l.Rb(61,"code"),l.wc(62,"disabled-prefix-color($color)"),l.Qb(),l.Qb(),l.Rb(63,"td"),l.wc(64,"Customizes the color of the prefix text of a disabled text field. "),l.Qb(),l.Qb(),l.Rb(65,"tr"),l.Rb(66,"td"),l.Rb(67,"code"),l.wc(68,"suffix-color($color)"),l.Qb(),l.Qb(),l.Rb(69,"td"),l.wc(70,"Customizes the color of the suffix text of an enabled text field. "),l.Qb(),l.Qb(),l.Rb(71,"tr"),l.Rb(72,"td"),l.Rb(73,"code"),l.wc(74,"disabled-suffix-color($color)"),l.Qb(),l.Qb(),l.Rb(75,"td"),l.wc(76,"Customizes the color of the suffix text of a disabled text field. "),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(77,"h4",1),l.wc(78,"Mixins for Filled Text Field and Textarea"),l.Qb(),l.Rb(79,"table"),l.Rb(80,"thead"),l.Rb(81,"tr"),l.Rb(82,"th"),l.wc(83,"Mixin"),l.Qb(),l.Rb(84,"th"),l.wc(85,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(86,"tbody"),l.Rb(87,"tr"),l.Rb(88,"td"),l.Rb(89,"code"),l.wc(90,"fill-color($color)"),l.Qb(),l.Qb(),l.Rb(91,"td"),l.wc(92,"Customizes the background color of the text field or textarea when enabled."),l.Qb(),l.Qb(),l.Rb(93,"tr"),l.Rb(94,"td"),l.Rb(95,"code"),l.wc(96,"disabled-fill-color($color)"),l.Qb(),l.Qb(),l.Rb(97,"td"),l.wc(98,"Customizes the background color of the text field or textarea when disabled."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(99,"h4",1),l.wc(100,"Mixins for Filled Text Field"),l.Qb(),l.Rb(101,"table"),l.Rb(102,"thead"),l.Rb(103,"tr"),l.Rb(104,"th"),l.wc(105,"Mixin"),l.Qb(),l.Rb(106,"th"),l.wc(107,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(108,"tbody"),l.Rb(109,"tr"),l.Rb(110,"td"),l.Rb(111,"code"),l.wc(112,"shape-radius($radius, $rtl-reflexive)"),l.Qb(),l.Qb(),l.Rb(113,"td"),l.wc(114,"Sets rounded shape to boxed text field variant with given radius size. Set "),l.Rb(115,"code"),l.wc(116,"$rtl-reflexive"),l.Qb(),l.wc(117," to true to flip radius values in RTL context, defaults to false."),l.Qb(),l.Qb(),l.Rb(118,"tr"),l.Rb(119,"td"),l.Rb(120,"code"),l.wc(121,"bottom-line-color($color)"),l.Qb(),l.Qb(),l.Rb(122,"td"),l.wc(123,"Customizes the text field bottom line color."),l.Qb(),l.Qb(),l.Rb(124,"tr"),l.Rb(125,"td"),l.Rb(126,"code"),l.wc(127,"hover-bottom-line-color($color)"),l.Qb(),l.Qb(),l.Rb(128,"td"),l.wc(129,"Customizes the hover text field bottom line color."),l.Qb(),l.Qb(),l.Rb(130,"tr"),l.Rb(131,"td"),l.Rb(132,"code"),l.wc(133,"disabled-bottom-line-color($color)"),l.Qb(),l.Qb(),l.Rb(134,"td"),l.wc(135,"Customizes the disabled text field bottom line color."),l.Qb(),l.Qb(),l.Rb(136,"tr"),l.Rb(137,"td"),l.Rb(138,"code"),l.wc(139,"line-ripple-color($color)"),l.Qb(),l.Qb(),l.Rb(140,"td"),l.wc(141,"Customizes the color of the default line ripple of the text field. "),l.Qb(),l.Qb(),l.Rb(142,"tr"),l.Rb(143,"td"),l.Rb(144,"code"),l.wc(145,"density($density-scale)"),l.Qb(),l.Qb(),l.Rb(146,"td"),l.wc(147,"Sets density scale for default text field variant. Supported density scale values "),l.Rb(148,"code"),l.wc(149,"-4"),l.Qb(),l.wc(150,", "),l.Rb(151,"code"),l.wc(152,"-3"),l.Qb(),l.wc(153,", "),l.Rb(154,"code"),l.wc(155,"-2"),l.Qb(),l.wc(156,", "),l.Rb(157,"code"),l.wc(158,"-1"),l.Qb(),l.wc(159,", "),l.Rb(160,"code"),l.wc(161,"0"),l.Qb(),l.wc(162,"."),l.Qb(),l.Qb(),l.Rb(163,"tr"),l.Rb(164,"td"),l.Rb(165,"code"),l.wc(166,"height($height)"),l.Qb(),l.Qb(),l.Rb(167,"td"),l.wc(168,"Sets height of default text field variant."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(169,"h4",1),l.wc(170,"Mixins for Outlined Text Field and Textarea"),l.Qb(),l.Rb(171,"table"),l.Rb(172,"thead"),l.Rb(173,"tr"),l.Rb(174,"th"),l.wc(175,"Mixin"),l.Qb(),l.Rb(176,"th"),l.wc(177,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(178,"tbody"),l.Rb(179,"tr"),l.Rb(180,"td"),l.Rb(181,"code"),l.wc(182,"focused-outline-color($color)"),l.Qb(),l.Qb(),l.Rb(183,"td"),l.wc(184,"Customizes the outline border color when the text field or textarea is focused."),l.Qb(),l.Qb(),l.Rb(185,"tr"),l.Rb(186,"td"),l.Rb(187,"code"),l.wc(188,"hover-outline-color($color)"),l.Qb(),l.Qb(),l.Rb(189,"td"),l.wc(190,"Customizes the outline border color when the text field or textarea is hovered."),l.Qb(),l.Qb(),l.Rb(191,"tr"),l.Rb(192,"td"),l.Rb(193,"code"),l.wc(194,"disabled-outline-color($color)"),l.Qb(),l.Qb(),l.Rb(195,"td"),l.wc(196,"Customizes the outline border color when the text field or textarea is disabled."),l.Qb(),l.Qb(),l.Rb(197,"tr"),l.Rb(198,"td"),l.Rb(199,"code"),l.wc(200,"outline-color($color)"),l.Qb(),l.Qb(),l.Rb(201,"td"),l.wc(202,"Customizes the border color of the outlined text field or textarea. "),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(203,"h4",1),l.wc(204,"Mixins for Outlined Text Field"),l.Qb(),l.Rb(205,"table"),l.Rb(206,"thead"),l.Rb(207,"tr"),l.Rb(208,"th"),l.wc(209,"Mixin"),l.Qb(),l.Rb(210,"th"),l.wc(211,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(212,"tbody"),l.Rb(213,"tr"),l.Rb(214,"td"),l.Rb(215,"code"),l.wc(216,"outline-shape-radius($radius, $rtl-reflexive)"),l.Qb(),l.Qb(),l.Rb(217,"td"),l.wc(218,"Sets rounded shape to outlined text field variant with given radius size. Set "),l.Rb(219,"code"),l.wc(220,"$rtl-reflexive"),l.Qb(),l.wc(221," to true to flip radius values in RTL context, defaults to false."),l.Qb(),l.Qb(),l.Rb(222,"tr"),l.Rb(223,"td"),l.Rb(224,"code"),l.wc(225,"outlined-density($density-scale)"),l.Qb(),l.Qb(),l.Rb(226,"td"),l.wc(227,"Sets density scale for outlined text field (Excluding outlined text field with leading icon). Supported density scale values "),l.Rb(228,"code"),l.wc(229,"-4"),l.Qb(),l.wc(230,", "),l.Rb(231,"code"),l.wc(232,"-3"),l.Qb(),l.wc(233,", "),l.Rb(234,"code"),l.wc(235,"-2"),l.Qb(),l.wc(236,", "),l.Rb(237,"code"),l.wc(238,"-1"),l.Qb(),l.wc(239,", "),l.Rb(240,"code"),l.wc(241,"0"),l.Qb(),l.wc(242,"."),l.Qb(),l.Qb(),l.Rb(243,"tr"),l.Rb(244,"td"),l.Rb(245,"code"),l.wc(246,"outlined-height($height)"),l.Qb(),l.Qb(),l.Rb(247,"td"),l.wc(248,"Sets height of outlined text field variant (Excluding outlined text field with leading icon)."),l.Qb(),l.Qb(),l.Rb(249,"tr"),l.Rb(250,"td"),l.Rb(251,"code"),l.wc(252,"outlined-with-leading-icon-density($density-scale)"),l.Qb(),l.Qb(),l.Rb(253,"td"),l.wc(254,"Sets density scale for outlined text field with leading icon. Supported density scale values "),l.Rb(255,"code"),l.wc(256,"-4"),l.Qb(),l.wc(257,", "),l.Rb(258,"code"),l.wc(259,"-3"),l.Qb(),l.wc(260,", "),l.Rb(261,"code"),l.wc(262,"-2"),l.Qb(),l.wc(263,", "),l.Rb(264,"code"),l.wc(265,"-1"),l.Qb(),l.wc(266,", "),l.Rb(267,"code"),l.wc(268,"0"),l.Qb(),l.wc(269,"."),l.Qb(),l.Qb(),l.Rb(270,"tr"),l.Rb(271,"td"),l.Rb(272,"code"),l.wc(273,"outlined-with-leading-icon-height($height)"),l.Qb(),l.Qb(),l.Rb(274,"td"),l.wc(275,"Sets height of outlined text field with leading icon variant."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(276,"h4",1),l.wc(277,"Mixins for Textarea"),l.Qb(),l.Rb(278,"table"),l.Rb(279,"thead"),l.Rb(280,"tr"),l.Rb(281,"th"),l.wc(282,"Mixin"),l.Qb(),l.Rb(283,"th"),l.wc(284,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(285,"tbody"),l.Rb(286,"tr"),l.Rb(287,"td"),l.Rb(288,"code"),l.wc(289,"textarea-shape-radius($radius, $rtl-reflexive)"),l.Qb(),l.Qb(),l.Rb(290,"td"),l.wc(291,"Sets rounded shape to text area variant with given radius size. Set "),l.Rb(292,"code"),l.wc(293,"$rtl-reflexive"),l.Qb(),l.wc(294," to true to flip radius values in RTL context, defaults to false."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(295,"h4",1),l.wc(296,"Mixins for Text Field Icon"),l.Qb(),l.Rb(297,"table"),l.Rb(298,"thead"),l.Rb(299,"tr"),l.Rb(300,"th"),l.wc(301,"Mixin"),l.Qb(),l.Rb(302,"th"),l.wc(303,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(304,"tbody"),l.Rb(305,"tr"),l.Rb(306,"td"),l.Rb(307,"code"),l.wc(308,"leading-icon-color($color)"),l.Qb(),l.Qb(),l.Rb(309,"td"),l.wc(310,"Customizes the color for the leading icon in an enabled text-field. "),l.Qb(),l.Qb(),l.Rb(311,"tr"),l.Rb(312,"td"),l.Rb(313,"code"),l.wc(314,"trailing-icon-color($color)"),l.Qb(),l.Qb(),l.Rb(315,"td"),l.wc(316,"Customizes the color for the trailing icon in an enabled text-field. "),l.Qb(),l.Qb(),l.Rb(317,"tr"),l.Rb(318,"td"),l.Rb(319,"code"),l.wc(320,"disabled-icon-color($color)"),l.Qb(),l.Qb(),l.Rb(321,"td"),l.wc(322,"Customizes the color for the leading/trailing icons in a disabled text-field."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(323,"h4",1),l.wc(324,"Mixins for Text Field Helper Text"),l.Qb(),l.Rb(325,"table"),l.Rb(326,"thead"),l.Rb(327,"tr"),l.Rb(328,"th"),l.wc(329,"Mixin"),l.Qb(),l.Rb(330,"th"),l.wc(331,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(332,"tbody"),l.Rb(333,"tr"),l.Rb(334,"td"),l.Rb(335,"code"),l.wc(336,"helper-text-color($color)"),l.Qb(),l.Qb(),l.Rb(337,"td"),l.wc(338,"Customizes the color of the helper text following an enabled text-field."),l.Qb(),l.Qb(),l.Rb(339,"tr"),l.Rb(340,"td"),l.Rb(341,"code"),l.wc(342,"disabled-helper-text-color($color)"),l.Qb(),l.Qb(),l.Rb(343,"td"),l.wc(344,"Customizes the color of the helper text following a disabled text-field."),l.Qb(),l.Qb(),l.Rb(345,"tr"),l.Rb(346,"td"),l.Rb(347,"code"),l.wc(348,"helper-text-validation-color($color)"),l.Qb(),l.Qb(),l.Rb(349,"td"),l.wc(350,"Customizes the color of the helper text when it's used as a validation message."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(351,"h4",1),l.wc(352,"Mixins for Text Field Character Counter"),l.Qb(),l.Rb(353,"table"),l.Rb(354,"thead"),l.Rb(355,"tr"),l.Rb(356,"th"),l.wc(357,"Mixin"),l.Qb(),l.Rb(358,"th"),l.wc(359,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(360,"tbody"),l.Rb(361,"tr"),l.Rb(362,"td"),l.Rb(363,"code"),l.wc(364,"character-counter-color($color)"),l.Qb(),l.Qb(),l.Rb(365,"td"),l.wc(366,"Customizes the color of the character counter associated with an enabled text field."),l.Qb(),l.Qb(),l.Rb(367,"tr"),l.Rb(368,"td"),l.Rb(369,"code"),l.wc(370,"character-disabled-counter-color($color)"),l.Qb(),l.Qb(),l.Rb(371,"td"),l.wc(372,"Customizes the color of the character counter associated with a disabled text field."),l.Qb(),l.Qb(),l.Rb(373,"tr"),l.Rb(374,"td"),l.Rb(375,"code"),l.wc(376,"character-counter-position($xOffset, $yOffset)"),l.Qb(),l.Qb(),l.Rb(377,"td"),l.wc(378,"Positions the character counter element inside text field. Used only for textarea variant."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Qb())},directives:[a.l],encapsulation:2}),e})();class k{}const $=[{path:"",component:I,children:[{path:"",redirectTo:"api"},{path:"api",component:E},{path:"sass",component:D},{path:"examples",component:(()=>{class e{constructor(e,t){this.demoForm=new o.d({username:new o.b({value:null,disabled:!1},[o.p.required,o.p.minLength(3),o.p.maxLength(11)])}),this.matcher=new B,this.waypoint=new k,this.prefilledText="Prefilled",this.inputEvent="",this.changeEvent="",this.focusEvent=!1,this.exampleStandard={html:'<mdc-text-field label="Standard"\n  name="txt-field-standard"\n  required\n  [helperText]="standardHelper"></mdc-text-field>\n<mdc-helper-text #standardHelper validation persistent>Helper Text</mdc-helper-text>'},this.exampleEvents={html:'<mdc-text-field label="Standard"\n  (input)="onInput($event)"\n  (focus)="onFocus($event)"\n  (change)="onChange($event)"></mdc-text-field>',ts:"onInput(value: any): void {\n  this.inputEvent = value;\n}\n\nonInput(value: any): void {\n  // do something\n}\n\nonChange(value: any): void {\n  // do something\n}\n\nonFocus(focused: boolean): void {\n  // do something\n}"},this.exampleReactive={html:'<form [formGroup]="demoForm" (ngSubmit)="submit(demoForm)" #formDirective="ngForm">\n  <mdc-form-field>\n    <mdc-text-field formControlName="username" label="Username" outlined\n      [errorStateMatcher]="matcher"></mdc-text-field>\n    <mdc-helper-text validation>\n      <span *ngIf="demoForm.controls[\'username\'].hasError(\'required\')">Username is required</span>\n      <span *ngIf="demoForm.controls[\'username\'].hasError(\'minlength\')">Username is not long enough</span>\n      <span *ngIf="demoForm.controls[\'username\'].hasError(\'maxlength\')">Username is max length is 11</span>\n    </mdc-helper-text>\n  </mdc-form-field>\n  <div class="demo-layout__row">\n    <button mdc-button type="submit">Submit</button>\n    <button mdc-button type="button" (click)="resetForm(formDirective)">Reset</button>\n    <button mdc-button type="button" (click)="demoForm.controls[\'username\'].setValue(\'User-1\')">Set Value</button>\n  </div>\n</form>\n\n<p>Control Valid: {{demoForm.controls[\'username\'].valid}}</p>\n<p>Dirty: {{ demoForm.dirty }}</p>\n<p>Valid: {{ demoForm.valid }}</p>\n<p>Pristine: {{ demoForm.pristine }}</p>\n<p>Touched: {{ demoForm.touched }}</p>\n<p>Value: {{ demoForm.value | json }}</p>',ts:"/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\nmatcher = new MyErrorStateMatcher();\n\ndemoForm = new FormGroup({\n  username: new FormControl(\n    { value: null, disabled: false },\n    [\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(11)\n    ])\n});\n\nsubmit(f: NgForm | FormGroup) {\n  if (f.invalid) {\n    return;\n  }\n}\n\nresetForm(formDirective: FormGroupDirective) {\n  formDirective.resetForm();\n  this.demoForm.reset();\n}"},this.exampleNumericNgModel={html:'<form #demoWeightForm="ngForm" id="demoWeightForm" (ngSubmit)="submit(demoWeightForm)">\n  <mdc-form-field>\n    <mdc-text-field type="number" name="demoweight" label="Weight" ngModel #demoWeightModel="ngModel"\n      required></mdc-text-field>\n    <mdc-helper-text validation>\n      <span *ngIf="!demoweight?.value">Weight is required</span>\n    </mdc-helper-text>\n  </mdc-form-field>\n</form>\n\n<button mdc-button type="submit" form="demoWeightForm">Submit</button>\n<button mdc-button (click)="demoWeightForm.reset()">Reset</button>\n\n<p>Dirty: {{ demoWeightModel.dirty }}</p>\n<p>Valid: {{ demoWeightForm.valid }}</p>\n<p>Pristine: {{ demoWeightForm.pristine }}</p>\n<p>Touched: {{ demoWeightModel.touched }}</p>\n<p>Value: {{ demoWeightModel.value }}</p>'},this.exampleUsingValue={html:'<mdc-form-field>\n  <mdc-text-field #demoValue label="Enter value" [value]="demoInputValue" required></mdc-text-field>\n  <mdc-helper-text validation>\n    <span *ngIf="!demoValue?.value">Field is required</span>\n  </mdc-helper-text>\n</mdc-form-field>\n\n<button mdc-button (click)="demoValue.value = null">Reset value</button>\n\n<p>Value: {{demoValue.value}}</p>',ts:"demoInputValue: string;"},this.exampleDensity={html:'<mdc-text-field class="demo-density-text-field" label="Density"></mdc-text-field>\n<mdc-text-field class="demo-density-outlined-text-field" outlined label="Density"></mdc-text-field>\n<mdc-text-field class="demo-density-outlined-text-field-with-leading-icon" outlined label="Event date">\n  <mdc-icon mdcTextFieldIcon leading>event</mdc-icon>\n</mdc-text-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleIcons={html:'<mdc-text-field autocomplete="tel" type="tel" label="Phone number">\n  <mdc-icon mdcTextFieldIcon leading>phone</mdc-icon>\n  <mdc-icon mdcTextFieldIcon trailing>event</mdc-icon>\n</mdc-text-field>\n<mdc-text-field type="date" outlined label="Event date">\n  <mdc-icon mdcTextFieldIcon leading>event</mdc-icon>\n</mdc-text-field>\n<mdc-text-field type="date" outlined label="Event date">\n  <button mdc-icon-button mdcTextFieldIcon trailing icon="event"></button>\n</mdc-text-field>\n<mdc-text-field disabled label="Disabled">\n  <mdc-icon mdcTextFieldIcon leading>event</mdc-icon>\n</mdc-text-field>'},this.examplePrefixSuffix={html:'<mdc-text-field label="Currency Value" type="number" prefix="$" suffix=".00"></mdc-text-field>\n<mdc-text-field outlined label="Currency Value" type="number" prefix="$" suffix=".00"></mdc-text-field>\n<mdc-text-field outlined type="number" prefix="$" suffix=".00" endAligned></mdc-text-field>\n\n<div dir="rtl">\n  <mdc-text-field outlined label="Label" type="number"\n    suffix="/100" ltrText></mdc-text-field>\n</div>'},this.exampleSvgIcon={html:'<mdc-text-field outlined label="Svg icon">\n  <mdc-icon mdcTextFieldIcon leading svgIcon="thumbup" class="temporary-workaround-for-text-field-svg"></mdc-icon>\n</mdc-text-field>',ts:"import { DomSanitizer } from '@angular/platform-browser';\nimport { MdcIconRegistry } from '@angular-mdc/web';\n\nconstructor(iconRegistry: MdcIconRegistry, sanitizer: DomSanitizer) {\n  iconRegistry.addSvgIcon(\n    'thumbup', sanitizer.bypassSecurityTrustResourceUrl('/assets/thumbup-icon.svg'));\n}",sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleShape={html:'<mdc-text-field label="Standard" required class="demo-text-field-custom-colors"></mdc-text-field>\n\n<mdc-text-field label="Standard" class="demo-shaped-text-field"></mdc-text-field>\n\n<mdc-text-field label="Standard" outlined class="demo-shaped-text-field--outline"></mdc-text-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleNumeric={html:'<mdc-text-field type="number" label="Distance" [(ngModel)]="waypoint.dt"></mdc-text-field>\n\n<p>Model: {{waypoint | json}}</p>',ts:"class Directions {\n  dt: number;\n}\n\nwaypoint = new Directions();"},this.examplePrefilled={html:'<mdc-text-field [(ngModel)]="prefilledText" label="Username"></mdc-text-field>',ts:"prefilledText: string = 'Prefilled';"},this.exampleDateTime={html:'<mdc-text-field type="date" label="Birthday"></mdc-text-field>\n\n<mdc-text-field type="time" label="Time"></mdc-text-field>\n\n<mdc-text-field type="password" label="Password" required outlined></mdc-text-field>\n\n<mdc-text-field type="color" label="Color"></mdc-text-field>'},this.exampleRtl={html:'<mdc-form-field dir="rtl">\n  <mdc-text-field outlined label="Standard">\n    <mdc-icon mdcTextFieldIcon leading>phone</mdc-icon>\n  </mdc-text-field>\n</mdc-form-field>'},this.exampleFullWithSingleLine={html:'<mdc-text-field label="Subject" fullwidth></mdc-text-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleNoLabel={html:'<mdc-form-field>\n  <mdc-text-field>\n  </mdc-text-field>\n  <mdc-helper-text persistent>Helper Text\n  </mdc-helper-text>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-text-field outlined></mdc-text-field>\n  <mdc-helper-text persistent>Helper Text\n  </mdc-helper-text>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-text-field outlined class="demo-shaped-text-field--outline">\n  </mdc-text-field>\n  <mdc-helper-text persistent>Helper Text\n  </mdc-helper-text>\n</mdc-form-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleCharacterCounter={html:'<mdc-form-field>\n  <mdc-text-field label="Standard" characterCounter maxlength="10">\n  </mdc-text-field>\n  <mdc-helper-text></mdc-helper-text>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-text-field outlined characterCounter label="Standard" maxlength="10">\n  </mdc-text-field>\n  <mdc-helper-text persistent>Helper Text\n  </mdc-helper-text>\n</mdc-form-field>'},this.exampleTACounter={html:'<mdc-textarea label="Comments" characterCounter maxlength="140"\n  [helperText]="taCounterHelper" rows="8" cols="40"></mdc-textarea>\n<mdc-helper-text #taCounterHelper validation>Helper Text</mdc-helper-text>'},this.exampleTextarea={html:'<mdc-textarea label="Comments" rows="8" cols="40" required [helperText]="commentsHelper"></mdc-textarea>\n<mdc-helper-text #commentsHelper validation>Helper Text</mdc-helper-text>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleFullWidth={html:'<mdc-textarea label="Type your message here" fullwidth required rows="8"\n  [helperText]="fullWidthHelper"></mdc-textarea>\n<mdc-helper-text #fullWidthHelper validation>Helper Text</mdc-helper-text>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},e.addSvgIcon("thumbup",t.bypassSecurityTrustResourceUrl(c.a.production?"https://trimox.github.io/angular-mdc-web/assets/thumbup-icon.svg":"/assets/thumbup-icon.svg"))}onInput(e){this.inputEvent=e}onChange(e){this.changeEvent=e}onFocus(e){this.focusEvent=e}submit(e){}resetForm(e){e.resetForm(),this.demoForm.reset()}alternateColors(e){if(e.textarea)if(e.textarea){const t="demo-textarea";e.elementRef.nativeElement.classList.contains(t)?e.elementRef.nativeElement.classList.remove(t):e.elementRef.nativeElement.classList.add(t)}else{const t="demo-fullwidth-input";e.elementRef.nativeElement.classList.contains(t)?e.elementRef.nativeElement.classList.remove(t):e.elementRef.nativeElement.classList.add(t)}else{const t="demo-text-field-custom-colors";e.elementRef.nativeElement.classList.contains(t)?e.elementRef.nativeElement.classList.remove(t):e.elementRef.nativeElement.classList.add(t)}}}return e.\u0275fac=function(t){return new(t||e)(l.Lb(m.a),l.Lb(u.b))},e.\u0275cmp=l.Fb({type:e,selectors:[["ng-component"]],decls:298,vars:70,consts:[[1,"demo-content"],[1,"demo-layout__row"],["mdc-button","",3,"click"],["label","Standard","name","txt-field-standard","required","",3,"helperText"],["standard",""],["validation","","persistent",""],["standardHelper",""],[3,"example"],[1,"demo-content__headline"],["label","Standard",3,"input","focus","change"],["mdc-button","",3,"disabled","click"],[3,"formGroup","ngSubmit"],["formDirective","ngForm"],["formControlName","username","label","Username","outlined","",3,"errorStateMatcher"],["demoformInput",""],["validation",""],[4,"ngIf"],["mdc-button","","type","submit"],["mdc-button","","type","button",3,"click"],["id","demoWeightForm",3,"ngSubmit"],["demoWeightForm","ngForm"],["type","number","name","demoweight","label","Weight","ngModel","","required",""],["demoweight","","demoWeightModel","ngModel"],["mdc-button","","type","submit","form","demoWeightForm"],[1,"demo-container"],["label","Currency Value","type","number","prefix","$","suffix",".00"],["outlined","","label","Currency Value","type","number","prefix","$","suffix",".00"],["outlined","","type","number","prefix","$","suffix",".00","endAligned",""],["endAlignedExample",""],["dir","rtl"],["outlined","","label","Label","type","number","suffix","/100","ltrText",""],["ltrTextExample",""],["label","Standard","characterCounter","","maxlength","10"],["outlined","","characterCounter","","label","Standard","maxlength","10"],["persistent",""],["label","Comments","rows","8","cols","40","required","","maxlength","140","characterCounter","",3,"helperText"],["taCounterHelper",""],["outlined",""],["outlined","",1,"demo-shaped-text-field--outline"],["label","Enter value","required","",3,"value"],["demoValue",""],["autocomplete","tel","type","tel","label","Phone number"],["mdcTextFieldIcon","","leading",""],["mdcTextFieldIcon","","trailing",""],["type","date","outlined","","label","Event date"],["mdc-icon-button","","mdcTextFieldIcon","","trailing","","icon","event"],["disabled","","label","Disabled"],["outlined","","label","Svg icon"],["mdcTextFieldIcon","","leading","","svgIcon","thumbup",1,"temporary-workaround-for-text-field-svg"],["label","Density",1,"demo-density-text-field"],["outlined","","label","Density",1,"demo-density-outlined-text-field"],["outlined","","label","Event date",1,"demo-density-outlined-text-field-with-leading-icon"],["label","Standard","required","",1,"demo-text-field-custom-colors"],["label","Standard",1,"demo-shaped-text-field"],["label","Standard","outlined","",1,"demo-shaped-text-field--outline"],["type","number","label","Distance",3,"ngModel","ngModelChange"],["label","Username",3,"ngModel","ngModelChange"],["outlined","","label","Standard"],["type","date","label","Birthday"],["type","time","label","Time"],["type","password","label","Password","required","","outlined",""],["type","color","label","Color",2,"width","6rem"],["label","Subject","fullwidth",""],["demofullwidth",""],["label","Comments","rows","8","cols","40","required","",3,"helperText"],["comments",""],["commentsHelper",""],["label","Type your message here","fullwidth","","required","","rows","8",3,"helperText"],["demotextarea",""],["fullWidthHelper",""]],template:function(e,t){if(1&e){const e=l.Sb();l.Rb(0,"div",0),l.Rb(1,"div",1),l.Rb(2,"button",2),l.Zb("click",(function(){l.pc(e);const t=l.oc(11);return t.outlined=!t.outlined})),l.wc(3),l.Qb(),l.Rb(4,"button",2),l.Zb("click",(function(){l.pc(e);const t=l.oc(11);return t.required=!t.required})),l.wc(5),l.Qb(),l.Rb(6,"button",2),l.Zb("click",(function(){l.pc(e);const t=l.oc(11);return t.disabled=!t.disabled})),l.wc(7),l.Qb(),l.Rb(8,"button",2),l.Zb("click",(function(){l.pc(e);const t=l.oc(11);return t.readonly=!t.readonly})),l.wc(9),l.Qb(),l.Qb(),l.Mb(10,"mdc-text-field",3,4),l.Rb(12,"mdc-helper-text",5,6),l.wc(14,"Helper Text "),l.Qb(),l.Mb(15,"example-viewer",7),l.Qb(),l.Rb(16,"div",0),l.Rb(17,"h3",8),l.wc(18,"Input and Change events"),l.Qb(),l.Rb(19,"mdc-text-field",9),l.Zb("input",(function(e){return t.onInput(e)}))("focus",(function(e){return t.onFocus(e)}))("change",(function(e){return t.onChange(e)})),l.Qb(),l.Rb(20,"p"),l.wc(21),l.Qb(),l.Rb(22,"p"),l.wc(23),l.Qb(),l.Rb(24,"p"),l.wc(25),l.Qb(),l.Mb(26,"example-viewer",7),l.Qb(),l.Rb(27,"div",0),l.Rb(28,"h3",8),l.wc(29,"Reactive Form"),l.Qb(),l.Rb(30,"div",1),l.Rb(31,"button",2),l.Zb("click",(function(){l.pc(e);const t=l.oc(41);return t.outlined=!t.outlined})),l.wc(32),l.Qb(),l.Rb(33,"button",2),l.Zb("click",(function(){l.pc(e);const t=l.oc(41);return t.useNativeValidation=!t.useNativeValidation})),l.wc(34),l.Qb(),l.Rb(35,"button",10),l.Zb("click",(function(){return t.demoForm.controls.username.markAsTouched()})),l.wc(36,"Mark touched"),l.Qb(),l.Qb(),l.Rb(37,"form",11,12),l.Zb("ngSubmit",(function(){return t.submit(t.demoForm)})),l.Rb(39,"mdc-form-field"),l.Mb(40,"mdc-text-field",13,14),l.Rb(42,"mdc-helper-text",15),l.uc(43,T,2,0,"span",16),l.uc(44,M,2,0,"span",16),l.uc(45,F,2,0,"span",16),l.Qb(),l.Qb(),l.Rb(46,"div",1),l.Rb(47,"button",17),l.wc(48,"Submit"),l.Qb(),l.Rb(49,"button",18),l.Zb("click",(function(){l.pc(e);const b=l.oc(38);return t.resetForm(b)})),l.wc(50,"Reset"),l.Qb(),l.Rb(51,"button",18),l.Zb("click",(function(){return t.demoForm.controls.username.setValue("User-1")})),l.wc(52,"Set Value"),l.Qb(),l.Qb(),l.Qb(),l.Rb(53,"p"),l.wc(54),l.Qb(),l.Rb(55,"p"),l.wc(56),l.Qb(),l.Rb(57,"p"),l.wc(58),l.Qb(),l.Rb(59,"p"),l.wc(60),l.Qb(),l.Rb(61,"p"),l.wc(62),l.Qb(),l.Rb(63,"p"),l.wc(64),l.ec(65,"json"),l.Qb(),l.Mb(66,"example-viewer",7),l.Qb(),l.Rb(67,"div",0),l.Rb(68,"h3",8),l.wc(69,"Numeric with ngModel Form"),l.Qb(),l.Rb(70,"div",1),l.Rb(71,"button",2),l.Zb("click",(function(){l.pc(e);const t=l.oc(77);return t.outlined=!t.outlined})),l.wc(72),l.Qb(),l.Qb(),l.Rb(73,"form",19,20),l.Zb("ngSubmit",(function(){l.pc(e);const b=l.oc(74);return t.submit(b)})),l.Rb(75,"mdc-form-field"),l.Mb(76,"mdc-text-field",21,22),l.Rb(79,"mdc-helper-text",15),l.uc(80,S,2,0,"span",16),l.Qb(),l.Qb(),l.Qb(),l.Rb(81,"div",1),l.Rb(82,"button",23),l.wc(83,"Submit"),l.Qb(),l.Rb(84,"button",2),l.Zb("click",(function(){return l.pc(e),l.oc(74).reset()})),l.wc(85,"Reset"),l.Qb(),l.Qb(),l.Rb(86,"p"),l.wc(87),l.Qb(),l.Rb(88,"p"),l.wc(89),l.Qb(),l.Rb(90,"p"),l.wc(91),l.Qb(),l.Rb(92,"p"),l.wc(93),l.Qb(),l.Rb(94,"p"),l.wc(95),l.Qb(),l.Mb(96,"example-viewer",7),l.Qb(),l.Rb(97,"div",0),l.Rb(98,"h3",8),l.wc(99,"Prefix and suffix text"),l.Qb(),l.Rb(100,"div",24),l.Mb(101,"mdc-text-field",25),l.Qb(),l.Rb(102,"div",24),l.Mb(103,"mdc-text-field",26),l.Qb(),l.Rb(104,"div",1),l.Rb(105,"button",2),l.Zb("click",(function(){l.pc(e);const t=l.oc(109);return t.endAligned=!t.endAligned})),l.wc(106),l.Qb(),l.Qb(),l.Rb(107,"div",24),l.Mb(108,"mdc-text-field",27,28),l.Qb(),l.Rb(110,"div",1),l.Rb(111,"button",2),l.Zb("click",(function(){l.pc(e);const t=l.oc(116);return t.ltrText=!t.ltrText})),l.wc(112),l.Qb(),l.Qb(),l.Rb(113,"div",24),l.Rb(114,"div",29),l.Mb(115,"mdc-text-field",30,31),l.Qb(),l.Qb(),l.Mb(117,"example-viewer",7),l.Qb(),l.Rb(118,"div",0),l.Rb(119,"h3",8),l.wc(120,"Character Counter"),l.Qb(),l.Rb(121,"div",1),l.Rb(122,"mdc-form-field"),l.Mb(123,"mdc-text-field",32),l.Mb(124,"mdc-helper-text"),l.Qb(),l.Rb(125,"mdc-form-field"),l.Mb(126,"mdc-text-field",33),l.Rb(127,"mdc-helper-text",34),l.wc(128,"Helper Text "),l.Qb(),l.Qb(),l.Qb(),l.Mb(129,"example-viewer",7),l.Qb(),l.Rb(130,"div",0),l.Rb(131,"h3",8),l.wc(132,"Textarea - Character Counter"),l.Qb(),l.Mb(133,"mdc-textarea",35),l.Rb(134,"mdc-helper-text",15,36),l.wc(136,"Helper Text"),l.Qb(),l.Mb(137,"example-viewer",7),l.Qb(),l.Rb(138,"div",0),l.Rb(139,"h3",8),l.wc(140,"No Label"),l.Qb(),l.Rb(141,"div",1),l.Rb(142,"mdc-form-field"),l.Mb(143,"mdc-text-field"),l.Rb(144,"mdc-helper-text",34),l.wc(145,"Helper Text "),l.Qb(),l.Qb(),l.Rb(146,"mdc-form-field"),l.Mb(147,"mdc-text-field",37),l.Rb(148,"mdc-helper-text",34),l.wc(149,"Helper Text "),l.Qb(),l.Qb(),l.Rb(150,"mdc-form-field"),l.Mb(151,"mdc-text-field",38),l.Rb(152,"mdc-helper-text",34),l.wc(153,"Helper Text "),l.Qb(),l.Qb(),l.Qb(),l.Mb(154,"example-viewer",7),l.Qb(),l.Rb(155,"div",0),l.Rb(156,"h3",8),l.wc(157,"Using [value]"),l.Qb(),l.Rb(158,"div",1),l.Rb(159,"button",2),l.Zb("click",(function(){l.pc(e);const t=l.oc(163);return t.required=!t.required})),l.wc(160),l.Qb(),l.Qb(),l.Rb(161,"mdc-form-field"),l.Mb(162,"mdc-text-field",39,40),l.Rb(164,"mdc-helper-text",15),l.uc(165,C,2,0,"span",16),l.Qb(),l.Qb(),l.Rb(166,"div",1),l.Rb(167,"button",2),l.Zb("click",(function(){return l.pc(e),l.oc(163).value=null})),l.wc(168,"Reset value"),l.Qb(),l.Qb(),l.Rb(169,"p"),l.wc(170),l.Qb(),l.Mb(171,"example-viewer",7),l.Qb(),l.Rb(172,"div",0),l.Rb(173,"h3",8),l.wc(174,"Leading and Trailing Icons"),l.Qb(),l.Rb(175,"div",24),l.Rb(176,"mdc-text-field",41),l.Rb(177,"mdc-icon",42),l.wc(178,"phone"),l.Qb(),l.Rb(179,"mdc-icon",43),l.wc(180,"event"),l.Qb(),l.Qb(),l.Qb(),l.Rb(181,"div",24),l.Rb(182,"mdc-text-field",44),l.Rb(183,"mdc-icon",42),l.wc(184,"event"),l.Qb(),l.Qb(),l.Qb(),l.Rb(185,"div",24),l.Rb(186,"mdc-text-field",44),l.Mb(187,"button",45),l.Qb(),l.Qb(),l.Rb(188,"div",24),l.Rb(189,"mdc-text-field",46),l.Rb(190,"mdc-icon",42),l.wc(191,"event"),l.Qb(),l.Qb(),l.Qb(),l.Mb(192,"example-viewer",7),l.Qb(),l.Rb(193,"div",0),l.Rb(194,"h3",8),l.wc(195,"Svg Icon"),l.Qb(),l.Rb(196,"div",24),l.Rb(197,"mdc-text-field",47),l.Mb(198,"mdc-icon",48),l.Qb(),l.Qb(),l.Mb(199,"example-viewer",7),l.Qb(),l.Rb(200,"div",0),l.Rb(201,"h3",8),l.wc(202,"Density"),l.Qb(),l.Rb(203,"div",24),l.Mb(204,"mdc-text-field",49),l.Qb(),l.Rb(205,"div",24),l.Mb(206,"mdc-text-field",50),l.Qb(),l.Rb(207,"div",24),l.Rb(208,"mdc-text-field",51),l.Rb(209,"mdc-icon",42),l.wc(210,"event"),l.Qb(),l.Qb(),l.Qb(),l.Mb(211,"example-viewer",7),l.Qb(),l.Rb(212,"div",0),l.Rb(213,"h3",8),l.wc(214,"Shape"),l.Qb(),l.Rb(215,"div",24),l.Mb(216,"mdc-text-field",52),l.Qb(),l.Rb(217,"div",24),l.Mb(218,"mdc-text-field",53),l.Qb(),l.Rb(219,"div",24),l.Mb(220,"mdc-text-field",54),l.Qb(),l.Mb(221,"example-viewer",7),l.Qb(),l.Rb(222,"div",0),l.Rb(223,"h3",8),l.wc(224,"Numeric with ngModel"),l.Qb(),l.Rb(225,"mdc-text-field",55),l.Zb("ngModelChange",(function(e){return t.waypoint.dt=e})),l.Qb(),l.Rb(226,"p"),l.wc(227),l.ec(228,"json"),l.Qb(),l.Mb(229,"example-viewer",7),l.Qb(),l.Rb(230,"div",0),l.Rb(231,"h3",8),l.wc(232,"Prefilled via ngModel"),l.Qb(),l.Rb(233,"mdc-text-field",56),l.Zb("ngModelChange",(function(e){return t.prefilledText=e})),l.Qb(),l.Rb(234,"p"),l.wc(235),l.Mb(236,"example-viewer",7),l.Qb(),l.Qb(),l.Rb(237,"div",0),l.Rb(238,"h3",8),l.wc(239,"RTL"),l.Qb(),l.Rb(240,"mdc-form-field",29),l.Rb(241,"mdc-text-field",57),l.Rb(242,"mdc-icon",42),l.wc(243,"phone"),l.Qb(),l.Qb(),l.Qb(),l.Mb(244,"example-viewer",7),l.Qb(),l.Rb(245,"div",0),l.Rb(246,"h3",8),l.wc(247,"Date / Time / Color / Password"),l.Qb(),l.Rb(248,"div",24),l.Mb(249,"mdc-text-field",58),l.Qb(),l.Rb(250,"div",24),l.Mb(251,"mdc-text-field",59),l.Qb(),l.Rb(252,"div",24),l.Mb(253,"mdc-text-field",60),l.Qb(),l.Rb(254,"div",24),l.Mb(255,"mdc-text-field",61),l.Qb(),l.Mb(256,"example-viewer",7),l.Qb(),l.Rb(257,"div",0),l.Rb(258,"h3",8),l.wc(259,"Full Width"),l.Qb(),l.Rb(260,"div",1),l.Rb(261,"button",2),l.Zb("click",(function(){l.pc(e);const b=l.oc(264);return t.alternateColors(b)})),l.wc(262,"Alternate Colors"),l.Qb(),l.Qb(),l.Mb(263,"mdc-text-field",62,63),l.Mb(265,"example-viewer",7),l.Qb(),l.Rb(266,"div",0),l.Rb(267,"h3",8),l.wc(268,"Textarea"),l.Qb(),l.Rb(269,"div",1),l.Rb(270,"button",2),l.Zb("click",(function(){l.pc(e);const t=l.oc(277);return t.disabled=!t.disabled})),l.wc(271),l.Qb(),l.Rb(272,"button",2),l.Zb("click",(function(){l.pc(e);const t=l.oc(277);return t.required=!t.required})),l.wc(273),l.Qb(),l.Rb(274,"button",2),l.Zb("click",(function(){l.pc(e);const b=l.oc(277);return t.alternateColors(b)})),l.wc(275,"Alternate Colors"),l.Qb(),l.Qb(),l.Mb(276,"mdc-textarea",64,65),l.Rb(278,"mdc-helper-text",15,66),l.wc(280,"Helper Text"),l.Qb(),l.Mb(281,"example-viewer",7),l.Qb(),l.Rb(282,"div",0),l.Rb(283,"h3",8),l.wc(284,"Full Width Textarea"),l.Qb(),l.Rb(285,"div",1),l.Rb(286,"button",2),l.Zb("click",(function(){l.pc(e);const t=l.oc(293);return t.disabled=!t.disabled})),l.wc(287),l.Qb(),l.Rb(288,"button",2),l.Zb("click",(function(){l.pc(e);const t=l.oc(293);return t.required=!t.required})),l.wc(289),l.Qb(),l.Rb(290,"button",2),l.Zb("click",(function(){l.pc(e);const b=l.oc(293);return t.alternateColors(b)})),l.wc(291,"Alternate Colors"),l.Qb(),l.Qb(),l.Mb(292,"mdc-textarea",67,68),l.Rb(294,"mdc-helper-text",15,69),l.wc(296,"Helper Text"),l.Qb(),l.Mb(297,"example-viewer",7),l.Qb()}if(2&e){const e=l.oc(11),b=l.oc(13),d=l.oc(41),i=l.oc(74),o=l.oc(77),c=l.oc(78),n=l.oc(109),r=l.oc(116),a=l.oc(135),s=l.oc(163),m=l.oc(277),u=l.oc(279),R=l.oc(293),h=l.oc(295);l.Bb(3),l.yc("Outlined: ",e.outlined?"On":"Off",""),l.Bb(2),l.yc("Required: ",e.required?"On":"Off",""),l.Bb(2),l.yc("Disabled: ",e.disabled?"On":"Off",""),l.Bb(2),l.yc("Read Only: ",e.readonly?"On":"Off",""),l.Bb(1),l.ic("helperText",b),l.Bb(5),l.ic("example",t.exampleStandard),l.Bb(6),l.yc("Input event: ",t.inputEvent,""),l.Bb(2),l.yc("Change event: ",t.changeEvent,""),l.Bb(2),l.yc("Focus event: ",t.focusEvent,""),l.Bb(1),l.ic("example",t.exampleEvents),l.Bb(6),l.yc("Outlined: ",d.outlined?"On":"Off",""),l.Bb(2),l.yc("Native validation: ",d.useNativeValidation?"On":"Off",""),l.Bb(1),l.ic("disabled",t.demoForm.touched),l.Bb(2),l.ic("formGroup",t.demoForm),l.Bb(3),l.ic("errorStateMatcher",t.matcher),l.Bb(3),l.ic("ngIf",t.demoForm.controls.username.hasError("required")),l.Bb(1),l.ic("ngIf",t.demoForm.controls.username.hasError("minlength")),l.Bb(1),l.ic("ngIf",t.demoForm.controls.username.hasError("maxlength")),l.Bb(9),l.yc("Control Valid: ",t.demoForm.controls.username.valid,""),l.Bb(2),l.yc("Dirty: ",t.demoForm.dirty,""),l.Bb(2),l.yc("Valid: ",t.demoForm.valid,""),l.Bb(2),l.yc("Pristine: ",t.demoForm.pristine,""),l.Bb(2),l.yc("Touched: ",t.demoForm.touched,""),l.Bb(2),l.yc("Value: ",l.fc(65,66,t.demoForm.value),""),l.Bb(2),l.ic("example",t.exampleReactive),l.Bb(6),l.yc("Outlined: ",o.outlined?"On":"Off",""),l.Bb(8),l.ic("ngIf",!(null!=o&&o.value)),l.Bb(7),l.yc("Dirty: ",c.dirty,""),l.Bb(2),l.yc("Valid: ",i.valid,""),l.Bb(2),l.yc("Pristine: ",i.pristine,""),l.Bb(2),l.yc("Touched: ",c.touched,""),l.Bb(2),l.yc("Value: ",c.value,""),l.Bb(1),l.ic("example",t.exampleNumericNgModel),l.Bb(10),l.yc("End Aligned: ",n.endAligned?"On":"Off",""),l.Bb(6),l.yc("LTR Text: ",r.ltrText?"On":"Off",""),l.Bb(5),l.ic("example",t.examplePrefixSuffix),l.Bb(12),l.ic("example",t.exampleCharacterCounter),l.Bb(4),l.ic("helperText",a),l.Bb(4),l.ic("example",t.exampleTACounter),l.Bb(17),l.ic("example",t.exampleNoLabel),l.Bb(6),l.yc("Required: ",s.required?"On":"Off",""),l.Bb(2),l.ic("value",t.demoInputValue),l.Bb(3),l.ic("ngIf",!(null!=s&&s.value)),l.Bb(5),l.yc("Value: ",s.value,""),l.Bb(1),l.ic("example",t.exampleUsingValue),l.Bb(21),l.ic("example",t.exampleIcons),l.Bb(7),l.ic("example",t.exampleSvgIcon),l.Bb(12),l.ic("example",t.exampleDensity),l.Bb(10),l.ic("example",t.exampleShape),l.Bb(4),l.ic("ngModel",t.waypoint.dt),l.Bb(2),l.yc("Model: ",l.fc(228,68,t.waypoint),""),l.Bb(2),l.ic("example",t.exampleNumeric),l.Bb(4),l.ic("ngModel",t.prefilledText),l.Bb(2),l.yc("ngModel: ",t.prefilledText," "),l.Bb(1),l.ic("example",t.examplePrefilled),l.Bb(8),l.ic("example",t.exampleRtl),l.Bb(12),l.ic("example",t.exampleDateTime),l.Bb(9),l.ic("example",t.exampleFullWithSingleLine),l.Bb(6),l.yc("Disabled: ",m.disabled?"On":"Off",""),l.Bb(2),l.yc("Required: ",m.required?"On":"Off",""),l.Bb(3),l.ic("helperText",u),l.Bb(5),l.ic("example",t.exampleTextarea),l.Bb(6),l.yc("Disabled: ",R.disabled?"On":"Off",""),l.Bb(2),l.yc("Required: ",R.required?"On":"Off",""),l.Bb(3),l.ic("helperText",h),l.Bb(5),l.ic("example",t.exampleFullWidth)}},directives:[R.a,h.a,Q.a,f.a,o.q,o.k,o.e,p.a,o.j,o.c,x.k,o.l,o.m,o.o,w.a,v.b,g.a,y.a],pipes:[x.f],encapsulation:2}),e})()}]}];let q=(()=>{class e{}return e.\u0275mod=l.Jb({type:e}),e.\u0275inj=l.Ib({factory:function(t){return new(t||e)},imports:[[i.e.forChild($)],i.e]}),e})(),O=(()=>{class e{}return e.\u0275mod=l.Jb({type:e}),e.\u0275inj=l.Ib({factory:function(t){return new(t||e)},imports:[[d.a,q]]}),e})()},leug:function(e,t,b){"use strict";var d=b("LuDt");b.d(t,"a",(function(){return d.a}))}}]);