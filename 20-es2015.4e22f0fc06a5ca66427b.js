(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{tv7L:function(e,t,a){"use strict";a.r(t);var i=a("d2mR"),s=a("tyNb"),m=a("leug"),n=a("fXoL"),c=a("LuDt"),o=a("5l+6"),p=a("OtPg"),b=a("9UYg"),r=a("dEKC"),l=a("ofXK"),g=a("dkiD");function d(e,t){if(1&e&&(n.Rb(0,"mdc-image-list-item"),n.Rb(1,"mdc-image-list-image-aspect"),n.Mb(2,"img",11),n.Qb(),n.Rb(3,"mdc-image-list-supporting"),n.Rb(4,"span",12),n.xc(5,"Text label"),n.Qb(),n.Qb(),n.Qb()),2&e){const e=t.$implicit;n.Bb(2),n.kc("src","https://material-components-web.appspot.com/images/photos/3x2/",e+1,".jpg",n.qc)}}function x(e,t){if(1&e&&(n.Rb(0,"mdc-image-list-item"),n.Mb(1,"img",11),n.Rb(2,"mdc-image-list-supporting"),n.Rb(3,"span",12),n.xc(4,"Text label"),n.Qb(),n.Qb(),n.Qb()),2&e){const e=t.$implicit;n.Bb(1),n.jc("src",e.image,n.qc)}}const h=[{path:"",component:(()=>{class e{ngOnInit(){this._componentViewer.template={title:"Image List",description:"MDC Image List provides a RTL-aware Material Design image list component. An Image List consists of several items, each containing an image and optionally supporting content (i.e. a text label).",references:[{name:"Material Design guidelines: Image Lists",url:"https://material.io/design/components/image-lists.html"},{name:"Material Components Web",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-image-list/README.md"}],code:"import {MdcImageListModule} from '@angular-mdc/web';",sass:"@use '@material/image-list/mdc-image-list';\n@use '@material/image-list';"}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=n.Fb({type:e,selectors:[["ng-component"]],viewQuery:function(e,t){var a;1&e&&n.tc(m.a,!0),2&e&&n.nc(a=n.ac())&&(t._componentViewer=a.first)},decls:1,vars:0,template:function(e,t){1&e&&n.Mb(0,"component-viewer")},directives:[c.a],encapsulation:2}),e})(),children:[{path:"",redirectTo:"api"},{path:"api",component:(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=n.Fb({type:e,selectors:[["ng-component"]],decls:95,vars:0,consts:[[1,"docs-api"],["mdcHeadline6",""],[1,"markdown-code"],["mdcSubtitle2",""]],template:function(e,t){1&e&&(n.Rb(0,"div",0),n.Rb(1,"h3",1),n.xc(2,"MdcImageList"),n.Qb(),n.Rb(3,"p"),n.xc(4," Selector: "),n.Rb(5,"span",2),n.xc(6,"mdc-image-list"),n.Qb(),n.Qb(),n.xc(7," Exported as: "),n.Rb(8,"span",2),n.xc(9,"mdcImageList"),n.Qb(),n.Rb(10,"h4",3),n.xc(11,"Properties"),n.Qb(),n.Rb(12,"table"),n.Rb(13,"thead"),n.Rb(14,"tr"),n.Rb(15,"th"),n.xc(16,"Name"),n.Qb(),n.Rb(17,"th"),n.xc(18,"Description"),n.Qb(),n.Qb(),n.Qb(),n.Rb(19,"tbody"),n.Rb(20,"tr"),n.Rb(21,"td"),n.xc(22,"masonry: boolean"),n.Qb(),n.Rb(23,"td"),n.xc(24,"Indicates that this Image List should use the Masonry variant."),n.Qb(),n.Qb(),n.Rb(25,"tr"),n.Rb(26,"td"),n.xc(27,"textProtection: boolean"),n.Qb(),n.Rb(28,"td"),n.xc(29,"Indicates that supporting content should be positioned in a scrim overlaying each image (instead of positioned separately under each image)."),n.Qb(),n.Qb(),n.Qb(),n.Qb(),n.Qb(),n.Rb(30,"div",0),n.Rb(31,"h3",1),n.xc(32,"MdcImageListItem"),n.Qb(),n.xc(33," Mandatory. Indicates each item in an Image List. "),n.Rb(34,"p"),n.xc(35," Selector: "),n.Rb(36,"span",2),n.xc(37,"mdc-image-list-item"),n.Qb(),n.Rb(38,"span",2),n.xc(39,"mdcImageListItem"),n.Qb(),n.Qb(),n.xc(40," Exported as: "),n.Rb(41,"span",2),n.xc(42,"mdcImageListItem"),n.Qb(),n.Qb(),n.Rb(43,"div",0),n.Rb(44,"h3",1),n.xc(45,"MdcImageListImageAspect"),n.Qb(),n.xc(46," Optional. Parent of each item's image element, responsible for constraining aspect ratio. This element may be omitted entirely if images are already sized to the correct aspect ratio. "),n.Rb(47,"p"),n.xc(48," Selector: "),n.Rb(49,"span",2),n.xc(50,"mdc-image-list-image-aspect"),n.Qb(),n.Rb(51,"span",2),n.xc(52,"mdcImageListImageAspect"),n.Qb(),n.Qb(),n.xc(53," Exported as: "),n.Rb(54,"span",2),n.xc(55,"mdcImageListImageAspect"),n.Qb(),n.Qb(),n.Rb(56,"div",0),n.Rb(57,"h3",1),n.xc(58,"MdcImageListImage"),n.Qb(),n.xc(59," Mandatory. Indicates the image element in each item. "),n.Rb(60,"p"),n.xc(61," Selector: "),n.Rb(62,"span",2),n.xc(63,"mdc-image-list-image"),n.Qb(),n.Rb(64,"span",2),n.xc(65,"mdcImageListImage"),n.Qb(),n.Qb(),n.xc(66," Exported as: "),n.Rb(67,"span",2),n.xc(68,"mdcImageListImage"),n.Qb(),n.Qb(),n.Rb(69,"div",0),n.Rb(70,"h3",1),n.xc(71,"MdcImageListSupporting"),n.Qb(),n.xc(72," Optional. Indicates the area within each item containing the supporting text label, if the Image List contains text labels. "),n.Rb(73,"p"),n.xc(74," Selector: "),n.Rb(75,"span",2),n.xc(76,"mdc-image-list-supporting"),n.Qb(),n.Rb(77,"span",2),n.xc(78,"MdcImageListSupporting"),n.Qb(),n.Qb(),n.xc(79," Exported as: "),n.Rb(80,"span",2),n.xc(81,"mdcImageListSupporting"),n.Qb(),n.Qb(),n.Rb(82,"div",0),n.Rb(83,"h3",1),n.xc(84,"MdcImageListLabel"),n.Qb(),n.xc(85," Optional. Indicates the text label in each item, if the Image List contains text labels. "),n.Rb(86,"p"),n.xc(87," Selector: "),n.Rb(88,"span",2),n.xc(89,"mdc-image-list-label"),n.Qb(),n.Rb(90,"span",2),n.xc(91,"mdcImageListLabel"),n.Qb(),n.Qb(),n.xc(92," Exported as: "),n.Rb(93,"span",2),n.xc(94,"mdcImageListLabel"),n.Qb(),n.Qb())},directives:[o.i,o.l],encapsulation:2}),e})()},{path:"sass",component:(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=n.Fb({type:e,selectors:[["ng-component"]],decls:44,vars:0,consts:[[1,"docs-api"],["mdcSubtitle2",""]],template:function(e,t){1&e&&(n.Rb(0,"div",0),n.Rb(1,"h4",1),n.xc(2,"Sass Mixins"),n.Qb(),n.Rb(3,"table"),n.Rb(4,"thead"),n.Rb(5,"tr"),n.Rb(6,"th"),n.xc(7,"Mixin"),n.Qb(),n.Rb(8,"th"),n.xc(9,"Description"),n.Qb(),n.Qb(),n.Qb(),n.Rb(10,"tbody"),n.Rb(11,"tr"),n.Rb(12,"td"),n.Rb(13,"code"),n.xc(14,"aspect($width-height-ratio)"),n.Qb(),n.Qb(),n.Rb(15,"td"),n.xc(16,"Styles the aspect container elements within an Image List to conform to the given ratio, where 1 is 1:1, greater than 1 is wider, and less than 1 is taller."),n.Qb(),n.Qb(),n.Rb(17,"tr"),n.Rb(18,"td"),n.Rb(19,"code"),n.xc(20,"shape-radius($radius, $rtl-reflexive)"),n.Qb(),n.Qb(),n.Rb(21,"td"),n.xc(22,"Sets the rounded shape to image list item with given radius size. Set "),n.Rb(23,"code"),n.xc(24,"$rtl-reflexive"),n.Qb(),n.xc(25," to true to flip radius values in RTL context, defaults to false."),n.Qb(),n.Qb(),n.Rb(26,"tr"),n.Rb(27,"td"),n.Rb(28,"code"),n.xc(29,"standard-columns($column-count, $gutter-size)"),n.Qb(),n.Qb(),n.Rb(30,"td"),n.xc(31,"Styles a Standard Image List to display the given number of columns. "),n.Rb(32,"code"),n.xc(33,"$gutter-size"),n.Qb(),n.xc(34," is optional and overrides the default amount of space between items."),n.Qb(),n.Qb(),n.Rb(35,"tr"),n.Rb(36,"td"),n.Rb(37,"code"),n.xc(38,"masonry-columns($column-count, $gutter-size)"),n.Qb(),n.Qb(),n.Rb(39,"td"),n.xc(40,"Styles a Masonry Image List to display the given number of columns. "),n.Rb(41,"code"),n.xc(42,"$gutter-size"),n.Qb(),n.xc(43," is optional and overrides the default amount of space between items."),n.Qb(),n.Qb(),n.Qb(),n.Qb(),n.Qb())},directives:[o.l],encapsulation:2}),e})()},{path:"examples",component:(()=>{class e{constructor(){this.images=Array.from(Array(15),(e,t)=>t),this.masonryImages=[{image:"https://material-components-web.appspot.com/images/photos/3x2/16.jpg"},{image:"https://material-components-web.appspot.com/images/photos/2x3/1.jpg"},{image:"https://material-components-web.appspot.com/images/photos/3x2/1.jpg"},{image:"https://material-components-web.appspot.com/images/photos/2x3/2.jpg"},{image:"https://material-components-web.appspot.com/images/photos/2x3/3.jpg"},{image:"https://material-components-web.appspot.com/images/photos/3x2/2.jpg"},{image:"https://material-components-web.appspot.com/images/photos/2x3/4.jpg"},{image:"https://material-components-web.appspot.com/images/photos/3x2/3.jpg"},{image:"https://material-components-web.appspot.com/images/photos/2x3/5.jpg"},{image:"https://material-components-web.appspot.com/images/photos/3x2/4.jpg"},{image:"https://material-components-web.appspot.com/images/photos/2x3/6.jpg"},{image:"https://material-components-web.appspot.com/images/photos/3x2/5.jpg"},{image:"https://material-components-web.appspot.com/images/photos/2x3/7.jpg"},{image:"https://material-components-web.appspot.com/images/photos/3x2/6.jpg"},{image:"https://material-components-web.appspot.com/images/photos/3x2/7.jpg"}],this.exampleStandard={html:'<mdc-image-list class="standard-image-list image-list--rounded-corners">\n  <mdc-image-list-item *ngFor="let i of images">\n    <mdc-image-list-image-aspect>\n      <img mdcImageListImage src="<image goes here>" />\n    </mdc-image-list-image-aspect>\n    <mdc-image-list-supporting>\n      <span mdcImageListLabel>Text label</span>\n    </mdc-image-list-supporting>\n  </mdc-image-list-item>\n</mdc-image-list>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_image-list.scss"},this.exampleMasonry={html:'<mdc-image-list masonry class="masonry-image-list">\n  <mdc-image-list-item *ngFor="let item of masonryImages">\n    <img mdcImageListImage src="{{item.image}}" />\n    <mdc-image-list-supporting>\n      <span mdcImageListLabel>Text label</span>\n    </mdc-image-list-supporting>\n  </mdc-image-list-item>\n</mdc-image-list>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_image-list.scss"}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=n.Fb({type:e,selectors:[["ng-component"]],decls:23,vars:6,consts:[[1,"demo-content"],[1,"demo-content__headline"],["highlight","@use '@material/image-list';\n\n.my-image-list {\n  @include image-list.standard-columns(5);\n}\n\n@media (max-width: 599px) {\n  .my-image-list {\n    @include image-list.standard-columns(3);\n  }\n}"],[1,"demo-layout__row"],["mdc-button","",3,"click"],[1,"standard-image-list","image-list--rounded-corners"],["demolist",""],[4,"ngFor","ngForOf"],[3,"example"],["masonry","",1,"masonry-image-list"],["demomasonry",""],["mdcImageListImage","",3,"src"],["mdcImageListLabel",""]],template:function(e,t){if(1&e){const e=n.Sb();n.Rb(0,"div",0),n.Rb(1,"h3",1),n.xc(2,"Standard Image List"),n.Qb(),n.xc(3," Images in a Standard Image list are constrained to 1:1 aspect ratio by default this can be overridden using the mdc-image-list-aspect mixin documented below. "),n.Rb(4,"pre"),n.Mb(5,"code",2),n.Qb(),n.Rb(6,"div",3),n.Rb(7,"button",4),n.Zb("click",(function(t){n.pc(e);const a=n.oc(10);return a.textProtection=!a.textProtection})),n.xc(8),n.Qb(),n.Qb(),n.Rb(9,"mdc-image-list",5,6),n.vc(11,d,6,1,"mdc-image-list-item",7),n.Qb(),n.Mb(12,"example-viewer",8),n.Qb(),n.Rb(13,"div",0),n.Rb(14,"h3",1),n.xc(15,"Masonry Image List"),n.Qb(),n.Rb(16,"div",3),n.Rb(17,"button",4),n.Zb("click",(function(t){n.pc(e);const a=n.oc(20);return a.textProtection=!a.textProtection})),n.xc(18),n.Qb(),n.Qb(),n.Rb(19,"mdc-image-list",9,10),n.vc(21,x,5,1,"mdc-image-list-item",7),n.Qb(),n.Mb(22,"example-viewer",8),n.Qb()}if(2&e){const e=n.oc(10),a=n.oc(20);n.Bb(8),n.zc("Text Protection: ",e.textProtection?"On":"Off",""),n.Bb(3),n.ic("ngForOf",t.images),n.Bb(1),n.ic("example",t.exampleStandard),n.Bb(6),n.zc("Text Protection: ",a.textProtection?"On":"Off",""),n.Bb(3),n.ic("ngForOf",t.masonryImages),n.Bb(1),n.ic("example",t.exampleMasonry)}},directives:[p.b,b.a,r.a,l.j,g.a,r.d,r.c,r.b,r.f,r.e],encapsulation:2}),e})()}]}];let u=(()=>{class e{}return e.\u0275mod=n.Jb({type:e}),e.\u0275inj=n.Ib({factory:function(t){return new(t||e)},imports:[[s.e.forChild(h)],s.e]}),e})();a.d(t,"ImageListModule",(function(){return R}));let R=(()=>{class e{}return e.\u0275mod=n.Jb({type:e}),e.\u0275inj=n.Ib({factory:function(t){return new(t||e)},imports:[[i.a,u]]}),e})()}}]);