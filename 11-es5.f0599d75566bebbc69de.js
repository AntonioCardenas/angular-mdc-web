function _classCallCheck(e,c){if(!(e instanceof c))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,c){for(var n=0;n<c.length;n++){var t=c[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function _createClass(e,c,n){return c&&_defineProperties(e.prototype,c),n&&_defineProperties(e,n),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"+iFw":function(e,c,n){"use strict";n.r(c),n.d(c,"CheckboxModule",(function(){return w}));var t,o,a,i,b,l=n("d2mR"),m=n("tyNb"),d=n("leug"),r=n("fXoL"),s=n("w0pw"),h=n("LuDt"),u=n("uwiL"),k=n("dkiD"),p=n("4G1d"),f=n("9UYg"),x=((t=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"ngOnInit",value:function(){this._componentApi.docApi={sections:[{header:"MdcCheckbox",selectors:["mdc-checkbox"],exportedAs:"mdcCheckbox",categories:[{name:"Properties",items:[{name:"id: string",summary:"Unique Id of the checkbox (auto generated if not supplied)."},{name:"name: string",summary:"Name of the checkbox."},{name:"checked: boolean",summary:"Whether the checkbox is checked."},{name:"value: string",summary:"The value attribute of the native input element."},{name:"tabIndex: number\t",summary:"Set the underlying tab index of the checkbox. (Default: 0)"},{name:"ariaLabel: string",summary:"Used to set the 'aria-label' attribute on the underlying input element."},{name:"ariaLabelledby: string",summary:"The 'aria-labelledby' attribute takes precedence as the element's text alternative."},{name:"indeterminate: boolean",summary:"Represent a checkbox with three states (e.g. a nested list of checkable items)."},{name:"disabled: boolean",summary:"Disables the component."},{name:"disableRipple: boolean",summary:"Whether ripple ink is disabled."},{name:"indeterminateToChecked: boolean",summary:"Whether the checkbox should go to checked state or unchecked when toggled from indeterminate state."},{name:"touch: boolean",summary:"Set the component touch target to 48 x 48 px."}]},{name:"Methods",items:[{name:"focus()",summary:"Set focus to the checkbox."},{name:"toggle(checked?: boolean)",summary:"Toggles checkbox via user action. When it is indeterminate, toggle can go to checked or unchecked, depending on state."}]},{name:"Events",items:[{name:"change(source: MdcCheckBox, checked: boolean)",summary:"Event dispatched on checked change."},{name:"indeterminateChange(source: MdcCheckbox, indeterminate: boolean)",summary:"Emit when checkbox goes in and out of indeterminate state, but not when set to checked."}]}]}]}}}]),e}()).\u0275fac=function(e){return new(e||t)},t.\u0275cmp=r.Fb({type:t,selectors:[["ng-component"]],viewQuery:function(e,c){var n;1&e&&r.tc(d.a,!0),2&e&&r.nc(n=r.ac())&&(c._componentApi=n.first)},decls:1,vars:0,template:function(e,c){1&e&&r.Mb(0,"component-api")},directives:[s.a],encapsulation:2}),t),g=[{path:"",component:(a=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"ngOnInit",value:function(){this._componentViewer.template={title:"Checkbox",description:"Checkboxes allow the user to select one or more items from a set.",references:[{name:"Material Design guidelines: Checkbox",url:"https://material.io/design/components/selection-controls.html#checkboxes"},{name:"Material Components Web",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-checkbox/README.md"}],mdcUrls:[{name:"Sass Mixins",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-checkbox/README.md#style-customization"}],code:"import {MdcCheckboxModule} from '@angular-mdc/web/checkbox';",sass:"@use '@material/checkbox/mdc-checkbox';\n@use '@material/checkbox';"}}}]),e}(),a.\u0275fac=function(e){return new(e||a)},a.\u0275cmp=r.Fb({type:a,selectors:[["ng-component"]],viewQuery:function(e,c){var n;1&e&&r.tc(d.b,!0),2&e&&r.nc(n=r.ac())&&(c._componentViewer=n.first)},decls:1,vars:0,template:function(e,c){1&e&&r.Mb(0,"component-viewer")},directives:[h.a],encapsulation:2}),a),children:[{path:"",redirectTo:"api"},{path:"api",component:x},{path:"examples",component:(o=function(){function e(){_classCallCheck(this,e),this.exampleSimple={html:'<mdc-checkbox></mdc-checkbox>\n\n<mdc-checkbox checked></mdc-checkbox>\n\n<mdc-checkbox disabled></mdc-checkbox>\n\n<mdc-checkbox checked disabled></mdc-checkbox>\n\n<mdc-checkbox indeterminate></mdc-checkbox>\n\n<mdc-checkbox indeterminate indeterminateToChecked="false"></mdc-checkbox>'},this.exampleLabel={html:"<mdc-form-field>\n  <mdc-checkbox></mdc-checkbox>\n  <label>Label</label>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-checkbox disabled></mdc-checkbox>\n  <label>Disabled</label>\n</mdc-form-field>\n\n<mdc-form-field alignEnd>\n  <mdc-checkbox></mdc-checkbox>\n  <label>Label</label>\n</mdc-form-field>"},this.exampleDynamic={html:'<mdc-form-field #formField>\n  <mdc-checkbox #cb indeterminateToChecked (change)="onChange($event)"></mdc-checkbox>\n  <label>Checkbox value is {{cb.checked}}</label>\n</mdc-form-field>',ts:"import { MdcCheckbox, MdcCheckboxChange } from '@angular-mdc/web';\n\nonChange(event: MdcCheckboxChange) {\n  console.log(event.checked);\n}\n\ntoggle(cb: MdcCheckbox): void {\n  cb.toggle();\n}"},this.exampleTheme={html:'<mdc-form-field>\n  <mdc-checkbox class="demo-checkbox--custom-all"></mdc-checkbox>\n  <label>Custom Stroke/Fill/Ink</label>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-checkbox class="demo-checkbox--custom-stroke-and-fill"></mdc-checkbox>\n  <label>Custom Stroke and Fill</label>\n</mdc-form-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_checkbox.scss"},this.exampleAccessibility={html:'<div class="mdc-touch-target-wrapper">\n  <mdc-form-field>\n    <mdc-checkbox touch></mdc-checkbox>\n    <label>My Accessible Checkbox</label>\n  </mdc-form-field>\n</div>'}}return _createClass(e,[{key:"onChange",value:function(e){console.log(e.checked)}},{key:"toggle",value:function(e){e.toggle()}}]),e}(),o.\u0275fac=function(e){return new(e||o)},o.\u0275cmp=r.Fb({type:o,selectors:[["ng-component"]],decls:77,vars:10,consts:[[1,"demo-content"],["checked",""],["disabled",""],["checked","","disabled",""],["indeterminate",""],["indeterminate","","indeterminateToChecked","false"],[3,"example"],[1,"demo-layout__column"],[1,"demo-container"],["alignEnd",""],[1,"demo-layout__row"],["mdc-button","",3,"click"],["formField",""],["indeterminateToChecked","",3,"change"],["cb",""],[1,"demo-content__headline"],[1,"demo-checkbox--custom-all"],[1,"demo-checkbox--custom-stroke-and-fill"],[1,"mdc-touch-target-wrapper"],["touch",""]],template:function(e,c){if(1&e){var n=r.Sb();r.Rb(0,"div",0),r.Mb(1,"mdc-checkbox"),r.Mb(2,"mdc-checkbox",1),r.Mb(3,"mdc-checkbox",2),r.Mb(4,"mdc-checkbox",3),r.Mb(5,"mdc-checkbox",4),r.Mb(6,"mdc-checkbox",5),r.Mb(7,"example-viewer",6),r.Qb(),r.Rb(8,"div",0),r.Rb(9,"div",7),r.Rb(10,"div",8),r.Rb(11,"mdc-form-field"),r.Mb(12,"mdc-checkbox"),r.Rb(13,"label"),r.wc(14,"Label"),r.Qb(),r.Qb(),r.Qb(),r.Rb(15,"div",8),r.Rb(16,"mdc-form-field"),r.Mb(17,"mdc-checkbox",2),r.Rb(18,"label"),r.wc(19,"Disabled"),r.Qb(),r.Qb(),r.Qb(),r.Rb(20,"div",8),r.Rb(21,"mdc-form-field",9),r.Mb(22,"mdc-checkbox"),r.Rb(23,"label"),r.wc(24,"Label (RTL)"),r.Qb(),r.Qb(),r.Qb(),r.Qb(),r.Mb(25,"example-viewer",6),r.Qb(),r.Rb(26,"div",0),r.Rb(27,"div",10),r.Rb(28,"button",11),r.Zb("click",(function(){return r.pc(n),r.oc(44).indeterminate=!0})),r.wc(29,"Indeterminate"),r.Qb(),r.Rb(30,"button",11),r.Zb("click",(function(){r.pc(n);var e=r.oc(44);return c.toggle(e)})),r.wc(31,"Toggle"),r.Qb(),r.Qb(),r.Rb(32,"div",10),r.Rb(33,"button",11),r.Zb("click",(function(){r.pc(n);var e=r.oc(44);return e.indeterminateToChecked=!e.indeterminateToChecked})),r.wc(34),r.Qb(),r.Rb(35,"button",11),r.Zb("click",(function(){r.pc(n);var e=r.oc(42);return e.alignEnd=!e.alignEnd})),r.wc(36),r.Qb(),r.Rb(37,"button",11),r.Zb("click",(function(){r.pc(n);var e=r.oc(44);return e.disabled=!e.disabled})),r.wc(38),r.Qb(),r.Rb(39,"button",11),r.Zb("click",(function(){r.pc(n);var e=r.oc(44);return e.disableRipple=!e.disableRipple})),r.wc(40),r.Qb(),r.Qb(),r.Rb(41,"mdc-form-field",null,12),r.Rb(43,"mdc-checkbox",13,14),r.Zb("change",(function(e){return c.onChange(e)})),r.Qb(),r.Rb(45,"label"),r.wc(46),r.Qb(),r.Qb(),r.Mb(47,"example-viewer",6),r.Qb(),r.Rb(48,"div",0),r.Rb(49,"h3",15),r.wc(50,"Theme"),r.Qb(),r.Rb(51,"div",7),r.Rb(52,"div",8),r.Rb(53,"mdc-form-field"),r.Mb(54,"mdc-checkbox",16),r.Rb(55,"label"),r.wc(56,"Custom Stroke/Fill/Ink"),r.Qb(),r.Qb(),r.Qb(),r.Rb(57,"div",8),r.Rb(58,"mdc-form-field"),r.Mb(59,"mdc-checkbox",17),r.Rb(60,"label"),r.wc(61,"Custom Stroke and Fill"),r.Qb(),r.Qb(),r.Qb(),r.Qb(),r.Mb(62,"example-viewer",6),r.Qb(),r.Rb(63,"div",0),r.Rb(64,"h3",15),r.wc(65,"Accessibility"),r.Qb(),r.Rb(66,"p"),r.wc(67," Material Design spec advises that touch targets should be at least 48 x 48 px. To meet this requirement, add the `touch` property. "),r.Qb(),r.Rb(68,"p"),r.wc(69," Note that the outer mdc-touch-target-wrapper element is only necessary if you want to avoid potentially overlapping touch targets on adjacent elements (due to collapsing margins). "),r.Qb(),r.Rb(70,"div",10),r.Rb(71,"div",18),r.Rb(72,"mdc-form-field"),r.Mb(73,"mdc-checkbox",19),r.Rb(74,"label"),r.wc(75,"My Accessible Checkbox"),r.Qb(),r.Qb(),r.Qb(),r.Qb(),r.Mb(76,"example-viewer",6),r.Qb()}if(2&e){var t=r.oc(42),o=r.oc(44);r.Bb(7),r.ic("example",c.exampleSimple),r.Bb(18),r.ic("example",c.exampleLabel),r.Bb(9),r.yc(" Indeterminate To Checked: ",o.indeterminateToChecked?"On":"Off",""),r.Bb(2),r.yc("RTL: ",t.alignEnd?"On":"Off",""),r.Bb(2),r.yc("Disabled: ",o.disabled?"On":"Off",""),r.Bb(2),r.yc("Ripple: ",o.disableRipple?"Off":"On",""),r.Bb(6),r.yc("Checkbox value is ",o.checked,""),r.Bb(1),r.ic("example",c.exampleDynamic),r.Bb(15),r.ic("example",c.exampleTheme),r.Bb(14),r.ic("example",c.exampleAccessibility)}},directives:[u.a,k.a,p.a,f.a],encapsulation:2}),o)}]}],v=((b=function e(){_classCallCheck(this,e)}).\u0275mod=r.Jb({type:b}),b.\u0275inj=r.Ib({factory:function(e){return new(e||b)},imports:[[m.e.forChild(g)],m.e]}),b),w=((i=function e(){_classCallCheck(this,e)}).\u0275mod=r.Jb({type:i}),i.\u0275inj=r.Ib({factory:function(e){return new(e||i)},imports:[[l.a,v]]}),i)}}]);