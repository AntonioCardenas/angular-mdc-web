function _defineProperties(e,t){for(var o=0;o<t.length;o++){var c=t[o];c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(e,c.key,c)}}function _createClass(e,t,o){return t&&_defineProperties(e.prototype,t),o&&_defineProperties(e,o),e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{tUHL:function(e,t,o){"use strict";o.r(t);var c,s,a,i=o("d2mR"),n=o("tyNb"),b=o("leug"),r=o("fXoL"),l=o("5l+6"),d=o("OtPg"),u=o("LuDt"),p=((c=function e(){_classCallCheck(this,e),this.customTheming="@use '@material/button';\n\n.my-custom-button {\n  @include button.shape-radius(50%);\n}"}).\u0275fac=function(e){return new(e||c)},c.\u0275cmp=r.Fb({type:c,selectors:[["ng-component"]],decls:168,vars:1,consts:[[1,"docs-api"],["mdcSubtitle2",""],["mdcHeadline6",""],["highlight","@include radius(resolve-percentage-radius($mdc-button-height, $radius));"],[1,"markdown-code"],["highlight","@include radius($radius);"],["highlight","@include radius(0 $radius $radius 0, $rtl-reflexive: true);"],[3,"highlight"]],template:function(e,t){1&e&&(r.Rb(0,"div",0),r.Rb(1,"h4",1),r.xc(2,"Sass Variables"),r.Qb(),r.Rb(3,"table"),r.Rb(4,"thead"),r.Rb(5,"tr"),r.Rb(6,"th"),r.xc(7,"Variable"),r.Qb(),r.Rb(8,"th"),r.xc(9,"Description"),r.Qb(),r.Qb(),r.Qb(),r.Rb(10,"tbody"),r.Rb(11,"tr"),r.Rb(12,"td"),r.Rb(13,"code"),r.xc(14,"$small-component-radius"),r.Qb(),r.Qb(),r.Rb(15,"td"),r.xc(16,"Rounded shape radius size for small components. Default value "),r.Rb(17,"code"),r.xc(18,"4px"),r.Qb(),r.xc(19,"."),r.Qb(),r.Qb(),r.Rb(20,"tr"),r.Rb(21,"td"),r.Rb(22,"code"),r.xc(23,"$medium-component-radius"),r.Qb(),r.Qb(),r.Rb(24,"td"),r.xc(25,"Rounded shape radius size for medium components. Default value "),r.Rb(26,"code"),r.xc(27,"4px"),r.Qb(),r.xc(28,"."),r.Qb(),r.Qb(),r.Rb(29,"tr"),r.Rb(30,"td"),r.Rb(31,"code"),r.xc(32,"$large-component-radius"),r.Qb(),r.Qb(),r.Rb(33,"td"),r.xc(34,"Rounded shape radius size for large components. Default value "),r.Rb(35,"code"),r.xc(36,"0"),r.Qb(),r.xc(37,"."),r.Qb(),r.Qb(),r.Qb(),r.Qb(),r.Rb(38,"h4",1),r.xc(39,"Sass Mixins"),r.Qb(),r.Rb(40,"table"),r.Rb(41,"thead"),r.Rb(42,"tr"),r.Rb(43,"th"),r.xc(44,"Mixin"),r.Qb(),r.Rb(45,"th"),r.xc(46,"Description"),r.Qb(),r.Qb(),r.Qb(),r.Rb(47,"tbody"),r.Rb(48,"tr"),r.Rb(49,"td"),r.Rb(50,"code"),r.xc(51,"radius($radius, $rtl-reflexive)"),r.Qb(),r.Qb(),r.Rb(52,"td"),r.xc(53,"Shape API used by all other components to apply radius to appropriate corners. "),r.Rb(54,"code"),r.xc(55,"$radius"),r.Qb(),r.xc(56," can be single value or list of up to 4 radius corner values. Set "),r.Rb(57,"code"),r.xc(58,"$rtl-reflexive"),r.Qb(),r.xc(59," to true to flip the radius in RTL case, "),r.Rb(60,"code"),r.xc(61,"false"),r.Qb(),r.xc(62," by default."),r.Qb(),r.Qb(),r.Qb(),r.Qb(),r.Rb(63,"h4",1),r.xc(64,"Sass Functions"),r.Qb(),r.Rb(65,"table"),r.Rb(66,"thead"),r.Rb(67,"tr"),r.Rb(68,"th"),r.xc(69,"Function"),r.Qb(),r.Rb(70,"th"),r.xc(71,"Description"),r.Qb(),r.Qb(),r.Qb(),r.Rb(72,"tbody"),r.Rb(73,"tr"),r.Rb(74,"td"),r.Rb(75,"code"),r.xc(76,"flip-radius($radius)"),r.Qb(),r.Qb(),r.Rb(77,"td"),r.xc(78,"Flips the radius values in RTL context. "),r.Rb(79,"code"),r.xc(80,"$radius"),r.Qb(),r.xc(81," is list of 2-4 corner values."),r.Qb(),r.Qb(),r.Rb(82,"tr"),r.Rb(83,"td"),r.Rb(84,"code"),r.xc(85,"resolve-percentage-radius($component-height, $radius)"),r.Qb(),r.Qb(),r.Rb(86,"td"),r.xc(87,"Calculates the absolute radius value based on its component height. Use this for fixed height components only."),r.Qb(),r.Qb(),r.Rb(88,"tr"),r.Rb(89,"td"),r.Rb(90,"code"),r.xc(91,"mask-radius($radius, $masked-corners)"),r.Qb(),r.Qb(),r.Rb(92,"td"),r.xc(93,"Accepts radius number or list of 2-4 radius values and returns 4 value list with masked corners as mentioned in "),r.Rb(94,"code"),r.xc(95,"$masked-corners"),r.Qb(),r.xc(96,"."),r.Qb(),r.Qb(),r.Rb(97,"tr"),r.Rb(98,"td"),r.Rb(99,"code"),r.xc(100,"prop-value($radius)"),r.Qb(),r.Qb(),r.Rb(101,"td"),r.xc(102,"Returns "),r.Rb(103,"code"),r.xc(104,"$radius"),r.Qb(),r.xc(105," value of shape category - "),r.Rb(106,"code"),r.xc(107,"large"),r.Qb(),r.xc(108,", "),r.Rb(109,"code"),r.xc(110,"medium"),r.Qb(),r.xc(111," or "),r.Rb(112,"code"),r.xc(113,"small"),r.Qb(),r.xc(114,". Otherwise, it returns the "),r.Rb(115,"code"),r.xc(116,"$radius"),r.Qb(),r.xc(117," itself if valid. "),r.Rb(118,"code"),r.xc(119,"$radius"),r.Qb(),r.xc(120," can be a single value or list of up to 4."),r.Qb(),r.Qb(),r.Qb(),r.Qb(),r.Rb(121,"h3",2),r.xc(122,"Additional Information"),r.Qb(),r.Rb(123,"h4",1),r.xc(124,"Shapes for fixed height components"),r.Qb(),r.xc(125," Styles for applying shape to a fixed height component such as button looks like this: "),r.Rb(126,"pre"),r.Mb(127,"code",3),r.Qb(),r.xc(128," Where, "),r.Rb(129,"code",4),r.xc(130,"button.$height"),r.Qb(),r.xc(131," is the height of standard button and "),r.Rb(132,"code",4),r.xc(133,"$radius"),r.Qb(),r.xc(134," is the size of shape. "),r.Rb(135,"code",4),r.xc(136,"resolve-percentage-radius"),r.Qb(),r.xc(137," function is used to resolve percentage unit value to absolute "),r.Rb(138,"code",4),r.xc(139,"$radius"),r.Qb(),r.xc(140," value based on component height. "),r.Rb(141,"h4",1),r.xc(142,"Shapes for dynamic height components"),r.Qb(),r.xc(143," Styles for applying shapes to dynamic height component such as card looks like this: "),r.Rb(144,"pre"),r.Mb(145,"code",5),r.Qb(),r.xc(146," Where, "),r.Rb(147,"code",4),r.xc(148,"$radius"),r.Qb(),r.xc(149," is absolute value only. "),r.Rb(150,"h4",1),r.xc(151,"Shapes for components on specific corners"),r.Qb(),r.xc(152," Styles for applying shapes for specific corners such as drawer looks like this: "),r.Rb(153,"pre"),r.Mb(154,"code",6),r.Qb(),r.xc(155," Where, only top-right & bottom-right corners are customizable and it automatically flips radius values based on RTL context when "),r.Rb(156,"code",4),r.xc(157,"$rtl-reflexive"),r.Qb(),r.xc(158," is set to true. "),r.Rb(159,"h4",1),r.xc(160,"Component theming"),r.Qb(),r.xc(161," The styles for applying custom shape to button component instance looks like this: "),r.Rb(162,"pre"),r.Mb(163,"code",7),r.Qb(),r.xc(164," In this example, the above styles applies 50% (pill) shape to button. It can also be absolute value (e.g.: "),r.Rb(165,"code",4),r.xc(166,"8px"),r.Qb(),r.xc(167,"); you would indirectly use the Shape API through respective component's mixin which takes care of applying radius to applicable corners for all its variants.\n"),r.Qb()),2&e&&(r.Bb(163),r.ic("highlight",t.customTheming))},directives:[l.l,l.i,d.b],encapsulation:2}),c),h=[{path:"",component:(s=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"ngOnInit",value:function(){this._componentViewer.template={title:"Shape",description:"Shapes direct attention, identify components, communicate state, and express brand.",references:[{name:"Material Design guidelines: Shape",url:"https://material.io/go/design-shape"},{name:"Material Components Web",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-shape/README.md"}],sass:"@use '@material/shape';",tabs:[{label:"Usage",route:"./usage"}]}}}]),e}(),s.\u0275fac=function(e){return new(e||s)},s.\u0275cmp=r.Fb({type:s,selectors:[["ng-component"]],viewQuery:function(e,t){var o;1&e&&r.tc(b.a,!0),2&e&&r.nc(o=r.ac())&&(t._componentViewer=o.first)},decls:1,vars:0,template:function(e,t){1&e&&r.Mb(0,"component-viewer")},directives:[u.a],encapsulation:2}),s),children:[{path:"",redirectTo:"usage"},{path:"usage",component:p}]}],x=((a=function e(){_classCallCheck(this,e)}).\u0275mod=r.Jb({type:a}),a.\u0275inj=r.Ib({factory:function(e){return new(e||a)},imports:[[n.e.forChild(h)],n.e]}),a);o.d(t,"ShapeModule",(function(){return m}));var R,m=((R=function e(){_classCallCheck(this,e)}).\u0275mod=r.Jb({type:R}),R.\u0275inj=r.Ib({factory:function(e){return new(e||R)},imports:[[i.a,x]]}),R)}}]);