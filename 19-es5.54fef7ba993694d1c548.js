function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,n){for(var c=0;c<n.length;c++){var t=n[c];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function _createClass(e,n,c){return n&&_defineProperties(e.prototype,n),c&&_defineProperties(e,c),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{SceA:function(e,n,c){"use strict";c.r(n);var t,o,a,i,s=c("d2mR"),b=c("tyNb"),r=c("leug"),l=c("AytR"),d=c("fXoL"),m=c("LuDt"),p=c("5l+6"),h=c("U/DG"),u=c("jhN1"),g=c("o085"),R=c("dkiD"),v='<svg xmlns="http://www.w3.org/2000/svg">\n  <path d="M0 0h24v24H0z" fill="none"/>\n  <path d="M15.5 5.5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM5 12c-2.8 0-5 2.2-5 5s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5zm0 8.5c-1.9 0-3.5-1.6-3.5-3.5s1.6-3.5 3.5-3.5 3.5 1.6 3.5 3.5-1.6 3.5-3.5 3.5zm5.8-10l2.4-2.4.8.8c1.3 1.3 3 2.1 5.1 2.1V9c-1.5 0-2.7-.6-3.6-1.5l-1.9-1.9c-.5-.4-1-.6-1.6-.6s-1.1.2-1.4.6L7.8 8.4c-.4.4-.6.9-.6 1.4 0 .6.2 1.1.6 1.4L11 14v5h2v-6.2l-2.2-2.3zM19 12c-2.8 0-5 2.2-5 5s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5zm0 8.5c-1.9 0-3.5-1.6-3.5-3.5s1.6-3.5 3.5-3.5 3.5 1.6 3.5 3.5-1.6 3.5-3.5 3.5z"/>\n</svg>',f='<svg>\n  <defs>\n  <svg id="account-balance">\n    <path d="M4 10v7h3v-7H4zm6 0v7h3v-7h-3zM2 22h19v-3H2v3zm14-12v7h3v-7h-3zm-4.5-9L2 6v2h19V6l-9.5-5z"/>\n  </svg>\n  <svg id="account-balance-wallet">\n    <path d="M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"\n    />\n  </svg>\n  <svg id="account-box">\n    <path d="M3 5v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2H5c-1.11 0-2 .9-2 2zm12 4c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3zm-9 8c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1H6v-1z"/>\n  </svg>\n  </defs>\n</svg>',x=[{path:"",component:(a=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"ngOnInit",value:function(){this._componentViewer.template={title:"Icons",description:"Material icons use geometric shapes to visually represent core ideas, capabilities, or topics.",references:[{name:"Material Design guidelines: Icons",url:"https://material.io/guidelines/style/icons.html"}],code:"import {MdcIconModule} from '@angular-mdc/web';",tabs:[{label:"Api",route:"./api"},{label:"Examples",route:"./examples"}]}}}]),e}(),a.\u0275fac=function(e){return new(e||a)},a.\u0275cmp=d.Fb({type:a,selectors:[["ng-component"]],viewQuery:function(e,n){var c;1&e&&d.tc(r.a,!0),2&e&&d.nc(c=d.ac())&&(n._componentViewer=c.first)},decls:1,vars:0,template:function(e,n){1&e&&d.Mb(0,"component-viewer")},directives:[m.a],encapsulation:2}),a),children:[{path:"",redirectTo:"api"},{path:"api",component:(o=function e(){_classCallCheck(this,e)},o.\u0275fac=function(e){return new(e||o)},o.\u0275cmp=d.Fb({type:o,selectors:[["ng-component"]],decls:200,vars:0,consts:[[1,"docs-api"],["mdcHeadline6",""],["mdcSubtitle2",""],["href","http://google.github.io/material-design-icons/#icon-font-for-the-web"],["href","https://fortawesome.github.io/Font-Awesome/examples/"],[1,"markdown-code"]],template:function(e,n){1&e&&(d.Rb(0,"div",0),d.Rb(1,"h2",1),d.xc(2,"Service"),d.Qb(),d.Rb(3,"h3",1),d.xc(4,"MdcIconRegistry"),d.Qb(),d.xc(5," Service to register and display icons used by the "),d.Rb(6,"code"),d.xc(7,"<mdc-icon>"),d.Qb(),d.xc(8," component. "),d.Rb(9,"ul"),d.Rb(10,"li"),d.xc(11,"Registers icon URLs by namespace and name."),d.Qb(),d.Rb(12,"li"),d.xc(13,"Registers icon set URLs by namespace."),d.Qb(),d.Rb(14,"li"),d.xc(15,"Registers aliases for CSS classes, for use with icon fonts."),d.Qb(),d.Rb(16,"li"),d.xc(17,"Loads icons from URLs and extracts individual icons from icon sets."),d.Qb(),d.Qb(),d.Rb(18,"h4",2),d.xc(19,"Methods"),d.Qb(),d.Rb(20,"table"),d.Rb(21,"tbody"),d.Rb(22,"tr"),d.Rb(23,"td"),d.xc(24,"addSvgIcon(iconName: string, url: SafeResourceUrl, options?: IconOptions)"),d.Qb(),d.Rb(25,"td"),d.xc(26,"Registers an icon by URL in the default namespace."),d.Qb(),d.Qb(),d.Rb(27,"tr"),d.Rb(28,"td"),d.xc(29,"addSvgIconInNamespace(namespace: string, iconName: string, url: SafeResourceUrl, options?: IconOptions)"),d.Qb(),d.Rb(30,"td"),d.xc(31,"Registers an icon by URL in the specified namespace."),d.Qb(),d.Qb(),d.Rb(32,"tr"),d.Rb(33,"td"),d.xc(34,"addSvgIconLiteral(iconName: string, literal: SafeHtml, options?: IconOptions)"),d.Qb(),d.Rb(35,"td"),d.xc(36,"Registers an icon using an HTML string in the default namespace."),d.Qb(),d.Qb(),d.Rb(37,"tr"),d.Rb(38,"td"),d.xc(39,"addSvgIconLiteralInNamespace(namespace: string, iconName: string, literal: SafeHtml, options?: IconOptions)"),d.Qb(),d.Rb(40,"td"),d.xc(41,"Registers an icon using an HTML string in the specified namespace."),d.Qb(),d.Qb(),d.Rb(42,"tr"),d.Rb(43,"td"),d.xc(44,"addSvgIconSet(url: SafeResourceUrl, options?: IconOptions)"),d.Qb(),d.Rb(45,"td"),d.xc(46,"Registers an icon set by URL in the default namespace."),d.Qb(),d.Qb(),d.Rb(47,"tr"),d.Rb(48,"td"),d.xc(49,"addSvgIconSetInNamespace(namespace: string, url: SafeResourceUrl, options?: IconOptions)"),d.Qb(),d.Rb(50,"td"),d.xc(51,"Registers an icon set by URL in the specified namespace."),d.Qb(),d.Qb(),d.Rb(52,"tr"),d.Rb(53,"td"),d.xc(54,"addSvgIconSetLiteral(literal: SafeHtml, options?: IconOptions)"),d.Qb(),d.Rb(55,"td"),d.xc(56,"Registers an icon set using an HTML string in the default namespace."),d.Qb(),d.Qb(),d.Rb(57,"tr"),d.Rb(58,"td"),d.xc(59,"addSvgIconSetLiteralInNamespace(namespace: string, literal: SafeHtml, options?: IconOptions)"),d.Qb(),d.Rb(60,"td"),d.xc(61,"Registers an icon set using an HTML string in the specified namespace."),d.Qb(),d.Qb(),d.Rb(62,"tr"),d.Rb(63,"td"),d.xc(64,"classNameForFontAlias(alias: string)"),d.Qb(),d.Rb(65,"td"),d.xc(66,"Returns the CSS class name associated with the alias by a previous call to registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified."),d.Qb(),d.Qb(),d.Rb(67,"tr"),d.Rb(68,"td"),d.xc(69,"getDefaultFontSetClass()"),d.Qb(),d.Rb(70,"td"),d.xc(71,"Returns the CSS class name to be used for icon fonts when an "),d.Rb(72,"code"),d.xc(73,"<mdc-icon>"),d.Qb(),d.xc(74," component does not have a fontSet input value, and is not loading an icon by name or URL."),d.Qb(),d.Qb(),d.Rb(75,"tr"),d.Rb(76,"td"),d.xc(77,"getNamedSvgIcon(name: string, namespace: string)"),d.Qb(),d.Rb(78,"td"),d.xc(79,"Returns an Observable that produces the icon (as an "),d.Rb(80,"code"),d.xc(81,"<svg>"),d.Qb(),d.xc(82," DOM element) with the given name and namespace. The icon must have been previously registered with addIcon or addIconSet; if not, the Observable will throw an error."),d.Qb(),d.Qb(),d.Rb(83,"tr"),d.Rb(84,"td"),d.xc(85,"getSvgIconFromUrl(safeUrl: SafeResourceUrl)"),d.Qb(),d.Rb(86,"td"),d.xc(87,"Returns an Observable that produces the icon (as an "),d.Rb(88,"code"),d.xc(89,"<svg>"),d.Qb(),d.xc(90," DOM element) from the given URL. The response from the URL may be cached so this will not always cause an HTTP request, but the produced element will always be a new copy of the originally fetched icon. (That is, it will not contain any modifications made to elements previously returned)."),d.Qb(),d.Qb(),d.Rb(91,"tr"),d.Rb(92,"td"),d.xc(93,"registerFontClassAlias(alias: string, className: string = alias)"),d.Qb(),d.Rb(94,"td"),d.xc(95,"Defines an alias for a CSS class name to be used for icon fonts. Creating an mdcIcon component with the alias as the fontSet input will cause the class name to be applied to the "),d.Rb(96,"code"),d.xc(97,"<mdc-icon>"),d.Qb(),d.xc(98," element."),d.Qb(),d.Qb(),d.Rb(99,"tr"),d.Rb(100,"td"),d.xc(101,"setDefaultFontSetClass(className: string)"),d.Qb(),d.Rb(102,"td"),d.xc(103,"Sets the CSS class name to be used for icon fonts when an "),d.Rb(104,"code"),d.xc(105,"<mdc-icon>"),d.Qb(),d.xc(106," component does not have a fontSet input value, and is not loading an icon by name or URL."),d.Qb(),d.Qb(),d.Qb(),d.Qb(),d.Qb(),d.Rb(107,"div",0),d.Rb(108,"h2",1),d.xc(109,"Directives"),d.Qb(),d.Rb(110,"h3",1),d.xc(111,"MdcIcon"),d.Qb(),d.xc(112," Component to display an icon. It can be used in the following ways: "),d.Rb(113,"ul"),d.Rb(114,"li"),d.Rb(115,"p"),d.xc(116,'Specify the svgIcon input to load an SVG icon from a URL previously registered with the addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of MdcIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format "[namespace]:[name]", if not the value will be the name of an icon in the default namespace. Examples: '),d.Rb(117,"code"),d.xc(118,'<mdc-icon svgIcon="left-arrow"></mdc-icon> <mdc-icon svgIcon="animals:cat"></mdc-icon>'),d.Qb(),d.Qb(),d.Qb(),d.Rb(119,"li"),d.Rb(120,"p"),d.xc(121,"Use a font ligature as an icon by putting the ligature text in the content of the "),d.Rb(122,"code"),d.xc(123,"<mdc-icon>"),d.Qb(),d.xc(124," component. By default the Material icons font is used as described at "),d.Rb(125,"a",3),d.xc(126,"http://google.github.io/material-design-icons/#icon-font-for-the-web"),d.Qb(),d.xc(127,". You can specify an alternate font by setting the fontSet input to either the CSS class to apply to use the desired font, or to an alias previously registered with MdcIconRegistry.registerFontClassAlias. Examples: "),d.Rb(128,"code"),d.xc(129,'<mdc-icon>home</mdc-icon> <mdc-icon fontSet="myfont">sun</mdc-icon>'),d.Qb(),d.Qb(),d.Qb(),d.Rb(130,"li"),d.Rb(131,"p"),d.xc(132,"Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a CSS class which causes the glyph to be displayed via a :before selector, as in "),d.Rb(133,"a",4),d.xc(134,"https://fortawesome.github.io/Font-Awesome/examples/"),d.Qb(),d.xc(135," Example: "),d.Rb(136,"code"),d.xc(137,'<mdc-icon fontSet="fa" fontIcon="alarm"></mdc-icon>'),d.Qb(),d.Qb(),d.Qb(),d.Qb(),d.Rb(138,"p"),d.xc(139," Selector: "),d.Rb(140,"span",5),d.xc(141,"mdc-icon"),d.Qb(),d.Rb(142,"span",5),d.xc(143,"mdcIcon"),d.Qb(),d.Rb(144,"span",5),d.xc(145,"a[mdc-icon]"),d.Qb(),d.Qb(),d.xc(146," Exported as: "),d.Rb(147,"span",5),d.xc(148,"mdcIcon"),d.Qb(),d.Rb(149,"h4",2),d.xc(150,"Properties"),d.Qb(),d.Rb(151,"table"),d.Rb(152,"thead"),d.Rb(153,"tr"),d.Rb(154,"th"),d.xc(155,"Name"),d.Qb(),d.Rb(156,"th"),d.xc(157,"Description"),d.Qb(),d.Qb(),d.Qb(),d.Rb(158,"tbody"),d.Rb(159,"tr"),d.Rb(160,"td"),d.xc(161,"fontSet: string"),d.Qb(),d.Rb(162,"td"),d.xc(163,"Font set that the icon is a part of."),d.Qb(),d.Qb(),d.Rb(164,"tr"),d.Rb(165,"td"),d.xc(166,"fontIcon: string"),d.Qb(),d.Rb(167,"td"),d.xc(168,"Name of an icon within a font set."),d.Qb(),d.Qb(),d.Rb(169,"tr"),d.Rb(170,"td"),d.xc(171,"svgIcon: string"),d.Qb(),d.Rb(172,"td"),d.xc(173,"Name of the icon in the SVG icon set."),d.Qb(),d.Qb(),d.Rb(174,"tr"),d.Rb(175,"td"),d.xc(176,"clickable: boolean"),d.Qb(),d.Rb(177,"td"),d.xc(178,"Whether or not icon can be interacted with."),d.Qb(),d.Qb(),d.Rb(179,"tr"),d.Rb(180,"td"),d.xc(181,"inline: boolean"),d.Qb(),d.Rb(182,"td"),d.xc(183,"Whether the icon should be inlined, automatically sizing the icon to match the font size of the element the icon is contained in."),d.Qb(),d.Qb(),d.Qb(),d.Qb(),d.Rb(184,"h4",2),d.xc(185,"Interfaces"),d.Qb(),d.xc(186," Options that can be used to configure how an icon or the icons in an icon set are presented. "),d.Rb(187,"table"),d.Rb(188,"thead"),d.Rb(189,"tr"),d.Rb(190,"th"),d.xc(191,"Name"),d.Qb(),d.Rb(192,"th"),d.xc(193,"Description"),d.Qb(),d.Qb(),d.Qb(),d.Rb(194,"tbody"),d.Rb(195,"tr"),d.Rb(196,"td"),d.xc(197,"viewBox: string"),d.Qb(),d.Rb(198,"td"),d.xc(199,"View box to set on the icon."),d.Qb(),d.Qb(),d.Qb(),d.Qb(),d.Qb())},directives:[p.i,p.l],encapsulation:2}),o)},{path:"examples",component:(t=function(){function e(n,c){_classCallCheck(this,e),this.customHeader="import { DomSanitizer } from '@angular/platform-browser';\nimport {MdcIconRegistry} from '@angular-mdc/web';\n\nconstructor(iconRegistry: MdcIconRegistry, sanitizer: DomSanitizer) {\n  iconRegistry",this.customSass=".demo-icon-custom-colors {\n  $color: $material-color-orange-500;\n\n  @include mdc-theme-prop(color, $color);\n}",this.exampleMaterial={html:"<mdc-icon>home</mdc-icon>"},this.exampleTheme={html:'<mdc-icon class="demo-icon-custom-colors">home</mdc-icon>',sass:this.customSass},this.exampleFa={html:'<mdc-icon fontSet="fa" fontIcon="fa-camera"></mdc-icon>\n\n<mdc-icon fontSet="fa" fontIcon="fa-camera" class="demo-icon-custom-colors"></mdc-icon>',ts:"".concat(this.customHeader,"\n    .registerFontClassAlias('fontawesome', 'fa');"),sass:this.customSass},this.exampleSvg={html:'<mdc-icon>\n  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"></path>\n    <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"></path>\n  </svg>\n</mdc-icon>'},this.exampleInline={html:"<p>\n  My <span>dog</span>\n  <mdc-icon inline>pets</mdc-icon> is my\n  <span>favorite</span>\n  <mdc-icon inline>favorite</mdc-icon>,\n  he loves to go on <span>walks</span>\n  <mdc-icon inline>directions_walk</mdc-icon>\n</p>"},this.exampleAddSvgIcon={html:'<mdc-icon svgIcon="thumbs-up"></mdc-icon>',ts:"".concat(this.customHeader,"\n    .addSvgIcon('thumbs-up',\n      sanitizer.bypassSecurityTrustResourceUrl('/assets/thumbup-icon.svg'));")},this.exampleSvgIconLiteral={html:'<mdc-icon svgIcon="bike"></mdc-icon>\n<mdc-icon svgIcon="bike" class="demo-svg-custom-color"></mdc-icon>',ts:"".concat(this.customHeader,"\n    .addSvgIconLiteral('bike',\n      sanitizer.bypassSecurityTrustHtml(BIKE_ICON));"),svg:"const BIKE_ICON =\n`".concat(v,"`;"),sass:".demo-svg-custom-color {\n  $color: $material-color-orange-500;\n\n  @include mdc-theme-prop(fill, $color);\n}"},this.exampleSvgIconSetInNamespace={html:'<mdc-icon svgIcon="core:alarm"></mdc-icon>\n\n<mdc-icon svgIcon="core:accessibility"></mdc-icon>\n\n<mdc-icon svgIcon="core:alarm"></mdc-icon>',ts:"".concat(this.customHeader,"\n    .addSvgIconSetInNamespace('core',\n      sanitizer.bypassSecurityTrustResourceUrl('/assets/core-icon-set.svg'));")},this.exampleSvgIconSetLiteralInNamespace={html:'<mdc-icon svgIcon="core-inline:account-balance"></mdc-icon>\n\n<mdc-icon svgIcon="core-inline:account-balance-wallet"></mdc-icon>\n\n<mdc-icon svgIcon="core-inline:account-box"></mdc-icon>',ts:"".concat(this.customHeader,"\n    .addSvgIconSetLiteralInNamespace('core-inline',\n      sanitizer.bypassSecurityTrustHtml(INLINE_ICON_SET));"),svg:"const INLINE_ICON_SET =\n`".concat(f,"`;")},n.addSvgIcon("thumbs-up",c.bypassSecurityTrustResourceUrl(l.a.production?"https://trimox.github.io/angular-mdc-web/assets/thumbup-icon.svg":"/assets/thumbup-icon.svg")).addSvgIconLiteral("bike",c.bypassSecurityTrustHtml(v)).addSvgIconSetInNamespace("core",c.bypassSecurityTrustResourceUrl(l.a.production?"https://trimox.github.io/angular-mdc-web/assets/core-icon-set.svg":"/assets/core-icon-set.svg")).addSvgIconSetLiteralInNamespace("core-inline",c.bypassSecurityTrustHtml(f)).registerFontClassAlias("fontawesome","fa"),console.log(n)}return _createClass(e,[{key:"alternateColors",value:function(e){var n="demo-icon-custom-colors";e.elementRef.nativeElement.classList.contains(n)?e.elementRef.nativeElement.classList.remove(n):e.elementRef.nativeElement.classList.add(n)}}]),e}(),t.\u0275fac=function(e){return new(e||t)(d.Lb(h.a),d.Lb(u.b))},t.\u0275cmp=d.Fb({type:t,selectors:[["ng-component"]],decls:77,vars:9,consts:[[1,"demo-content"],[1,"demo-content__headline"],["demoicon",""],[3,"example"],[1,"demo-icon-custom-colors"],[1,"demo-layout__row"],[1,"demo-container"],["fontSet","fa","fontIcon","fa-camera"],["fontSet","fa","fontIcon","fa-camera",1,"demo-icon-custom-colors"],["xmlns","http://www.w3.org/2000/svg","width","24","height","24","viewBox","0 0 24 24"],["d","M0 0h24v24H0z","fill","none"],["d","M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"],["inline",""],["svgIcon","thumbs-up"],["svgIcon","bike"],["svgIcon","bike",1,"demo-svg-custom-color"],["svgIcon","core:alarm"],["svgIcon","core:accessibility"],["svgIcon","core-inline:account-balance"],["svgIcon","core-inline:account-balance-wallet"],["svgIcon","core-inline:account-box"]],template:function(e,n){1&e&&(d.Rb(0,"div",0),d.Rb(1,"h3",1),d.xc(2,"Material Icons"),d.Qb(),d.Rb(3,"mdc-icon",null,2),d.xc(5,"home"),d.Qb(),d.Mb(6,"example-viewer",3),d.Qb(),d.Rb(7,"div",0),d.Rb(8,"h3",1),d.xc(9,"Material Icons - Theme"),d.Qb(),d.Rb(10,"mdc-icon",4),d.xc(11,"home"),d.Qb(),d.Mb(12,"example-viewer",3),d.Qb(),d.Rb(13,"div",0),d.Rb(14,"h3",1),d.xc(15,"Using Font Awesome"),d.Qb(),d.Rb(16,"div",5),d.Rb(17,"div",6),d.Mb(18,"mdc-icon",7),d.Qb(),d.Rb(19,"div",6),d.Mb(20,"mdc-icon",8),d.Qb(),d.Qb(),d.Mb(21,"example-viewer",3),d.Qb(),d.Rb(22,"div",0),d.Rb(23,"h3",1),d.xc(24,"SVG Icon"),d.Qb(),d.Rb(25,"mdc-icon"),d.cc(),d.Rb(26,"svg",9),d.Mb(27,"path",10),d.Mb(28,"path",11),d.Qb(),d.Qb(),d.bc(),d.Mb(29,"example-viewer",3),d.Qb(),d.Rb(30,"div",0),d.Rb(31,"h3",1),d.xc(32,"Inline"),d.Qb(),d.Rb(33,"p"),d.xc(34," My "),d.Rb(35,"span"),d.xc(36,"dog"),d.Qb(),d.Rb(37,"mdc-icon",12),d.xc(38,"pets"),d.Qb(),d.xc(39," is my "),d.Rb(40,"span"),d.xc(41,"favorite"),d.Qb(),d.Rb(42,"mdc-icon",12),d.xc(43,"favorite"),d.Qb(),d.xc(44,", he loves to go on "),d.Rb(45,"span"),d.xc(46,"walks"),d.Qb(),d.Rb(47,"mdc-icon",12),d.xc(48,"directions_walk"),d.Qb(),d.Qb(),d.Mb(49,"example-viewer",3),d.Qb(),d.Rb(50,"div",0),d.Rb(51,"h3",1),d.xc(52,"MdcIconRegistry - addSvgIcon"),d.Qb(),d.Mb(53,"mdc-icon",13),d.Mb(54,"example-viewer",3),d.Qb(),d.Rb(55,"div",0),d.Rb(56,"h3",1),d.xc(57,"MdcIconRegistry - addSvgIconLiteral"),d.Qb(),d.Mb(58,"mdc-icon",14),d.Mb(59,"mdc-icon",15),d.Mb(60,"example-viewer",3),d.Qb(),d.Rb(61,"div",0),d.Rb(62,"h3",1),d.xc(63,"MdcIconRegistry - addSvgIconSetInNamespace"),d.Qb(),d.Rb(64,"div",5),d.Mb(65,"mdc-icon",16),d.Mb(66,"mdc-icon",17),d.Mb(67,"mdc-icon",16),d.Qb(),d.Mb(68,"example-viewer",3),d.Qb(),d.Rb(69,"div",0),d.Rb(70,"h3",1),d.xc(71,"MdcIconRegistry - addSvgIconSetLiteralInNamespace"),d.Qb(),d.Rb(72,"div",5),d.Mb(73,"mdc-icon",18),d.Mb(74,"mdc-icon",19),d.Mb(75,"mdc-icon",20),d.Qb(),d.Mb(76,"example-viewer",3),d.Qb()),2&e&&(d.Bb(6),d.ic("example",n.exampleMaterial),d.Bb(6),d.ic("example",n.exampleTheme),d.Bb(9),d.ic("example",n.exampleFa),d.Bb(8),d.ic("example",n.exampleSvg),d.Bb(20),d.ic("example",n.exampleInline),d.Bb(5),d.ic("example",n.exampleAddSvgIcon),d.Bb(6),d.ic("example",n.exampleSvgIconLiteral),d.Bb(8),d.ic("example",n.exampleSvgIconSetInNamespace),d.Bb(8),d.ic("example",n.exampleSvgIconSetLiteralInNamespace))},directives:[g.b,R.a],encapsulation:2}),t)}]}],Q=((i=function e(){_classCallCheck(this,e)}).\u0275mod=d.Jb({type:i}),i.\u0275inj=d.Ib({factory:function(e){return new(e||i)},imports:[[b.e.forChild(x)],b.e]}),i);c.d(n,"IconModule",(function(){return S}));var I,S=((I=function e(){_classCallCheck(this,e)}).\u0275mod=d.Jb({type:I}),I.\u0275inj=d.Ib({factory:function(e){return new(e||I)},imports:[[s.a,Q]]}),I)}}]);