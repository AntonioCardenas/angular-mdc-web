function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var b=0;b<t.length;b++){var o=t[b];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _createClass(e,t,b){return t&&_defineProperties(e.prototype,t),b&&_defineProperties(e,b),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{WxHU:function(e,t,b){"use strict";b.r(t);var o=b("d2mR"),i=b("tyNb"),d=b("3Pt+"),c=b("AytR"),n=b("leug"),l=b("fXoL"),r=b("LuDt"),a=b("5l+6"),s=b("OtPg"),m=b("U/DG"),x=b("jhN1"),u=b("9UYg"),h=b("6D23"),R=b("OA+s"),Q=b("dkiD"),p=b("4G1d"),f=b("ofXK"),v=b("Nwyg"),g=b("o085"),y=b("xBmo"),w=b("o/N6");function T(e,t){1&e&&(l.Rb(0,"span"),l.xc(1,"Username is required"),l.Qb())}function M(e,t){1&e&&(l.Rb(0,"span"),l.xc(1,"Username is not long enough"),l.Qb())}function F(e,t){1&e&&(l.Rb(0,"span"),l.xc(1,"Username is max length is 11"),l.Qb())}function C(e,t){1&e&&(l.Rb(0,"span"),l.xc(1,"Weight is required"),l.Qb())}function S(e,t){1&e&&(l.Rb(0,"span"),l.xc(1,"Field is required"),l.Qb())}var k,B,I,z,E,D=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"isErrorState",value:function(e,t){return!!(e&&e.invalid&&(e.dirty||e.touched||t&&t.submitted))}}]),e}(),q=function e(){_classCallCheck(this,e)},$=[{path:"",component:(z=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"ngOnInit",value:function(){this._componentViewer.template={title:"Text Field",description:"Text fields let users enter and edit text.",references:[{name:"Material Design guidelines: Text Fields",url:"https://material.io/design/components/text-fields.html"},{name:"Material Components Web",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-textfield/README.md"}],code:"import {MdcTextFieldModule} from '@angular-mdc/web';",sass:"@use '@material/textfield/mdc-text-field';\n@use '@material/textfield';\n@use '@material/form-field/mdc-form-field';"}}}]),e}(),z.\u0275fac=function(e){return new(e||z)},z.\u0275cmp=l.Fb({type:z,selectors:[["ng-component"]],viewQuery:function(e,t){var b;1&e&&l.tc(n.a,!0),2&e&&l.nc(b=l.ac())&&(t._componentViewer=b.first)},decls:1,vars:0,template:function(e,t){1&e&&l.Mb(0,"component-viewer")},directives:[r.a],encapsulation:2}),z),children:[{path:"",redirectTo:"api"},{path:"api",component:(I=function e(){_classCallCheck(this,e)},I.\u0275fac=function(e){return new(e||I)},I.\u0275cmp=l.Fb({type:I,selectors:[["ng-component"]],decls:314,vars:0,consts:[[1,"docs-api"],["mdcHeadline6",""],[1,"markdown-code"],["mdcSubtitle2",""],["highlight","const MDC_TEXT_FIELD_DEFAULT_OPTIONS:\n     InjectionToken<MdcTextFieldDefaultOptions>;"]],template:function(e,t){1&e&&(l.Rb(0,"div",0),l.Rb(1,"h3",1),l.xc(2,"MdcTextField"),l.Qb(),l.Rb(3,"p"),l.xc(4," Selector: "),l.Rb(5,"span",2),l.xc(6,"mdc-text-field"),l.Qb(),l.Qb(),l.xc(7," Exported as: "),l.Rb(8,"span",2),l.xc(9,"mdcTextField"),l.Qb(),l.Rb(10,"h4",3),l.xc(11,"Properties"),l.Qb(),l.Rb(12,"table"),l.Rb(13,"thead"),l.Rb(14,"tr"),l.Rb(15,"th"),l.xc(16,"Name"),l.Qb(),l.Rb(17,"th"),l.xc(18,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(19,"tbody"),l.Rb(20,"tr"),l.Rb(21,"td"),l.xc(22,"id: string"),l.Qb(),l.Rb(23,"td"),l.xc(24,"Unique id of the element."),l.Qb(),l.Qb(),l.Rb(25,"tr"),l.Rb(26,"td"),l.xc(27,"type: string = 'text'"),l.Qb(),l.Rb(28,"td"),l.xc(29,"Input type of textfield (e.g.: email, password, date, color)."),l.Qb(),l.Qb(),l.Rb(30,"tr"),l.Rb(31,"td"),l.xc(32,"name: string"),l.Qb(),l.Rb(33,"td"),l.xc(34,"Name of the textfield."),l.Qb(),l.Qb(),l.Rb(35,"tr"),l.Rb(36,"td"),l.xc(37,"label: string"),l.Qb(),l.Rb(38,"td"),l.xc(39,"Shown to the user when there's no focus or values."),l.Qb(),l.Qb(),l.Rb(40,"tr"),l.Rb(41,"td"),l.xc(42,"value: string"),l.Qb(),l.Rb(43,"td"),l.xc(44,"The input element's value."),l.Qb(),l.Qb(),l.Rb(45,"tr"),l.Rb(46,"td"),l.xc(47,"outlined: boolean"),l.Qb(),l.Rb(48,"td"),l.xc(49,"Set a border around all sides of the text field."),l.Qb(),l.Qb(),l.Rb(50,"tr"),l.Rb(51,"td"),l.xc(52,"fullwidth: boolean"),l.Qb(),l.Rb(53,"td"),l.xc(54,"Set to fullwidth textfield. "),l.Rb(55,"p"),l.xc(56,"Do not use "),l.Rb(57,"code",2),l.xc(58,"outlined"),l.Qb(),l.xc(59," to style a full width text field."),l.Qb(),l.Qb(),l.Qb(),l.Rb(60,"tr"),l.Rb(61,"td"),l.xc(62,"disabled: boolean"),l.Qb(),l.Rb(63,"td"),l.xc(64,"Disables the component."),l.Qb(),l.Qb(),l.Rb(65,"tr"),l.Rb(66,"td"),l.xc(67,"readonly: boolean"),l.Qb(),l.Rb(68,"td"),l.xc(69,"Whether or not the textfield value is editable."),l.Qb(),l.Qb(),l.Rb(70,"tr"),l.Rb(71,"td"),l.xc(72,"required: boolean"),l.Qb(),l.Rb(73,"td"),l.xc(74,"Whether the element is required."),l.Qb(),l.Qb(),l.Rb(75,"tr"),l.Rb(76,"td"),l.xc(77,"characterCounter: boolean"),l.Qb(),l.Rb(78,"td"),l.xc(79,"Character counter is used if there is a character limit. It displays the ratio of characters used and the total character limit. "),l.Rb(80,"p"),l.Rb(81,"code",2),l.xc(82,"maxlength"),l.Qb(),l.xc(83," is required on "),l.Rb(84,"code",2),l.xc(85,"MdcTextField"),l.Qb(),l.xc(86,"."),l.Qb(),l.Qb(),l.Qb(),l.Rb(87,"tr"),l.Rb(88,"td"),l.xc(89,"useNativeValidation: boolean"),l.Qb(),l.Rb(90,"td"),l.xc(91,"Sets whether to check native HTML validity state (true, default) or custom validity state when updating styles (false)."),l.Qb(),l.Qb(),l.Rb(92,"tr"),l.Rb(93,"td"),l.xc(94,"valid: boolean"),l.Qb(),l.Rb(95,"td"),l.xc(96,"Updates input validity styling using passed value."),l.Qb(),l.Qb(),l.Rb(97,"tr"),l.Rb(98,"td"),l.xc(99,"empty: boolean"),l.Qb(),l.Rb(100,"td"),l.xc(101,"Returns whether the control is empty."),l.Qb(),l.Qb(),l.Rb(102,"tr"),l.Rb(103,"td"),l.xc(104,"autocomplete: string"),l.Qb(),l.Rb(105,"td"),l.xc(106,"Indicates if the input can be automatically completed by the browser, usually by remembering previous values the user has entered."),l.Qb(),l.Qb(),l.Rb(107,"tr"),l.Rb(108,"td"),l.xc(109,"tabIndex: number"),l.Qb(),l.Rb(110,"td"),l.xc(111,"Tab index of the text element."),l.Qb(),l.Qb(),l.Rb(112,"tr"),l.Rb(113,"td"),l.xc(114,"pattern: string"),l.Qb(),l.Rb(115,"td"),l.xc(116,"Regular expression that the control's value is checked against."),l.Qb(),l.Qb(),l.Rb(117,"tr"),l.Rb(118,"td"),l.xc(119,"maxlength: number"),l.Qb(),l.Rb(120,"td"),l.xc(121,"Maxlength of characters allowed to be entered."),l.Qb(),l.Qb(),l.Rb(122,"tr"),l.Rb(123,"td"),l.xc(124,"minlength: number"),l.Qb(),l.Rb(125,"td"),l.xc(126,"Specifies the minimum number of characters that the user can enter."),l.Qb(),l.Qb(),l.Rb(127,"tr"),l.Rb(128,"td"),l.xc(129,"max: number"),l.Qb(),l.Rb(130,"td"),l.xc(131,"The maximum numeric value for the input."),l.Qb(),l.Qb(),l.Rb(132,"tr"),l.Rb(133,"td"),l.xc(134,"min: number"),l.Qb(),l.Rb(135,"td"),l.xc(136,"The minimum numeric value for this input, which must not be greater than its maximum (max attribute) value."),l.Qb(),l.Qb(),l.Rb(137,"tr"),l.Rb(138,"td"),l.xc(139,"step: number"),l.Qb(),l.Rb(140,"td"),l.xc(141,"Works with the min and max attributes to limit the increments at which a numeric or date-time value can be set."),l.Qb(),l.Qb(),l.Rb(142,"tr"),l.Rb(143,"td"),l.xc(144,"size: number"),l.Qb(),l.Rb(145,"td"),l.xc(146,"The initial size of the control."),l.Qb(),l.Qb(),l.Rb(147,"tr"),l.Rb(148,"td"),l.xc(149,"helperText: MdcHelperText"),l.Qb(),l.Rb(150,"td"),l.xc(151,"Reference to related "),l.Rb(152,"code",2),l.xc(153,"MdcHelperText"),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(154,"h4",3),l.xc(155,"Methods"),l.Qb(),l.Rb(156,"table"),l.Rb(157,"tbody"),l.Rb(158,"tr"),l.Rb(159,"td"),l.xc(160,"focus()"),l.Qb(),l.Rb(161,"td"),l.xc(162,"Sets focus to the input."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(163,"h4",3),l.xc(164,"Events"),l.Qb(),l.Rb(165,"table"),l.Rb(166,"tbody"),l.Rb(167,"tr"),l.Rb(168,"td"),l.xc(169,"change(value)"),l.Qb(),l.Rb(170,"td"),l.xc(171,"Emitted when an alteration to the element value is committed."),l.Qb(),l.Qb(),l.Rb(172,"tr"),l.Rb(173,"td"),l.xc(174,"blur(value)"),l.Qb(),l.Rb(175,"td"),l.xc(176,"Emitted whenever the input loses focus."),l.Qb(),l.Qb(),l.Rb(177,"tr"),l.Rb(178,"td"),l.xc(179,"input(value)"),l.Qb(),l.Rb(180,"td"),l.xc(181,"Emitted synchronously when the value has been altered."),l.Qb(),l.Qb(),l.Rb(182,"tr"),l.Rb(183,"td"),l.xc(184,"focus(boolean)"),l.Qb(),l.Rb(185,"td"),l.xc(186,"Emitted when the input gains or loses focus."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(187,"div",0),l.Rb(188,"h3",1),l.xc(189,"MdcHelperText"),l.Qb(),l.Rb(190,"p"),l.xc(191," Selector: "),l.Rb(192,"span",2),l.xc(193,"mdc-helper-text"),l.Qb(),l.Rb(194,"span",2),l.xc(195,"mdcHelperText"),l.Qb(),l.Qb(),l.xc(196," Exported as: "),l.Rb(197,"span",2),l.xc(198,"mdcHelperText"),l.Qb(),l.Rb(199,"h4",3),l.xc(200,"Properties"),l.Qb(),l.Rb(201,"table"),l.Rb(202,"thead"),l.Rb(203,"tr"),l.Rb(204,"th"),l.xc(205,"Name"),l.Qb(),l.Rb(206,"th"),l.xc(207,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(208,"tbody"),l.Rb(209,"tr"),l.Rb(210,"td"),l.xc(211,"validation: boolean"),l.Qb(),l.Rb(212,"td"),l.xc(213,"Help text can be used to provide additional validation messages."),l.Qb(),l.Qb(),l.Rb(214,"tr"),l.Rb(215,"td"),l.xc(216,"persistent: boolean"),l.Qb(),l.Rb(217,"td"),l.xc(218,"Help text will always be visible."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(219,"h4",3),l.xc(220,"Methods"),l.Qb(),l.Rb(221,"table"),l.Rb(222,"tbody"),l.Rb(223,"tr"),l.Rb(224,"td"),l.xc(225,"showToScreenReader()"),l.Qb(),l.Rb(226,"td"),l.xc(227,"Makes the helper text visible to the screen reader."),l.Qb(),l.Qb(),l.Rb(228,"tr"),l.Rb(229,"td"),l.xc(230,"setValidity(inputIsValid: boolean)"),l.Qb(),l.Rb(231,"td"),l.xc(232,"Sets the validity of the helper text. "),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(233,"div",0),l.Rb(234,"h3",1),l.xc(235,"MdcTextFieldIcon"),l.Qb(),l.Rb(236,"p"),l.xc(237," Selector: "),l.Rb(238,"span",2),l.xc(239,"mdc-icon[mdcTextFieldIcon]"),l.Qb(),l.Qb(),l.xc(240," Exported as: "),l.Rb(241,"span",2),l.xc(242,"mdcTextFieldIcon"),l.Qb(),l.Rb(243,"h4",3),l.xc(244,"Properties"),l.Qb(),l.Rb(245,"table"),l.Rb(246,"thead"),l.Rb(247,"tr"),l.Rb(248,"th"),l.xc(249,"Name"),l.Qb(),l.Rb(250,"th"),l.xc(251,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(252,"tbody"),l.Rb(253,"tr"),l.Rb(254,"td"),l.xc(255,"leading: boolean"),l.Qb(),l.Rb(256,"td"),l.xc(257,"Styles the text field as a text field with a leading icon."),l.Qb(),l.Qb(),l.Rb(258,"tr"),l.Rb(259,"td"),l.xc(260,"trailing: boolean"),l.Qb(),l.Rb(261,"td"),l.xc(262,"Styles the text field as a text field with a trailing icon."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(263,"div",0),l.Rb(264,"h3",1),l.xc(265,"MdcTextarea"),l.Qb(),l.xc(266," Same properties, methods and events as "),l.Rb(267,"code",2),l.xc(268,"MdcTextField"),l.Qb(),l.Rb(269,"p"),l.xc(270," Selector: "),l.Rb(271,"span",2),l.xc(272,"mdc-textarea"),l.Qb(),l.Qb(),l.xc(273," Exported as: "),l.Rb(274,"span",2),l.xc(275,"mdcTextarea"),l.Qb(),l.Rb(276,"h4",3),l.xc(277,"Additional Properties"),l.Qb(),l.Rb(278,"table"),l.Rb(279,"thead"),l.Rb(280,"tr"),l.Rb(281,"th"),l.xc(282,"Name"),l.Qb(),l.Rb(283,"th"),l.xc(284,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(285,"tbody"),l.Rb(286,"tr"),l.Rb(287,"td"),l.xc(288,"rows: number"),l.Qb(),l.Rb(289,"td"),l.xc(290,"Number of rows for this textarea."),l.Qb(),l.Qb(),l.Rb(291,"tr"),l.Rb(292,"td"),l.xc(293,"cols: number"),l.Qb(),l.Rb(294,"td"),l.xc(295,"Number of columns for this textarea."),l.Qb(),l.Qb(),l.Rb(296,"tr"),l.Rb(297,"td"),l.xc(298,"characterCounter: boolean"),l.Qb(),l.Rb(299,"td"),l.xc(300,"Character counter is used if there is a character limit. It displays the ratio of characters used and the total character limit. "),l.Rb(301,"p"),l.Rb(302,"code",2),l.xc(303,"maxlength"),l.Qb(),l.xc(304," is required on "),l.Rb(305,"code",2),l.xc(306,"MdcTextArea"),l.Qb(),l.xc(307,"."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(308,"div",0),l.Rb(309,"h3",1),l.xc(310,"MDC_TEXT_FIELD_DEFAULT_OPTIONS"),l.Qb(),l.xc(311," Injection token that can be used to configure the default options for all text fields within an app. "),l.Rb(312,"pre"),l.Mb(313,"code",4),l.Qb(),l.Qb())},directives:[a.i,a.l,s.b],encapsulation:2}),I)},{path:"sass",component:(B=function e(){_classCallCheck(this,e)},B.\u0275fac=function(e){return new(e||B)},B.\u0275cmp=l.Fb({type:B,selectors:[["ng-component"]],decls:355,vars:0,consts:[[1,"docs-api"],["mdcSubtitle2",""]],template:function(e,t){1&e&&(l.Rb(0,"div",0),l.Rb(1,"h4",1),l.xc(2,"Mixins for all Text Fields"),l.Qb(),l.Rb(3,"table"),l.Rb(4,"thead"),l.Rb(5,"tr"),l.Rb(6,"th"),l.xc(7,"Mixin"),l.Qb(),l.Rb(8,"th"),l.xc(9,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(10,"tbody"),l.Rb(11,"tr"),l.Rb(12,"td"),l.Rb(13,"code"),l.xc(14,"ink-color($color)"),l.Qb(),l.Qb(),l.Rb(15,"td"),l.xc(16,"Customizes the color of the text entered into an enabled text field. "),l.Qb(),l.Qb(),l.Rb(17,"tr"),l.Rb(18,"td"),l.Rb(19,"code"),l.xc(20,"placeholder-color($color)"),l.Qb(),l.Qb(),l.Rb(21,"td"),l.xc(22,"Customizes the color of the placeholder in an enabled text field. "),l.Qb(),l.Qb(),l.Rb(23,"tr"),l.Rb(24,"td"),l.Rb(25,"code"),l.xc(26,"disabled-ink-color($color)"),l.Qb(),l.Qb(),l.Rb(27,"td"),l.xc(28,"Customizes the color of the entered text in a disabled text field. "),l.Qb(),l.Qb(),l.Rb(29,"tr"),l.Rb(30,"td"),l.Rb(31,"code"),l.xc(32,"disabled-placeholder-color($color)"),l.Qb(),l.Qb(),l.Rb(33,"td"),l.xc(34,"Customizes the color of the placeholder in a disabled text field. "),l.Qb(),l.Qb(),l.Rb(35,"tr"),l.Rb(36,"td"),l.Rb(37,"code"),l.xc(38,"label-color($color)"),l.Qb(),l.Qb(),l.Rb(39,"td"),l.xc(40,"Customizes the text color of the label in an enabled text field. "),l.Qb(),l.Qb(),l.Rb(41,"tr"),l.Rb(42,"td"),l.Rb(43,"code"),l.xc(44,"disabled-label-color($color)"),l.Qb(),l.Qb(),l.Rb(45,"td"),l.xc(46,"Customizes the text color of the label in a disabled text field. "),l.Qb(),l.Qb(),l.Rb(47,"tr"),l.Rb(48,"td"),l.Rb(49,"code"),l.xc(50,"caret-color($color)"),l.Qb(),l.Qb(),l.Rb(51,"td"),l.xc(52,"Customizes the color of the cursor caret of the text field."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(53,"h4",1),l.xc(54,"Mixins for Filled Text Field and Textarea"),l.Qb(),l.Rb(55,"table"),l.Rb(56,"thead"),l.Rb(57,"tr"),l.Rb(58,"th"),l.xc(59,"Mixin"),l.Qb(),l.Rb(60,"th"),l.xc(61,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(62,"tbody"),l.Rb(63,"tr"),l.Rb(64,"td"),l.Rb(65,"code"),l.xc(66,"fill-color($color)"),l.Qb(),l.Qb(),l.Rb(67,"td"),l.xc(68,"Customizes the background color of the text field or textarea when enabled."),l.Qb(),l.Qb(),l.Rb(69,"tr"),l.Rb(70,"td"),l.Rb(71,"code"),l.xc(72,"disabled-fill-color($color)"),l.Qb(),l.Qb(),l.Rb(73,"td"),l.xc(74,"Customizes the background color of the text field or textarea when disabled."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(75,"h4",1),l.xc(76,"Mixins for Filled Text Field"),l.Qb(),l.Rb(77,"table"),l.Rb(78,"thead"),l.Rb(79,"tr"),l.Rb(80,"th"),l.xc(81,"Mixin"),l.Qb(),l.Rb(82,"th"),l.xc(83,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(84,"tbody"),l.Rb(85,"tr"),l.Rb(86,"td"),l.Rb(87,"code"),l.xc(88,"shape-radius($radius, $rtl-reflexive)"),l.Qb(),l.Qb(),l.Rb(89,"td"),l.xc(90,"Sets rounded shape to boxed text field variant with given radius size. Set "),l.Rb(91,"code"),l.xc(92,"$rtl-reflexive"),l.Qb(),l.xc(93," to true to flip radius values in RTL context, defaults to false."),l.Qb(),l.Qb(),l.Rb(94,"tr"),l.Rb(95,"td"),l.Rb(96,"code"),l.xc(97,"bottom-line-color($color)"),l.Qb(),l.Qb(),l.Rb(98,"td"),l.xc(99,"Customizes the text field bottom line color."),l.Qb(),l.Qb(),l.Rb(100,"tr"),l.Rb(101,"td"),l.Rb(102,"code"),l.xc(103,"hover-bottom-line-color($color)"),l.Qb(),l.Qb(),l.Rb(104,"td"),l.xc(105,"Customizes the hover text field bottom line color."),l.Qb(),l.Qb(),l.Rb(106,"tr"),l.Rb(107,"td"),l.Rb(108,"code"),l.xc(109,"disabled-bottom-line-color($color)"),l.Qb(),l.Qb(),l.Rb(110,"td"),l.xc(111,"Customizes the disabled text field bottom line color."),l.Qb(),l.Qb(),l.Rb(112,"tr"),l.Rb(113,"td"),l.Rb(114,"code"),l.xc(115,"line-ripple-color($color)"),l.Qb(),l.Qb(),l.Rb(116,"td"),l.xc(117,"Customizes the color of the default line ripple of the text field. "),l.Qb(),l.Qb(),l.Rb(118,"tr"),l.Rb(119,"td"),l.Rb(120,"code"),l.xc(121,"density($density-scale)"),l.Qb(),l.Qb(),l.Rb(122,"td"),l.xc(123,"Sets density scale for default text field variant. Supported density scale values "),l.Rb(124,"code"),l.xc(125,"-4"),l.Qb(),l.xc(126,", "),l.Rb(127,"code"),l.xc(128,"-3"),l.Qb(),l.xc(129,", "),l.Rb(130,"code"),l.xc(131,"-2"),l.Qb(),l.xc(132,", "),l.Rb(133,"code"),l.xc(134,"-1"),l.Qb(),l.xc(135,", "),l.Rb(136,"code"),l.xc(137,"0"),l.Qb(),l.xc(138,"."),l.Qb(),l.Qb(),l.Rb(139,"tr"),l.Rb(140,"td"),l.Rb(141,"code"),l.xc(142,"height($height)"),l.Qb(),l.Qb(),l.Rb(143,"td"),l.xc(144,"Sets height of default text field variant."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(145,"h4",1),l.xc(146,"Mixins for Outlined Text Field and Textarea"),l.Qb(),l.Rb(147,"table"),l.Rb(148,"thead"),l.Rb(149,"tr"),l.Rb(150,"th"),l.xc(151,"Mixin"),l.Qb(),l.Rb(152,"th"),l.xc(153,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(154,"tbody"),l.Rb(155,"tr"),l.Rb(156,"td"),l.Rb(157,"code"),l.xc(158,"focused-outline-color($color)"),l.Qb(),l.Qb(),l.Rb(159,"td"),l.xc(160,"Customizes the outline border color when the text field or textarea is focused."),l.Qb(),l.Qb(),l.Rb(161,"tr"),l.Rb(162,"td"),l.Rb(163,"code"),l.xc(164,"hover-outline-color($color)"),l.Qb(),l.Qb(),l.Rb(165,"td"),l.xc(166,"Customizes the outline border color when the text field or textarea is hovered."),l.Qb(),l.Qb(),l.Rb(167,"tr"),l.Rb(168,"td"),l.Rb(169,"code"),l.xc(170,"disabled-outline-color($color)"),l.Qb(),l.Qb(),l.Rb(171,"td"),l.xc(172,"Customizes the outline border color when the text field or textarea is disabled."),l.Qb(),l.Qb(),l.Rb(173,"tr"),l.Rb(174,"td"),l.Rb(175,"code"),l.xc(176,"outline-color($color)"),l.Qb(),l.Qb(),l.Rb(177,"td"),l.xc(178,"Customizes the border color of the outlined text field or textarea. "),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(179,"h4",1),l.xc(180,"Mixins for Outlined Text Field"),l.Qb(),l.Rb(181,"table"),l.Rb(182,"thead"),l.Rb(183,"tr"),l.Rb(184,"th"),l.xc(185,"Mixin"),l.Qb(),l.Rb(186,"th"),l.xc(187,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(188,"tbody"),l.Rb(189,"tr"),l.Rb(190,"td"),l.Rb(191,"code"),l.xc(192,"outline-shape-radius($radius, $rtl-reflexive)"),l.Qb(),l.Qb(),l.Rb(193,"td"),l.xc(194,"Sets rounded shape to outlined text field variant with given radius size. Set "),l.Rb(195,"code"),l.xc(196,"$rtl-reflexive"),l.Qb(),l.xc(197," to true to flip radius values in RTL context, defaults to false."),l.Qb(),l.Qb(),l.Rb(198,"tr"),l.Rb(199,"td"),l.Rb(200,"code"),l.xc(201,"outlined-density($density-scale)"),l.Qb(),l.Qb(),l.Rb(202,"td"),l.xc(203,"Sets density scale for outlined text field (Excluding outlined text field with leading icon). Supported density scale values "),l.Rb(204,"code"),l.xc(205,"-4"),l.Qb(),l.xc(206,", "),l.Rb(207,"code"),l.xc(208,"-3"),l.Qb(),l.xc(209,", "),l.Rb(210,"code"),l.xc(211,"-2"),l.Qb(),l.xc(212,", "),l.Rb(213,"code"),l.xc(214,"-1"),l.Qb(),l.xc(215,", "),l.Rb(216,"code"),l.xc(217,"0"),l.Qb(),l.xc(218,"."),l.Qb(),l.Qb(),l.Rb(219,"tr"),l.Rb(220,"td"),l.Rb(221,"code"),l.xc(222,"outlined-height($height)"),l.Qb(),l.Qb(),l.Rb(223,"td"),l.xc(224,"Sets height of outlined text field variant (Excluding outlined text field with leading icon)."),l.Qb(),l.Qb(),l.Rb(225,"tr"),l.Rb(226,"td"),l.Rb(227,"code"),l.xc(228,"outlined-with-leading-icon-density($density-scale)"),l.Qb(),l.Qb(),l.Rb(229,"td"),l.xc(230,"Sets density scale for outlined text field with leading icon. Supported density scale values "),l.Rb(231,"code"),l.xc(232,"-4"),l.Qb(),l.xc(233,", "),l.Rb(234,"code"),l.xc(235,"-3"),l.Qb(),l.xc(236,", "),l.Rb(237,"code"),l.xc(238,"-2"),l.Qb(),l.xc(239,", "),l.Rb(240,"code"),l.xc(241,"-1"),l.Qb(),l.xc(242,", "),l.Rb(243,"code"),l.xc(244,"0"),l.Qb(),l.xc(245,"."),l.Qb(),l.Qb(),l.Rb(246,"tr"),l.Rb(247,"td"),l.Rb(248,"code"),l.xc(249,"outlined-with-leading-icon-height($height)"),l.Qb(),l.Qb(),l.Rb(250,"td"),l.xc(251,"Sets height of outlined text field with leading icon variant."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(252,"h4",1),l.xc(253,"Mixins for Textarea"),l.Qb(),l.Rb(254,"table"),l.Rb(255,"thead"),l.Rb(256,"tr"),l.Rb(257,"th"),l.xc(258,"Mixin"),l.Qb(),l.Rb(259,"th"),l.xc(260,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(261,"tbody"),l.Rb(262,"tr"),l.Rb(263,"td"),l.Rb(264,"code"),l.xc(265,"textarea-shape-radius($radius, $rtl-reflexive)"),l.Qb(),l.Qb(),l.Rb(266,"td"),l.xc(267,"Sets rounded shape to text area variant with given radius size. Set "),l.Rb(268,"code"),l.xc(269,"$rtl-reflexive"),l.Qb(),l.xc(270," to true to flip radius values in RTL context, defaults to false."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(271,"h4",1),l.xc(272,"Mixins for Text Field Icon"),l.Qb(),l.Rb(273,"table"),l.Rb(274,"thead"),l.Rb(275,"tr"),l.Rb(276,"th"),l.xc(277,"Mixin"),l.Qb(),l.Rb(278,"th"),l.xc(279,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(280,"tbody"),l.Rb(281,"tr"),l.Rb(282,"td"),l.Rb(283,"code"),l.xc(284,"leading-icon-color($color)"),l.Qb(),l.Qb(),l.Rb(285,"td"),l.xc(286,"Customizes the color for the leading icon in an enabled text-field. "),l.Qb(),l.Qb(),l.Rb(287,"tr"),l.Rb(288,"td"),l.Rb(289,"code"),l.xc(290,"trailing-icon-color($color)"),l.Qb(),l.Qb(),l.Rb(291,"td"),l.xc(292,"Customizes the color for the trailing icon in an enabled text-field. "),l.Qb(),l.Qb(),l.Rb(293,"tr"),l.Rb(294,"td"),l.Rb(295,"code"),l.xc(296,"disabled-icon-color($color)"),l.Qb(),l.Qb(),l.Rb(297,"td"),l.xc(298,"Customizes the color for the leading/trailing icons in a disabled text-field."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(299,"h4",1),l.xc(300,"Mixins for Text Field Helper Text"),l.Qb(),l.Rb(301,"table"),l.Rb(302,"thead"),l.Rb(303,"tr"),l.Rb(304,"th"),l.xc(305,"Mixin"),l.Qb(),l.Rb(306,"th"),l.xc(307,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(308,"tbody"),l.Rb(309,"tr"),l.Rb(310,"td"),l.Rb(311,"code"),l.xc(312,"helper-text-color($color)"),l.Qb(),l.Qb(),l.Rb(313,"td"),l.xc(314,"Customizes the color of the helper text following an enabled text-field."),l.Qb(),l.Qb(),l.Rb(315,"tr"),l.Rb(316,"td"),l.Rb(317,"code"),l.xc(318,"disabled-helper-text-color($color)"),l.Qb(),l.Qb(),l.Rb(319,"td"),l.xc(320,"Customizes the color of the helper text following a disabled text-field."),l.Qb(),l.Qb(),l.Rb(321,"tr"),l.Rb(322,"td"),l.Rb(323,"code"),l.xc(324,"helper-text-validation-color($color)"),l.Qb(),l.Qb(),l.Rb(325,"td"),l.xc(326,"Customizes the color of the helper text when it's used as a validation message."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Rb(327,"h4",1),l.xc(328,"Mixins for Text Field Character Counter"),l.Qb(),l.Rb(329,"table"),l.Rb(330,"thead"),l.Rb(331,"tr"),l.Rb(332,"th"),l.xc(333,"Mixin"),l.Qb(),l.Rb(334,"th"),l.xc(335,"Description"),l.Qb(),l.Qb(),l.Qb(),l.Rb(336,"tbody"),l.Rb(337,"tr"),l.Rb(338,"td"),l.Rb(339,"code"),l.xc(340,"character-counter-color($color)"),l.Qb(),l.Qb(),l.Rb(341,"td"),l.xc(342,"Customizes the color of the character counter associated with an enabled text field."),l.Qb(),l.Qb(),l.Rb(343,"tr"),l.Rb(344,"td"),l.Rb(345,"code"),l.xc(346,"character-disabled-counter-color($color)"),l.Qb(),l.Qb(),l.Rb(347,"td"),l.xc(348,"Customizes the color of the character counter associated with a disabled text field."),l.Qb(),l.Qb(),l.Rb(349,"tr"),l.Rb(350,"td"),l.Rb(351,"code"),l.xc(352,"character-counter-position($xOffset, $yOffset)"),l.Qb(),l.Qb(),l.Rb(353,"td"),l.xc(354,"Positions the character counter element inside text field. Used only for textarea variant."),l.Qb(),l.Qb(),l.Qb(),l.Qb(),l.Qb())},directives:[a.l],encapsulation:2}),B)},{path:"examples",component:(k=function(){function e(t,b){_classCallCheck(this,e),this.demoForm=new d.e({username:new d.b({value:null,disabled:!1},[d.q.required,d.q.minLength(3),d.q.maxLength(11)])}),this.matcher=new D,this.waypoint=new q,this.prefilledText="Prefilled",this.inputEvent="",this.changeEvent="",this.focusEvent=!1,this.exampleStandard={html:'<mdc-text-field label="Standard"\n  name="txt-field-standard"\n  required\n  [helperText]="standardHelper"></mdc-text-field>\n<mdc-helper-text #standardHelper validation persistent>Helper Text</mdc-helper-text>'},this.exampleEvents={html:'<mdc-text-field label="Standard"\n  (input)="onInput($event)"\n  (focus)="onFocus($event)"\n  (change)="onChange($event)"></mdc-text-field>',ts:"onInput(value: any): void {\n  this.inputEvent = value;\n}\n\nonInput(value: any): void {\n  // do something\n}\n\nonChange(value: any): void {\n  // do something\n}\n\nonFocus(focused: boolean): void {\n  // do something\n}"},this.exampleReactive={html:'<form [formGroup]="demoForm" (ngSubmit)="submit(demoForm)" #formDirective="ngForm">\n  <mdc-form-field>\n    <mdc-text-field formControlName="username" label="Username" outlined\n      [errorStateMatcher]="matcher"></mdc-text-field>\n    <mdc-helper-text validation>\n      <span *ngIf="demoForm.controls[\'username\'].hasError(\'required\')">Username is required</span>\n      <span *ngIf="demoForm.controls[\'username\'].hasError(\'minlength\')">Username is not long enough</span>\n      <span *ngIf="demoForm.controls[\'username\'].hasError(\'maxlength\')">Username is max length is 11</span>\n    </mdc-helper-text>\n  </mdc-form-field>\n  <div class="demo-layout__row">\n    <button mdc-button type="submit">Submit</button>\n    <button mdc-button type="button" (click)="resetForm(formDirective)">Reset</button>\n    <button mdc-button type="button" (click)="demoForm.controls[\'username\'].setValue(\'User-1\')">Set Value</button>\n  </div>\n</form>\n\n<p>Control Valid: {{demoForm.controls[\'username\'].valid}}</p>\n<p>Dirty: {{ demoForm.dirty }}</p>\n<p>Valid: {{ demoForm.valid }}</p>\n<p>Pristine: {{ demoForm.pristine }}</p>\n<p>Touched: {{ demoForm.touched }}</p>\n<p>Value: {{ demoForm.value | json }}</p>',ts:"/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\nmatcher = new MyErrorStateMatcher();\n\ndemoForm = new FormGroup({\n  username: new FormControl(\n    { value: null, disabled: false },\n    [\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(11)\n    ])\n});\n\nsubmit(f: NgForm | FormGroup) {\n  if (f.invalid) {\n    return;\n  }\n}\n\nresetForm(formDirective: FormGroupDirective) {\n  formDirective.resetForm();\n  this.demoForm.reset();\n}"},this.exampleNumericNgModel={html:'<form #demoWeightForm="ngForm" id="demoWeightForm" (ngSubmit)="submit(demoWeightForm)">\n  <mdc-form-field>\n    <mdc-text-field type="number" name="demoweight" label="Weight" ngModel #demoWeightModel="ngModel"\n      required></mdc-text-field>\n    <mdc-helper-text validation>\n      <span *ngIf="!demoweight?.value">Weight is required</span>\n    </mdc-helper-text>\n  </mdc-form-field>\n</form>\n\n<button mdc-button type="submit" form="demoWeightForm">Submit</button>\n<button mdc-button (click)="demoWeightForm.reset()">Reset</button>\n\n<p>Dirty: {{ demoWeightModel.dirty }}</p>\n<p>Valid: {{ demoWeightForm.valid }}</p>\n<p>Pristine: {{ demoWeightForm.pristine }}</p>\n<p>Touched: {{ demoWeightModel.touched }}</p>\n<p>Value: {{ demoWeightModel.value }}</p>'},this.exampleUsingValue={html:'<mdc-form-field>\n  <mdc-text-field #demoValue label="Enter value" [value]="demoInputValue" required></mdc-text-field>\n  <mdc-helper-text validation>\n    <span *ngIf="!demoValue?.value">Field is required</span>\n  </mdc-helper-text>\n</mdc-form-field>\n\n<button mdc-button (click)="demoValue.value = null">Reset value</button>\n\n<p>Value: {{demoValue.value}}</p>',ts:"demoInputValue: string;"},this.exampleIcons={html:'<mdc-text-field autocomplete="tel" type="tel" label="Phone number">\n  <mdc-icon mdcTextFieldIcon leading>phone</mdc-icon>\n  <mdc-icon mdcTextFieldIcon trailing>event</mdc-icon>\n</mdc-text-field>\n<mdc-text-field type="date" outlined label="Event date">\n  <mdc-icon mdcTextFieldIcon leading>event</mdc-icon>\n</mdc-text-field>\n<mdc-text-field type="date" outlined label="Event date">\n  <button mdc-icon-button mdcTextFieldIcon trailing icon="event"></button>\n</mdc-text-field>\n<mdc-text-field disabled label="Disabled">\n  <mdc-icon mdcTextFieldIcon leading>event</mdc-icon>\n</mdc-text-field>'},this.exampleSvgIcon={html:'<mdc-text-field outlined label="Svg icon">\n  <mdc-icon mdcTextFieldIcon leading svgIcon="thumbup" class="temporary-workaround-for-text-field-svg"></mdc-icon>\n</mdc-text-field>',ts:"import { DomSanitizer } from '@angular/platform-browser';\nimport { MdcIconRegistry } from '@angular-mdc/web';\n\nconstructor(iconRegistry: MdcIconRegistry, sanitizer: DomSanitizer) {\n  iconRegistry.addSvgIcon(\n    'thumbup', sanitizer.bypassSecurityTrustResourceUrl('/assets/thumbup-icon.svg'));\n}",sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleShape={html:'<mdc-text-field label="Standard" required class="demo-text-field-custom-colors"></mdc-text-field>\n\n<mdc-text-field label="Standard" class="demo-shaped-text-field"></mdc-text-field>\n\n<mdc-text-field label="Standard" outlined class="demo-shaped-text-field--outline"></mdc-text-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleNumeric={html:'<mdc-text-field type="number" label="Distance" [(ngModel)]="waypoint.dt"></mdc-text-field>\n\n<p>Model: {{waypoint | json}}</p>',ts:"class Directions {\n  dt: number;\n}\n\nwaypoint = new Directions();"},this.examplePrefilled={html:'<mdc-text-field [(ngModel)]="prefilledText" label="Username"></mdc-text-field>',ts:"prefilledText: string = 'Prefilled';"},this.exampleDateTime={html:'<mdc-text-field type="date" label="Birthday" outlined></mdc-text-field>\n\n<mdc-text-field type="time" label="Time" outlined></mdc-text-field>\n\n<mdc-text-field type="password" label="Password" required outlined></mdc-text-field>\n\n<mdc-text-field type="color" label="Color" outlined></mdc-text-field>'},this.exampleRtl={html:'<mdc-form-field dir="rtl">\n  <mdc-text-field outlined label="Standard">\n    <mdc-icon mdcTextFieldIcon leading>phone</mdc-icon>\n  </mdc-text-field>\n</mdc-form-field>'},this.exampleFullWithSingleLine={html:'<mdc-text-field label="Subject" fullwidth></mdc-text-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleNoLabel={html:'<mdc-form-field>\n  <mdc-text-field>\n  </mdc-text-field>\n  <mdc-helper-text persistent>Helper Text\n  </mdc-helper-text>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-text-field outlined></mdc-text-field>\n  <mdc-helper-text persistent>Helper Text\n  </mdc-helper-text>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-text-field outlined class="demo-shaped-text-field--outline">\n  </mdc-text-field>\n  <mdc-helper-text persistent>Helper Text\n  </mdc-helper-text>\n</mdc-form-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleCharacterCounter={html:'<mdc-form-field>\n  <mdc-text-field label="Standard" characterCounter maxlength="10">\n  </mdc-text-field>\n  <mdc-helper-text></mdc-helper-text>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-text-field outlined characterCounter label="Standard" maxlength="10">\n  </mdc-text-field>\n  <mdc-helper-text persistent>Helper Text\n  </mdc-helper-text>\n</mdc-form-field>'},this.exampleTACounter={html:'<mdc-textarea label="Comments" characterCounter maxlength="140"\n  [helperText]="taCounterHelper" rows="8" cols="40"></mdc-textarea>\n<mdc-helper-text #taCounterHelper validation>Helper Text</mdc-helper-text>'},this.exampleTextarea={html:'<mdc-textarea label="Comments" rows="8" cols="40" required [helperText]="commentsHelper"></mdc-textarea>\n<mdc-helper-text #commentsHelper validation>Helper Text</mdc-helper-text>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleFullWidth={html:'<mdc-textarea label="Type your message here" fullwidth required rows="8"\n  [helperText]="fullWidthHelper"></mdc-textarea>\n<mdc-helper-text #fullWidthHelper validation>Helper Text</mdc-helper-text>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},t.addSvgIcon("thumbup",b.bypassSecurityTrustResourceUrl(c.a.production?"https://trimox.github.io/angular-mdc-web/assets/thumbup-icon.svg":"/assets/thumbup-icon.svg"))}return _createClass(e,[{key:"onInput",value:function(e){this.inputEvent=e}},{key:"onChange",value:function(e){this.changeEvent=e}},{key:"onFocus",value:function(e){this.focusEvent=e}},{key:"submit",value:function(e){}},{key:"resetForm",value:function(e){e.resetForm(),this.demoForm.reset()}},{key:"alternateColors",value:function(e){if(e.textarea)e.textarea?e.elementRef.nativeElement.classList.contains("demo-textarea")?e.elementRef.nativeElement.classList.remove("demo-textarea"):e.elementRef.nativeElement.classList.add("demo-textarea"):e.elementRef.nativeElement.classList.contains("demo-fullwidth-input")?e.elementRef.nativeElement.classList.remove("demo-fullwidth-input"):e.elementRef.nativeElement.classList.add("demo-fullwidth-input");else{var t="demo-text-field-custom-colors";e.elementRef.nativeElement.classList.contains(t)?e.elementRef.nativeElement.classList.remove(t):e.elementRef.nativeElement.classList.add(t)}}}]),e}(),k.\u0275fac=function(e){return new(e||k)(l.Lb(m.a),l.Lb(x.b))},k.\u0275cmp=l.Fb({type:k,selectors:[["ng-component"]],decls:266,vars:66,consts:[[1,"demo-content"],[1,"demo-layout__row"],["mdc-button","",3,"click"],["label","Standard","name","txt-field-standard","required","",3,"helperText"],["standard",""],["validation","","persistent",""],["standardHelper",""],[3,"example"],[1,"demo-content__headline"],["label","Standard",3,"input","focus","change"],["mdc-button","",3,"disabled","click"],[3,"formGroup","ngSubmit"],["formDirective","ngForm"],["formControlName","username","label","Username","outlined","",3,"errorStateMatcher"],["demoformInput",""],["validation",""],[4,"ngIf"],["mdc-button","","type","submit"],["mdc-button","","type","button",3,"click"],["id","demoWeightForm",3,"ngSubmit"],["demoWeightForm","ngForm"],["type","number","name","demoweight","label","Weight","ngModel","","required",""],["demoweight","","demoWeightModel","ngModel"],["mdc-button","","type","submit","form","demoWeightForm"],["label","Standard","characterCounter","","maxlength","10"],["outlined","","characterCounter","","label","Standard","maxlength","10"],["persistent",""],["label","Comments","rows","8","cols","40","required","","maxlength","140","characterCounter","",3,"helperText"],["taCounterHelper",""],["outlined",""],["outlined","",1,"demo-shaped-text-field--outline"],["label","Enter value","required","",3,"value"],["demoValue",""],[1,"demo-container"],["autocomplete","tel","type","tel","label","Phone number"],["mdcTextFieldIcon","","leading",""],["mdcTextFieldIcon","","trailing",""],["type","date","outlined","","label","Event date"],["mdc-icon-button","","mdcTextFieldIcon","","trailing","","icon","event"],["disabled","","label","Disabled"],["outlined","","label","Svg icon"],["mdcTextFieldIcon","","leading","","svgIcon","thumbup",1,"temporary-workaround-for-text-field-svg"],["label","Standard","required","",1,"demo-text-field-custom-colors"],["label","Standard",1,"demo-shaped-text-field"],["label","Standard","outlined","",1,"demo-shaped-text-field--outline"],["type","number","label","Distance",3,"ngModel","ngModelChange"],["label","Username",3,"ngModel","ngModelChange"],["dir","rtl"],["outlined","","label","Standard"],["type","date","label","Birthday","outlined",""],["type","time","label","Time","outlined",""],["type","password","label","Password","required","","outlined",""],["type","color","label","Color","outlined","",2,"width","6rem"],["label","Subject","fullwidth",""],["demofullwidth",""],["label","Comments","rows","8","cols","40","required","",3,"helperText"],["comments",""],["commentsHelper",""],["label","Type your message here","fullwidth","","required","","rows","8",3,"helperText"],["demotextarea",""],["fullWidthHelper",""]],template:function(e,t){if(1&e){var b=l.Sb();l.Rb(0,"div",0),l.Rb(1,"div",1),l.Rb(2,"button",2),l.Zb("click",(function(e){l.pc(b);var t=l.oc(11);return t.outlined=!t.outlined})),l.xc(3),l.Qb(),l.Rb(4,"button",2),l.Zb("click",(function(e){l.pc(b);var t=l.oc(11);return t.required=!t.required})),l.xc(5),l.Qb(),l.Rb(6,"button",2),l.Zb("click",(function(e){l.pc(b);var t=l.oc(11);return t.disabled=!t.disabled})),l.xc(7),l.Qb(),l.Rb(8,"button",2),l.Zb("click",(function(e){l.pc(b);var t=l.oc(11);return t.readonly=!t.readonly})),l.xc(9),l.Qb(),l.Qb(),l.Mb(10,"mdc-text-field",3,4),l.Rb(12,"mdc-helper-text",5,6),l.xc(14,"Helper Text "),l.Qb(),l.Mb(15,"example-viewer",7),l.Qb(),l.Rb(16,"div",0),l.Rb(17,"h3",8),l.xc(18,"Input and Change events"),l.Qb(),l.Rb(19,"mdc-text-field",9),l.Zb("input",(function(e){return t.onInput(e)}))("focus",(function(e){return t.onFocus(e)}))("change",(function(e){return t.onChange(e)})),l.Qb(),l.Rb(20,"p"),l.xc(21),l.Qb(),l.Rb(22,"p"),l.xc(23),l.Qb(),l.Rb(24,"p"),l.xc(25),l.Qb(),l.Mb(26,"example-viewer",7),l.Qb(),l.Rb(27,"div",0),l.Rb(28,"h3",8),l.xc(29,"Reactive Form"),l.Qb(),l.Rb(30,"div",1),l.Rb(31,"button",2),l.Zb("click",(function(e){l.pc(b);var t=l.oc(41);return t.outlined=!t.outlined})),l.xc(32),l.Qb(),l.Rb(33,"button",2),l.Zb("click",(function(e){l.pc(b);var t=l.oc(41);return t.useNativeValidation=!t.useNativeValidation})),l.xc(34),l.Qb(),l.Rb(35,"button",10),l.Zb("click",(function(e){return t.demoForm.controls.username.markAsTouched()})),l.xc(36,"Mark touched"),l.Qb(),l.Qb(),l.Rb(37,"form",11,12),l.Zb("ngSubmit",(function(e){return t.submit(t.demoForm)})),l.Rb(39,"mdc-form-field"),l.Mb(40,"mdc-text-field",13,14),l.Rb(42,"mdc-helper-text",15),l.vc(43,T,2,0,"span",16),l.vc(44,M,2,0,"span",16),l.vc(45,F,2,0,"span",16),l.Qb(),l.Qb(),l.Rb(46,"div",1),l.Rb(47,"button",17),l.xc(48,"Submit"),l.Qb(),l.Rb(49,"button",18),l.Zb("click",(function(e){l.pc(b);var o=l.oc(38);return t.resetForm(o)})),l.xc(50,"Reset"),l.Qb(),l.Rb(51,"button",18),l.Zb("click",(function(e){return t.demoForm.controls.username.setValue("User-1")})),l.xc(52,"Set Value"),l.Qb(),l.Qb(),l.Qb(),l.Rb(53,"p"),l.xc(54),l.Qb(),l.Rb(55,"p"),l.xc(56),l.Qb(),l.Rb(57,"p"),l.xc(58),l.Qb(),l.Rb(59,"p"),l.xc(60),l.Qb(),l.Rb(61,"p"),l.xc(62),l.Qb(),l.Rb(63,"p"),l.xc(64),l.ec(65,"json"),l.Qb(),l.Mb(66,"example-viewer",7),l.Qb(),l.Rb(67,"div",0),l.Rb(68,"h3",8),l.xc(69,"Numeric with ngModel Form"),l.Qb(),l.Rb(70,"div",1),l.Rb(71,"button",2),l.Zb("click",(function(e){l.pc(b);var t=l.oc(77);return t.outlined=!t.outlined})),l.xc(72),l.Qb(),l.Qb(),l.Rb(73,"form",19,20),l.Zb("ngSubmit",(function(e){l.pc(b);var o=l.oc(74);return t.submit(o)})),l.Rb(75,"mdc-form-field"),l.Mb(76,"mdc-text-field",21,22),l.Rb(79,"mdc-helper-text",15),l.vc(80,C,2,0,"span",16),l.Qb(),l.Qb(),l.Qb(),l.Rb(81,"div",1),l.Rb(82,"button",23),l.xc(83,"Submit"),l.Qb(),l.Rb(84,"button",2),l.Zb("click",(function(e){return l.pc(b),l.oc(74).reset()})),l.xc(85,"Reset"),l.Qb(),l.Qb(),l.Rb(86,"p"),l.xc(87),l.Qb(),l.Rb(88,"p"),l.xc(89),l.Qb(),l.Rb(90,"p"),l.xc(91),l.Qb(),l.Rb(92,"p"),l.xc(93),l.Qb(),l.Rb(94,"p"),l.xc(95),l.Qb(),l.Mb(96,"example-viewer",7),l.Qb(),l.Rb(97,"div",0),l.Rb(98,"h3",8),l.xc(99,"Character Counter"),l.Qb(),l.Rb(100,"div",1),l.Rb(101,"mdc-form-field"),l.Mb(102,"mdc-text-field",24),l.Mb(103,"mdc-helper-text"),l.Qb(),l.Rb(104,"mdc-form-field"),l.Mb(105,"mdc-text-field",25),l.Rb(106,"mdc-helper-text",26),l.xc(107,"Helper Text "),l.Qb(),l.Qb(),l.Qb(),l.Mb(108,"example-viewer",7),l.Qb(),l.Rb(109,"div",0),l.Rb(110,"h3",8),l.xc(111,"Textarea - Character Counter"),l.Qb(),l.Mb(112,"mdc-textarea",27),l.Rb(113,"mdc-helper-text",15,28),l.xc(115,"Helper Text"),l.Qb(),l.Mb(116,"example-viewer",7),l.Qb(),l.Rb(117,"div",0),l.Rb(118,"h3",8),l.xc(119,"No Label"),l.Qb(),l.Rb(120,"div",1),l.Rb(121,"mdc-form-field"),l.Mb(122,"mdc-text-field"),l.Rb(123,"mdc-helper-text",26),l.xc(124,"Helper Text "),l.Qb(),l.Qb(),l.Rb(125,"mdc-form-field"),l.Mb(126,"mdc-text-field",29),l.Rb(127,"mdc-helper-text",26),l.xc(128,"Helper Text "),l.Qb(),l.Qb(),l.Rb(129,"mdc-form-field"),l.Mb(130,"mdc-text-field",30),l.Rb(131,"mdc-helper-text",26),l.xc(132,"Helper Text "),l.Qb(),l.Qb(),l.Qb(),l.Mb(133,"example-viewer",7),l.Qb(),l.Rb(134,"div",0),l.Rb(135,"h3",8),l.xc(136,"Using [value]"),l.Qb(),l.Rb(137,"div",1),l.Rb(138,"button",2),l.Zb("click",(function(e){l.pc(b);var t=l.oc(142);return t.required=!t.required})),l.xc(139),l.Qb(),l.Qb(),l.Rb(140,"mdc-form-field"),l.Mb(141,"mdc-text-field",31,32),l.Rb(143,"mdc-helper-text",15),l.vc(144,S,2,0,"span",16),l.Qb(),l.Qb(),l.Rb(145,"div",1),l.Rb(146,"button",2),l.Zb("click",(function(e){return l.pc(b),l.oc(142).value=null})),l.xc(147,"Reset value"),l.Qb(),l.Qb(),l.Rb(148,"p"),l.xc(149),l.Qb(),l.Mb(150,"example-viewer",7),l.Qb(),l.Rb(151,"div",0),l.Rb(152,"h3",8),l.xc(153,"Leading and Trailing Icons"),l.Qb(),l.Rb(154,"div",33),l.Rb(155,"mdc-text-field",34),l.Rb(156,"mdc-icon",35),l.xc(157,"phone"),l.Qb(),l.Rb(158,"mdc-icon",36),l.xc(159,"event"),l.Qb(),l.Qb(),l.Qb(),l.Rb(160,"div",33),l.Rb(161,"mdc-text-field",37),l.Rb(162,"mdc-icon",35),l.xc(163,"event"),l.Qb(),l.Qb(),l.Qb(),l.Rb(164,"div",33),l.Rb(165,"mdc-text-field",37),l.Mb(166,"button",38),l.Qb(),l.Qb(),l.Rb(167,"div",33),l.Rb(168,"mdc-text-field",39),l.Rb(169,"mdc-icon",35),l.xc(170,"event"),l.Qb(),l.Qb(),l.Qb(),l.Mb(171,"example-viewer",7),l.Qb(),l.Rb(172,"div",0),l.Rb(173,"h3",8),l.xc(174,"Svg Icon"),l.Qb(),l.Rb(175,"div",33),l.Rb(176,"mdc-text-field",40),l.Mb(177,"mdc-icon",41),l.Qb(),l.Qb(),l.Mb(178,"example-viewer",7),l.Qb(),l.Rb(179,"div",0),l.Rb(180,"h3",8),l.xc(181,"Shape"),l.Qb(),l.Rb(182,"div",33),l.Mb(183,"mdc-text-field",42),l.Qb(),l.Rb(184,"div",33),l.Mb(185,"mdc-text-field",43),l.Qb(),l.Rb(186,"div",33),l.Mb(187,"mdc-text-field",44),l.Qb(),l.Mb(188,"example-viewer",7),l.Qb(),l.Rb(189,"div",0),l.Rb(190,"h3",8),l.xc(191,"Numeric with ngModel"),l.Qb(),l.Rb(192,"mdc-text-field",45),l.Zb("ngModelChange",(function(e){return t.waypoint.dt=e})),l.Qb(),l.Rb(193,"p"),l.xc(194),l.ec(195,"json"),l.Qb(),l.Mb(196,"example-viewer",7),l.Qb(),l.Rb(197,"div",0),l.Rb(198,"h3",8),l.xc(199,"Prefilled via ngModel"),l.Qb(),l.Rb(200,"mdc-text-field",46),l.Zb("ngModelChange",(function(e){return t.prefilledText=e})),l.Qb(),l.Rb(201,"p"),l.xc(202),l.Mb(203,"example-viewer",7),l.Qb(),l.Qb(),l.Rb(204,"div",0),l.Rb(205,"h3",8),l.xc(206,"RTL"),l.Qb(),l.Rb(207,"mdc-form-field",47),l.Rb(208,"mdc-text-field",48),l.Rb(209,"mdc-icon",35),l.xc(210,"phone"),l.Qb(),l.Qb(),l.Qb(),l.Mb(211,"example-viewer",7),l.Qb(),l.Rb(212,"div",0),l.Rb(213,"h3",8),l.xc(214,"Date / Time / Color / Password"),l.Qb(),l.Rb(215,"div",1),l.Rb(216,"div",33),l.Mb(217,"mdc-text-field",49),l.Qb(),l.Rb(218,"div",33),l.Mb(219,"mdc-text-field",50),l.Qb(),l.Rb(220,"div",33),l.Mb(221,"mdc-text-field",51),l.Qb(),l.Rb(222,"div",33),l.Mb(223,"mdc-text-field",52),l.Qb(),l.Qb(),l.Mb(224,"example-viewer",7),l.Qb(),l.Rb(225,"div",0),l.Rb(226,"h3",8),l.xc(227,"Full Width"),l.Qb(),l.Rb(228,"div",1),l.Rb(229,"button",2),l.Zb("click",(function(e){l.pc(b);var o=l.oc(232);return t.alternateColors(o)})),l.xc(230,"Alternate Colors"),l.Qb(),l.Qb(),l.Mb(231,"mdc-text-field",53,54),l.Mb(233,"example-viewer",7),l.Qb(),l.Rb(234,"div",0),l.Rb(235,"h3",8),l.xc(236,"Textarea"),l.Qb(),l.Rb(237,"div",1),l.Rb(238,"button",2),l.Zb("click",(function(e){l.pc(b);var t=l.oc(245);return t.disabled=!t.disabled})),l.xc(239),l.Qb(),l.Rb(240,"button",2),l.Zb("click",(function(e){l.pc(b);var t=l.oc(245);return t.required=!t.required})),l.xc(241),l.Qb(),l.Rb(242,"button",2),l.Zb("click",(function(e){l.pc(b);var o=l.oc(245);return t.alternateColors(o)})),l.xc(243,"Alternate Colors"),l.Qb(),l.Qb(),l.Mb(244,"mdc-textarea",55,56),l.Rb(246,"mdc-helper-text",15,57),l.xc(248,"Helper Text"),l.Qb(),l.Mb(249,"example-viewer",7),l.Qb(),l.Rb(250,"div",0),l.Rb(251,"h3",8),l.xc(252,"Full Width Textarea"),l.Qb(),l.Rb(253,"div",1),l.Rb(254,"button",2),l.Zb("click",(function(e){l.pc(b);var t=l.oc(261);return t.disabled=!t.disabled})),l.xc(255),l.Qb(),l.Rb(256,"button",2),l.Zb("click",(function(e){l.pc(b);var t=l.oc(261);return t.required=!t.required})),l.xc(257),l.Qb(),l.Rb(258,"button",2),l.Zb("click",(function(e){l.pc(b);var o=l.oc(261);return t.alternateColors(o)})),l.xc(259,"Alternate Colors"),l.Qb(),l.Qb(),l.Mb(260,"mdc-textarea",58,59),l.Rb(262,"mdc-helper-text",15,60),l.xc(264,"Helper Text"),l.Qb(),l.Mb(265,"example-viewer",7),l.Qb()}if(2&e){var o=l.oc(11),i=l.oc(13),d=l.oc(41),c=l.oc(74),n=l.oc(77),r=l.oc(78),a=l.oc(114),s=l.oc(142),m=l.oc(245),x=l.oc(247),u=l.oc(261),h=l.oc(263);l.Bb(3),l.zc("Outlined: ",o.outlined?"On":"Off",""),l.Bb(2),l.zc("Required: ",o.required?"On":"Off",""),l.Bb(2),l.zc("Disabled: ",o.disabled?"On":"Off",""),l.Bb(2),l.zc("Read Only: ",o.readonly?"On":"Off",""),l.Bb(1),l.ic("helperText",i),l.Bb(5),l.ic("example",t.exampleStandard),l.Bb(6),l.zc("Input event: ",t.inputEvent,""),l.Bb(2),l.zc("Change event: ",t.changeEvent,""),l.Bb(2),l.zc("Focus event: ",t.focusEvent,""),l.Bb(1),l.ic("example",t.exampleEvents),l.Bb(6),l.zc("Outlined: ",d.outlined?"On":"Off",""),l.Bb(2),l.zc("Native validation: ",d.useNativeValidation?"On":"Off",""),l.Bb(1),l.ic("disabled",t.demoForm.touched),l.Bb(2),l.ic("formGroup",t.demoForm),l.Bb(3),l.ic("errorStateMatcher",t.matcher),l.Bb(3),l.ic("ngIf",t.demoForm.controls.username.hasError("required")),l.Bb(1),l.ic("ngIf",t.demoForm.controls.username.hasError("minlength")),l.Bb(1),l.ic("ngIf",t.demoForm.controls.username.hasError("maxlength")),l.Bb(9),l.zc("Control Valid: ",t.demoForm.controls.username.valid,""),l.Bb(2),l.zc("Dirty: ",t.demoForm.dirty,""),l.Bb(2),l.zc("Valid: ",t.demoForm.valid,""),l.Bb(2),l.zc("Pristine: ",t.demoForm.pristine,""),l.Bb(2),l.zc("Touched: ",t.demoForm.touched,""),l.Bb(2),l.zc("Value: ",l.fc(65,62,t.demoForm.value),""),l.Bb(2),l.ic("example",t.exampleReactive),l.Bb(6),l.zc("Outlined: ",n.outlined?"On":"Off",""),l.Bb(8),l.ic("ngIf",!(null!=n&&n.value)),l.Bb(7),l.zc("Dirty: ",r.dirty,""),l.Bb(2),l.zc("Valid: ",c.valid,""),l.Bb(2),l.zc("Pristine: ",c.pristine,""),l.Bb(2),l.zc("Touched: ",r.touched,""),l.Bb(2),l.zc("Value: ",r.value,""),l.Bb(1),l.ic("example",t.exampleNumericNgModel),l.Bb(12),l.ic("example",t.exampleCharacterCounter),l.Bb(4),l.ic("helperText",a),l.Bb(4),l.ic("example",t.exampleTACounter),l.Bb(17),l.ic("example",t.exampleNoLabel),l.Bb(6),l.zc("Required: ",s.required?"On":"Off",""),l.Bb(2),l.ic("value",t.demoInputValue),l.Bb(3),l.ic("ngIf",!(null!=s&&s.value)),l.Bb(5),l.zc("Value: ",s.value,""),l.Bb(1),l.ic("example",t.exampleUsingValue),l.Bb(21),l.ic("example",t.exampleIcons),l.Bb(7),l.ic("example",t.exampleSvgIcon),l.Bb(10),l.ic("example",t.exampleShape),l.Bb(4),l.ic("ngModel",t.waypoint.dt),l.Bb(2),l.zc("Model: ",l.fc(195,64,t.waypoint),""),l.Bb(2),l.ic("example",t.exampleNumeric),l.Bb(4),l.ic("ngModel",t.prefilledText),l.Bb(2),l.zc("ngModel: ",t.prefilledText," "),l.Bb(1),l.ic("example",t.examplePrefilled),l.Bb(8),l.ic("example",t.exampleRtl),l.Bb(13),l.ic("example",t.exampleDateTime),l.Bb(9),l.ic("example",t.exampleFullWithSingleLine),l.Bb(6),l.zc("Disabled: ",m.disabled?"On":"Off",""),l.Bb(2),l.zc("Required: ",m.required?"On":"Off",""),l.Bb(3),l.ic("helperText",x),l.Bb(5),l.ic("example",t.exampleTextarea),l.Bb(6),l.zc("Disabled: ",u.disabled?"On":"Off",""),l.Bb(2),l.zc("Required: ",u.required?"On":"Off",""),l.Bb(3),l.ic("helperText",h),l.Bb(5),l.ic("example",t.exampleFullWidth)}},directives:[u.a,h.a,R.a,Q.a,d.r,d.l,d.f,p.a,d.k,d.d,f.k,d.m,d.n,d.p,v.a,g.b,y.a,w.a],pipes:[f.f],encapsulation:2}),k)}]}],O=((E=function e(){_classCallCheck(this,e)}).\u0275mod=l.Jb({type:E}),E.\u0275inj=l.Ib({factory:function(e){return new(e||E)},imports:[[i.e.forChild($)],i.e]}),E);b.d(t,"TextFieldModule",(function(){return _}));var H,_=((H=function e(){_classCallCheck(this,e)}).\u0275mod=l.Jb({type:H}),H.\u0275inj=l.Ib({factory:function(e){return new(e||H)},imports:[[o.a,O]]}),H)}}]);