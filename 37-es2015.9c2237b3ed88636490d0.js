(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{jea9:function(e,t,o){"use strict";o.r(t),o.d(t,"RadioModule",(function(){return g}));var b=o("d2mR"),a=o("tyNb"),c=o("leug"),d=o("3Pt+"),i=o("fXoL"),n=o("LuDt"),r=o("5l+6"),s=o("CBIf"),l=o("dkiD"),m=o("4G1d"),u=o("9UYg"),R=o("kDKR"),p=o("ofXK");function Q(e,t){if(1&e&&(i.Rb(0,"mdc-form-field"),i.Mb(1,"mdc-radio",17),i.Rb(2,"label"),i.wc(3),i.Qb(),i.Qb()),2&e){const e=t.$implicit;i.Bb(1),i.ic("value",e),i.Bb(2),i.xc(e)}}function w(e,t){if(1&e&&(i.Rb(0,"mdc-form-field"),i.Mb(1,"mdc-radio",17),i.Rb(2,"label"),i.wc(3),i.Qb(),i.Qb()),2&e){const e=t.$implicit;i.Bb(1),i.ic("value",e),i.Bb(2),i.xc(e)}}const f=[{path:"",component:(()=>{class e{ngOnInit(){this._componentViewer.template={title:"Radio Buttons",description:"Radio buttons allow the user to select one option from a set while seeing all available options.",references:[{name:"Material Design guidelines: Radio Buttons",url:"https://material.io/design/components/selection-controls.html#radio-buttons"},{name:"Material Components Web",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-radio/README.md"}],code:"import {MdcRadioModule} from '@angular-mdc/web';",sass:"@use '@material/radio/mdc-radio';\n@use '@material/radio';\n@use '@material/form-field/mdc-form-field';"}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i.Fb({type:e,selectors:[["ng-component"]],viewQuery:function(e,t){var o;1&e&&i.tc(c.a,!0),2&e&&i.nc(o=i.ac())&&(t._componentViewer=o.first)},decls:1,vars:0,template:function(e,t){1&e&&i.Mb(0,"component-viewer")},directives:[n.a],encapsulation:2}),e})(),children:[{path:"",redirectTo:"api"},{path:"api",component:(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i.Fb({type:e,selectors:[["ng-component"]],decls:137,vars:0,consts:[[1,"docs-api"],["mdcHeadline6",""],[1,"markdown-code"],["mdcSubtitle2",""]],template:function(e,t){1&e&&(i.Rb(0,"div",0),i.Rb(1,"h3",1),i.wc(2,"MdcRadio"),i.Qb(),i.Rb(3,"p"),i.wc(4," Selector: "),i.Rb(5,"span",2),i.wc(6,"mdc-radio"),i.Qb(),i.Qb(),i.wc(7," Exported as: "),i.Rb(8,"span",2),i.wc(9,"mdcRadio"),i.Qb(),i.Rb(10,"h4",3),i.wc(11,"Properties"),i.Qb(),i.Rb(12,"table"),i.Rb(13,"thead"),i.Rb(14,"tr"),i.Rb(15,"th"),i.wc(16,"Name"),i.Qb(),i.Rb(17,"th"),i.wc(18,"Description"),i.Qb(),i.Qb(),i.Qb(),i.Rb(19,"tbody"),i.Rb(20,"tr"),i.Rb(21,"td"),i.wc(22,"id: string"),i.Qb(),i.Rb(23,"td"),i.wc(24,"Unique Id of the radio button (auto generated if not supplied)."),i.Qb(),i.Qb(),i.Rb(25,"tr"),i.Rb(26,"td"),i.wc(27,"name: string"),i.Qb(),i.Rb(28,"td"),i.wc(29,"Name of the radio button."),i.Qb(),i.Qb(),i.Rb(30,"tr"),i.Rb(31,"td"),i.wc(32,"value: any"),i.Qb(),i.Rb(33,"td"),i.wc(34,"Value of the radio button."),i.Qb(),i.Qb(),i.Rb(35,"tr"),i.Rb(36,"td"),i.wc(37,"ariaLabel: string"),i.Qb(),i.Rb(38,"td"),i.wc(39,"Used to set the 'aria-label' attribute on the underlying input element."),i.Qb(),i.Qb(),i.Rb(40,"tr"),i.Rb(41,"td"),i.wc(42,"ariaLabelledby: string"),i.Qb(),i.Rb(43,"td"),i.wc(44,"The 'aria-labelledby' attribute takes precedence as the element's text alternative."),i.Qb(),i.Qb(),i.Rb(45,"tr"),i.Rb(46,"td"),i.wc(47,"checked: boolean"),i.Qb(),i.Rb(48,"td"),i.wc(49,"Use to verify the checked value."),i.Qb(),i.Qb(),i.Rb(50,"tr"),i.Rb(51,"td"),i.wc(52,"disabled: boolean"),i.Qb(),i.Rb(53,"td"),i.wc(54,"Disables the component."),i.Qb(),i.Qb(),i.Rb(55,"tr"),i.Rb(56,"td"),i.wc(57,"required: boolean"),i.Qb(),i.Rb(58,"td"),i.wc(59,"Whether the radio button is required."),i.Qb(),i.Qb(),i.Rb(60,"tr"),i.Rb(61,"td"),i.wc(62,"touch: boolean"),i.Qb(),i.Rb(63,"td"),i.wc(64,"Set the component touch target to 48 x 48 px."),i.Qb(),i.Qb(),i.Qb(),i.Qb(),i.Rb(65,"h4",3),i.wc(66,"Methods"),i.Qb(),i.Rb(67,"table"),i.Rb(68,"tbody"),i.Rb(69,"tr"),i.Rb(70,"td"),i.wc(71,"focus()"),i.Qb(),i.Rb(72,"td"),i.wc(73,"Set focus to the radio button."),i.Qb(),i.Qb(),i.Qb(),i.Qb(),i.Rb(74,"h4",3),i.wc(75,"Events"),i.Qb(),i.Rb(76,"table"),i.Rb(77,"tbody"),i.Rb(78,"tr"),i.Rb(79,"td"),i.wc(80,"change(source: MdcRadio, value: any)"),i.Qb(),i.Rb(81,"td"),i.wc(82,"Event emitted when the group value changes. Change events are only emitted when the value changes due to user interaction with a radio button."),i.Qb(),i.Qb(),i.Qb(),i.Qb(),i.Qb(),i.Rb(83,"div",0),i.Rb(84,"h3",1),i.wc(85,"MdcRadioGroup"),i.Qb(),i.Rb(86,"p"),i.wc(87," Selector: "),i.Rb(88,"span",2),i.wc(89,"mdc-radio-group"),i.Qb(),i.Qb(),i.wc(90," Exported as: "),i.Rb(91,"span",2),i.wc(92,"mdcRadioGroup"),i.Qb(),i.Rb(93,"h4",3),i.wc(94,"Properties"),i.Qb(),i.Rb(95,"table"),i.Rb(96,"thead"),i.Rb(97,"tr"),i.Rb(98,"th"),i.wc(99,"Name"),i.Qb(),i.Rb(100,"th"),i.wc(101,"Description"),i.Qb(),i.Qb(),i.Qb(),i.Rb(102,"tbody"),i.Rb(103,"tr"),i.Rb(104,"td"),i.wc(105,"name: string"),i.Qb(),i.Rb(106,"td"),i.wc(107,"Name of the radio button group."),i.Qb(),i.Qb(),i.Rb(108,"tr"),i.Rb(109,"td"),i.wc(110,"required: boolean"),i.Qb(),i.Rb(111,"td"),i.wc(112,"Whether the radio group is required."),i.Qb(),i.Qb(),i.Rb(113,"tr"),i.Rb(114,"td"),i.wc(115,"disabled: boolean"),i.Qb(),i.Rb(116,"td"),i.wc(117,"Whether the radio group is disabled."),i.Qb(),i.Qb(),i.Rb(118,"tr"),i.Rb(119,"td"),i.wc(120,"selected: MdcRadio | null"),i.Qb(),i.Rb(121,"td"),i.wc(122,"The currently selected radio button. If set to a new radio button, the radio group value will be updated to match the new selected button."),i.Qb(),i.Qb(),i.Rb(123,"tr"),i.Rb(124,"td"),i.wc(125,"value: any"),i.Qb(),i.Rb(126,"td"),i.wc(127,"Value for the radio-group. Should equal the value of the selected radio button if there is a corresponding radio button with a matching value. If there is not such a corresponding radio button, this value persists to be applied in case a new radio button is added with a matching value. "),i.Qb(),i.Qb(),i.Qb(),i.Qb(),i.Rb(128,"h4",3),i.wc(129,"Events"),i.Qb(),i.Rb(130,"table"),i.Rb(131,"tbody"),i.Rb(132,"tr"),i.Rb(133,"td"),i.wc(134,"change(source: MdcRadio, value: any)"),i.Qb(),i.Rb(135,"td"),i.wc(136,"Event emitted when the group value changes. Change events are only emitted when the value changes due to user interaction with a radio button."),i.Qb(),i.Qb(),i.Qb(),i.Qb(),i.Qb())},directives:[r.i,r.l],encapsulation:2}),e})()},{path:"sass",component:(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i.Fb({type:e,selectors:[["ng-component"]],decls:89,vars:0,consts:[[1,"docs-api"],["mdcSubtitle2",""]],template:function(e,t){1&e&&(i.Rb(0,"div",0),i.Rb(1,"h4",1),i.wc(2,"Sass Mixins"),i.Qb(),i.Rb(3,"table"),i.Rb(4,"thead"),i.Rb(5,"tr"),i.Rb(6,"th"),i.wc(7,"Mixin"),i.Qb(),i.Rb(8,"th"),i.wc(9,"Description"),i.Qb(),i.Qb(),i.Qb(),i.Rb(10,"tbody"),i.Rb(11,"tr"),i.Rb(12,"td"),i.Rb(13,"code"),i.wc(14,"unchecked-stroke-color($color)"),i.Qb(),i.Qb(),i.Rb(15,"td"),i.wc(16,"Sets the stroke color of an unchecked, enabled radio button"),i.Qb(),i.Qb(),i.Rb(17,"tr"),i.Rb(18,"td"),i.Rb(19,"code"),i.wc(20,"checked-stroke-color($color)"),i.Qb(),i.Qb(),i.Rb(21,"td"),i.wc(22,"Sets the stroke color of a checked, enabled radio button"),i.Qb(),i.Qb(),i.Rb(23,"tr"),i.Rb(24,"td"),i.Rb(25,"code"),i.wc(26,"ink-color($color)"),i.Qb(),i.Qb(),i.Rb(27,"td"),i.wc(28,"Sets the ink color of an enabled radio button"),i.Qb(),i.Qb(),i.Rb(29,"tr"),i.Rb(30,"td"),i.Rb(31,"code"),i.wc(32,"disabled-unchecked-stroke-color($color)"),i.Qb(),i.Qb(),i.Rb(33,"td"),i.wc(34,"Sets the stroke color of an unchecked, disabled radio button"),i.Qb(),i.Qb(),i.Rb(35,"tr"),i.Rb(36,"td"),i.Rb(37,"code"),i.wc(38,"disabled-checked-stroke-color($color)"),i.Qb(),i.Qb(),i.Rb(39,"td"),i.wc(40,"Sets the stroke color of a checked, disabled radio button"),i.Qb(),i.Qb(),i.Rb(41,"tr"),i.Rb(42,"td"),i.Rb(43,"code"),i.wc(44,"disabled-ink-color($color)"),i.Qb(),i.Qb(),i.Rb(45,"td"),i.wc(46,"Sets the ink color of a disabled radio button"),i.Qb(),i.Qb(),i.Rb(47,"tr"),i.Rb(48,"td"),i.Rb(49,"code"),i.wc(50,"focus-indicator-color($color)"),i.Qb(),i.Qb(),i.Rb(51,"td"),i.wc(52,"Sets the color of the focus indicator"),i.Qb(),i.Qb(),i.Rb(53,"tr"),i.Rb(54,"td"),i.Rb(55,"code"),i.wc(56,"touch-target($size, $ripple-size)"),i.Qb(),i.Qb(),i.Rb(57,"td"),i.wc(58,"Sets radio touch target size which can be more than the ripple size. Param "),i.Rb(59,"code"),i.wc(60,"$ripple-size"),i.Qb(),i.wc(61," is required for custom ripple size, defaults to "),i.Rb(62,"code"),i.wc(63,"$ripple-size"),i.Qb(),i.wc(64,"."),i.Qb(),i.Qb(),i.Rb(65,"tr"),i.Rb(66,"td"),i.Rb(67,"code"),i.wc(68,"ripple-size($size)"),i.Qb(),i.Qb(),i.Rb(69,"td"),i.wc(70,"Sets custom ripple size of radio."),i.Qb(),i.Qb(),i.Rb(71,"tr"),i.Rb(72,"td"),i.Rb(73,"code"),i.wc(74,"density($density-scale)"),i.Qb(),i.Qb(),i.Rb(75,"td"),i.wc(76,"Sets density scale for radio. Supported density scale values are "),i.Rb(77,"code"),i.wc(78,"-3"),i.Qb(),i.wc(79,", "),i.Rb(80,"code"),i.wc(81,"-2"),i.Qb(),i.wc(82,", "),i.Rb(83,"code"),i.wc(84,"-1"),i.Qb(),i.wc(85," and "),i.Rb(86,"code"),i.wc(87,"0"),i.Qb(),i.wc(88," (default)."),i.Qb(),i.Qb(),i.Qb(),i.Qb(),i.Qb())},directives:[r.l],encapsulation:2}),e})()},{path:"examples",component:(()=>{class e{constructor(){this.seasons=["Winter","Spring","Summer","Autumn"],this.form=new d.d({season:new d.b("Spring")}),this.example1={html:"<mdc-radio></mdc-radio>"},this.exampleRadioSet={html:'<mdc-form-field>\n  <mdc-radio name="demo-radio-set"></mdc-radio>\n  <label>Radio 1</label>\n</mdc-form-field>\n<mdc-form-field>\n  <mdc-radio name="demo-radio-set"></mdc-radio>\n  <label>Radio 2</label>\n</mdc-form-field>'},this.example2={html:'<mdc-form-field [alignEnd]="false">\n  <mdc-radio [disabled]="false" class="demo-radio--custom"></mdc-radio>\n  <label>Radio Button</label>\n</mdc-form-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_radio.scss"},this.exampleRadioGroup={html:'<mdc-radio-group [(ngModel)]="favoriteSeason">\n  <mdc-form-field *ngFor="let season of seasons">\n    <mdc-radio [value]="season"></mdc-radio>\n    <label>{{season}}</label>\n  </mdc-form-field>\n</mdc-radio-group>\n<p>Your favorite season is: {{favoriteSeason}}</p>',ts:"favoriteSeason: string;\nseasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];"},this.exampleReactive={html:'<form [formGroup]="form">\n  <mdc-radio-group formControlName="season">\n    <mdc-form-field *ngFor="let season of seasons">\n      <mdc-radio [value]="season"></mdc-radio>\n      <label>{{season}}</label>\n    </mdc-form-field>\n  </mdc-radio-group>\n</form>\n<p>Your favorite season is: {{form.controls[\'season\'].value}}</p>',ts:"seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];\n\nform = new FormGroup({\n  season: new FormControl('Spring'),\n});"},this.exampleAccessibility={html:'<div class="mdc-touch-target-wrapper">\n  <mdc-form-field>\n    <mdc-radio name="demo-radio-set" touch></mdc-radio>\n    <label>My Accessibility Radio</label>\n  </mdc-form-field>\n</div>'}}alternateColors(e){const t="demo-radio--custom";e.elementRef.nativeElement.classList.contains(t)?e.elementRef.nativeElement.classList.remove(t):e.elementRef.nativeElement.classList.add(t)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i.Fb({type:e,selectors:[["ng-component"]],decls:67,vars:17,consts:[[1,"demo-content"],[3,"example"],["name","demo-radio-set"],[1,"demo-layout__row"],["mdc-button","",3,"click"],[3,"alignEnd"],["demoFormField",""],["demoRadio2",""],[1,"demo-content__headline"],[3,"ngModel","ngModelChange"],["demoRadioGroup",""],[4,"ngFor","ngForOf"],[3,"formGroup"],["formControlName","season"],["demoRadioReactive",""],[1,"mdc-touch-target-wrapper"],["name","demo-radio-set","touch",""],[3,"value"]],template:function(e,t){if(1&e){const e=i.Sb();i.Rb(0,"div",0),i.Mb(1,"mdc-radio"),i.Mb(2,"example-viewer",1),i.Qb(),i.Rb(3,"div",0),i.Rb(4,"mdc-form-field"),i.Mb(5,"mdc-radio",2),i.Rb(6,"label"),i.wc(7,"Radio 1"),i.Qb(),i.Qb(),i.Rb(8,"mdc-form-field"),i.Mb(9,"mdc-radio",2),i.Rb(10,"label"),i.wc(11,"Radio 2"),i.Qb(),i.Qb(),i.Mb(12,"example-viewer",1),i.Qb(),i.Rb(13,"div",0),i.Rb(14,"div",3),i.Rb(15,"button",4),i.Zb("click",(function(){i.pc(e);const t=i.oc(22);return t.alignEnd=!t.alignEnd})),i.wc(16),i.Qb(),i.Rb(17,"button",4),i.Zb("click",(function(){i.pc(e);const t=i.oc(24);return t.disabled=!t.disabled})),i.wc(18),i.Qb(),i.Rb(19,"button",4),i.Zb("click",(function(){i.pc(e);const o=i.oc(24);return t.alternateColors(o)})),i.wc(20,"Alternate Colors"),i.Qb(),i.Qb(),i.Rb(21,"mdc-form-field",5,6),i.Mb(23,"mdc-radio",null,7),i.Rb(25,"label"),i.wc(26,"Radio Button"),i.Qb(),i.Qb(),i.Mb(27,"example-viewer",1),i.Qb(),i.Rb(28,"div",0),i.Rb(29,"h3",8),i.wc(30,"Radio Group"),i.Qb(),i.Rb(31,"div",3),i.Rb(32,"button",4),i.Zb("click",(function(){i.pc(e);const t=i.oc(35);return t.disabled=!t.disabled})),i.wc(33),i.Qb(),i.Qb(),i.Rb(34,"mdc-radio-group",9,10),i.Zb("ngModelChange",(function(e){return t.favoriteSeason=e})),i.uc(36,Q,4,2,"mdc-form-field",11),i.Qb(),i.Rb(37,"p"),i.wc(38),i.Qb(),i.Mb(39,"example-viewer",1),i.Qb(),i.Rb(40,"div",0),i.Rb(41,"h3",8),i.wc(42,"Radio Group - Reactive forms"),i.Qb(),i.Rb(43,"div",3),i.Rb(44,"button",4),i.Zb("click",(function(){i.pc(e);const t=i.oc(48);return t.disabled=!t.disabled})),i.wc(45),i.Qb(),i.Qb(),i.Rb(46,"form",12),i.Rb(47,"mdc-radio-group",13,14),i.uc(49,w,4,2,"mdc-form-field",11),i.Qb(),i.Qb(),i.Rb(50,"p"),i.wc(51),i.Qb(),i.Mb(52,"example-viewer",1),i.Qb(),i.Rb(53,"div",0),i.Rb(54,"h3",8),i.wc(55,"Accessibility"),i.Qb(),i.Rb(56,"p"),i.wc(57," Material Design spec advises that touch targets should be at least 48 x 48 px. To meet this requirement, add the `touch` property. "),i.Qb(),i.Rb(58,"p"),i.wc(59," Note that the outer mdc-touch-target-wrapper element is only necessary if you want to avoid potentially overlapping touch targets on adjacent elements (due to collapsing margins). "),i.Qb(),i.Rb(60,"div",3),i.Rb(61,"div",15),i.Rb(62,"mdc-form-field"),i.Mb(63,"mdc-radio",16),i.Rb(64,"label"),i.wc(65,"My Accessibility Radio"),i.Qb(),i.Qb(),i.Qb(),i.Qb(),i.Mb(66,"example-viewer",1),i.Qb()}if(2&e){const e=i.oc(22),o=i.oc(24),b=i.oc(35),a=i.oc(48);i.Bb(2),i.ic("example",t.example1),i.Bb(10),i.ic("example",t.exampleRadioSet),i.Bb(4),i.yc("RTL: ",e.alignEnd?"On":"Off",""),i.Bb(2),i.yc("Disabled: ",o.disabled?"On":"Off",""),i.Bb(3),i.ic("alignEnd",!1),i.Bb(6),i.ic("example",t.example2),i.Bb(6),i.yc("Disabled: ",b.disabled?"On":"Off",""),i.Bb(1),i.ic("ngModel",t.favoriteSeason),i.Bb(2),i.ic("ngForOf",t.seasons),i.Bb(2),i.yc("Your favorite season is: ",t.favoriteSeason,""),i.Bb(1),i.ic("example",t.exampleRadioGroup),i.Bb(6),i.yc("Disabled: ",a.disabled?"On":"Off",""),i.Bb(1),i.ic("formGroup",t.form),i.Bb(3),i.ic("ngForOf",t.seasons),i.Bb(2),i.yc("Your favorite season is: ",t.form.controls.season.value,""),i.Bb(1),i.ic("example",t.exampleReactive),i.Bb(14),i.ic("example",t.exampleAccessibility)}},directives:[s.b,l.a,m.a,u.a,R.a,d.j,d.m,p.j,d.q,d.k,d.e,d.c],encapsulation:2}),e})()}]}];let h=(()=>{class e{}return e.\u0275mod=i.Jb({type:e}),e.\u0275inj=i.Ib({factory:function(t){return new(t||e)},imports:[[a.e.forChild(f)],a.e]}),e})(),g=(()=>{class e{}return e.\u0275mod=i.Jb({type:e}),e.\u0275inj=i.Ib({factory:function(t){return new(t||e)},imports:[[b.a,h]]}),e})()}}]);