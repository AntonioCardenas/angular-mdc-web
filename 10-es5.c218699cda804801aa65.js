function _defineProperties(e,c){for(var t=0;t<c.length;t++){var b=c[t];b.enumerable=b.enumerable||!1,b.configurable=!0,"value"in b&&(b.writable=!0),Object.defineProperty(e,b.key,b)}}function _createClass(e,c,t){return c&&_defineProperties(e.prototype,c),t&&_defineProperties(e,t),e}function _classCallCheck(e,c){if(!(e instanceof c))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"+iFw":function(e,c,t){"use strict";t.r(c);var b,o,n,a,i,d=t("d2mR"),l=t("tyNb"),r=t("leug"),s=t("fXoL"),m=t("5l+6"),h=t("LuDt"),x=t("uwiL"),k=t("dkiD"),u=t("4G1d"),p=t("9UYg"),R=((o=function e(){_classCallCheck(this,e)}).\u0275fac=function(e){return new(e||o)},o.\u0275cmp=s.Fb({type:o,selectors:[["ng-component"]],decls:108,vars:0,consts:[[1,"docs-api"],["mdcHeadline6",""],[1,"markdown-code"],["mdcSubtitle2",""]],template:function(e,c){1&e&&(s.Rb(0,"div",0),s.Rb(1,"h3",1),s.xc(2,"MdcCheckbox"),s.Qb(),s.Rb(3,"p"),s.xc(4," Selector: "),s.Rb(5,"span",2),s.xc(6,"mdc-checkbox"),s.Qb(),s.Qb(),s.xc(7," Exported as: "),s.Rb(8,"span",2),s.xc(9,"mdcCheckbox"),s.Qb(),s.Rb(10,"h4",3),s.xc(11,"Properties"),s.Qb(),s.Rb(12,"table"),s.Rb(13,"thead"),s.Rb(14,"tr"),s.Rb(15,"th"),s.xc(16,"Name"),s.Qb(),s.Rb(17,"th"),s.xc(18,"Description"),s.Qb(),s.Qb(),s.Qb(),s.Rb(19,"tbody"),s.Rb(20,"tr"),s.Rb(21,"td"),s.xc(22,"id: string"),s.Qb(),s.Rb(23,"td"),s.xc(24,"Unique Id of the checkbox (auto generated if not supplied)."),s.Qb(),s.Qb(),s.Rb(25,"tr"),s.Rb(26,"td"),s.xc(27,"name: string"),s.Qb(),s.Rb(28,"td"),s.xc(29,"Name of the checkbox."),s.Qb(),s.Qb(),s.Rb(30,"tr"),s.Rb(31,"td"),s.xc(32,"checked: boolean"),s.Qb(),s.Rb(33,"td"),s.xc(34,"Whether the checkbox is checked."),s.Qb(),s.Qb(),s.Rb(35,"tr"),s.Rb(36,"td"),s.xc(37,"value: string"),s.Qb(),s.Rb(38,"td"),s.xc(39,"The value attribute of the native input element."),s.Qb(),s.Qb(),s.Rb(40,"tr"),s.Rb(41,"td"),s.xc(42,"tabIndex: number"),s.Qb(),s.Rb(43,"td"),s.xc(44,"Set the underlying tab index of the checkbox. (Default: 0)"),s.Qb(),s.Qb(),s.Rb(45,"tr"),s.Rb(46,"td"),s.xc(47,"ariaLabel: string"),s.Qb(),s.Rb(48,"td"),s.xc(49,"Used to set the 'aria-label' attribute on the underlying input element."),s.Qb(),s.Qb(),s.Rb(50,"tr"),s.Rb(51,"td"),s.xc(52,"ariaLabelledby: string"),s.Qb(),s.Rb(53,"td"),s.xc(54,"The 'aria-labelledby' attribute takes precedence as the element's text alternative."),s.Qb(),s.Qb(),s.Rb(55,"tr"),s.Rb(56,"td"),s.xc(57,"indeterminate: boolean"),s.Qb(),s.Rb(58,"td"),s.xc(59,"Represent a checkbox with three states (e.g. a nested list of checkable items)."),s.Qb(),s.Qb(),s.Rb(60,"tr"),s.Rb(61,"td"),s.xc(62,"disabled: boolean"),s.Qb(),s.Rb(63,"td"),s.xc(64,"Disables the component."),s.Qb(),s.Qb(),s.Rb(65,"tr"),s.Rb(66,"td"),s.xc(67,"disableRipple: boolean"),s.Qb(),s.Rb(68,"td"),s.xc(69,"Whether ripple ink is disabled."),s.Qb(),s.Qb(),s.Rb(70,"tr"),s.Rb(71,"td"),s.xc(72,"indeterminateToChecked: boolean"),s.Qb(),s.Rb(73,"td"),s.xc(74,"Whether the checkbox should go to checked state or unchecked when toggled from indeterminate state."),s.Qb(),s.Qb(),s.Rb(75,"tr"),s.Rb(76,"td"),s.xc(77,"touch: boolean"),s.Qb(),s.Rb(78,"td"),s.xc(79,"Set the component touch target to 48 x 48 px."),s.Qb(),s.Qb(),s.Qb(),s.Qb(),s.Rb(80,"h4",3),s.xc(81,"Methods"),s.Qb(),s.Rb(82,"table"),s.Rb(83,"tbody"),s.Rb(84,"tr"),s.Rb(85,"td"),s.xc(86,"focus()"),s.Qb(),s.Rb(87,"td"),s.xc(88,"Set focus to the checkbox."),s.Qb(),s.Qb(),s.Rb(89,"tr"),s.Rb(90,"td"),s.xc(91,"toggle(checked?: boolean)"),s.Qb(),s.Rb(92,"td"),s.xc(93,"Toggles checkbox via user action. When it is indeterminate, toggle can go to checked or unchecked, depending on state."),s.Qb(),s.Qb(),s.Qb(),s.Qb(),s.Rb(94,"h4",3),s.xc(95,"Events"),s.Qb(),s.Rb(96,"table"),s.Rb(97,"tbody"),s.Rb(98,"tr"),s.Rb(99,"td"),s.xc(100,"change(source: MdcCheckBox, checked: boolean)"),s.Qb(),s.Rb(101,"td"),s.xc(102,"Event dispatched on checked change."),s.Qb(),s.Qb(),s.Rb(103,"tr"),s.Rb(104,"td"),s.xc(105,"indeterminateChange(source: MdcCheckbox, indeterminate: boolean)"),s.Qb(),s.Rb(106,"td"),s.xc(107,"Emit when checkbox goes in and out of indeterminate state, but not when set to checked."),s.Qb(),s.Qb(),s.Qb(),s.Qb(),s.Qb())},directives:[m.i,m.l],encapsulation:2}),o),f=((b=function e(){_classCallCheck(this,e)}).\u0275fac=function(e){return new(e||b)},b.\u0275cmp=s.Fb({type:b,selectors:[["ng-component"]],decls:31,vars:0,consts:[[1,"docs-api"],["mdcSubtitle2",""]],template:function(e,c){1&e&&(s.Rb(0,"div",0),s.Rb(1,"h4",1),s.xc(2,"Sass Mixins"),s.Qb(),s.Rb(3,"p"),s.xc(4," The following mixins apply only to enabled checkboxes. It is not currently possible to customize the color of a disabled checkbox. "),s.Qb(),s.Rb(5,"table"),s.Rb(6,"thead"),s.Rb(7,"tr"),s.Rb(8,"th"),s.xc(9,"Mixin"),s.Qb(),s.Rb(10,"th"),s.xc(11,"Description"),s.Qb(),s.Qb(),s.Qb(),s.Rb(12,"tbody"),s.Rb(13,"tr"),s.Rb(14,"td"),s.Rb(15,"code"),s.xc(16,"container-colors($unmarked-stroke-color, $unmarked-fill-color, $marked-stroke-color, $marked-fill-color, $generate-keyframes)"),s.Qb(),s.Qb(),s.Rb(17,"td"),s.xc(18,"Generates CSS classes to set and animate the stroke color and/or container fill color of a checkbox"),s.Qb(),s.Qb(),s.Rb(19,"tr"),s.Rb(20,"td"),s.Rb(21,"code"),s.xc(22,"ink-color($color)"),s.Qb(),s.Qb(),s.Rb(23,"td"),s.xc(24,"Sets the ink color of the checked and indeterminate icons"),s.Qb(),s.Qb(),s.Rb(25,"tr"),s.Rb(26,"td"),s.Rb(27,"code"),s.xc(28,"focus-indicator-color($color)"),s.Qb(),s.Qb(),s.Rb(29,"td"),s.xc(30,"Sets the color of the focus indicator"),s.Qb(),s.Qb(),s.Qb(),s.Qb(),s.Qb())},directives:[m.l],encapsulation:2}),b),Q=[{path:"",component:(a=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"ngOnInit",value:function(){this._componentViewer.template={title:"Checkbox",description:"Checkboxes allow the user to select one or more items from a set.",references:[{name:"Material Design guidelines: Checkbox",url:"https://material.io/design/components/selection-controls.html#checkboxes"},{name:"Material Components Web",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-checkbox/README.md"}],code:"import {MdcCheckboxModule} from '@angular-mdc/web';",sass:"@use '@material/checkbox/mdc-checkbox';\n@use '@material/checkbox';"}}}]),e}(),a.\u0275fac=function(e){return new(e||a)},a.\u0275cmp=s.Fb({type:a,selectors:[["ng-component"]],viewQuery:function(e,c){var t;1&e&&s.tc(r.a,!0),2&e&&s.nc(t=s.ac())&&(c._componentViewer=t.first)},decls:1,vars:0,template:function(e,c){1&e&&s.Mb(0,"component-viewer")},directives:[h.a],encapsulation:2}),a),children:[{path:"",redirectTo:"api"},{path:"api",component:R},{path:"sass",component:f},{path:"examples",component:(n=function(){function e(){_classCallCheck(this,e),this.exampleSimple={html:'<mdc-checkbox></mdc-checkbox>\n\n<mdc-checkbox checked></mdc-checkbox>\n\n<mdc-checkbox disabled></mdc-checkbox>\n\n<mdc-checkbox checked disabled></mdc-checkbox>\n\n<mdc-checkbox indeterminate></mdc-checkbox>\n\n<mdc-checkbox indeterminate indeterminateToChecked="false"></mdc-checkbox>'},this.exampleLabel={html:"<mdc-form-field>\n  <mdc-checkbox></mdc-checkbox>\n  <label>Label</label>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-checkbox disabled></mdc-checkbox>\n  <label>Disabled</label>\n</mdc-form-field>\n\n<mdc-form-field alignEnd>\n  <mdc-checkbox></mdc-checkbox>\n  <label>Label</label>\n</mdc-form-field>"},this.exampleDynamic={html:'<mdc-form-field #formField>\n  <mdc-checkbox #cb indeterminateToChecked (change)="onChange($event)"></mdc-checkbox>\n  <label>Checkbox value is {{cb.checked}}</label>\n</mdc-form-field>',ts:"import { MdcCheckbox, MdcCheckboxChange } from '@angular-mdc/web';\n\nonChange(event: MdcCheckboxChange) {\n  console.log(event.checked);\n}\n\ntoggle(cb: MdcCheckbox): void {\n  cb.toggle();\n}"},this.exampleTheme={html:'<mdc-form-field>\n  <mdc-checkbox class="demo-checkbox--custom-all"></mdc-checkbox>\n  <label>Custom Stroke/Fill/Ink</label>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-checkbox class="demo-checkbox--custom-stroke-and-fill"></mdc-checkbox>\n  <label>Custom Stroke and Fill</label>\n</mdc-form-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_checkbox.scss"},this.exampleAccessibility={html:'<div class="mdc-touch-target-wrapper">\n  <mdc-form-field>\n    <mdc-checkbox touch></mdc-checkbox>\n    <label>My Accessible Checkbox</label>\n  </mdc-form-field>\n</div>'}}return _createClass(e,[{key:"onChange",value:function(e){console.log(e.checked)}},{key:"toggle",value:function(e){e.toggle()}}]),e}(),n.\u0275fac=function(e){return new(e||n)},n.\u0275cmp=s.Fb({type:n,selectors:[["ng-component"]],decls:77,vars:10,consts:[[1,"demo-content"],["checked",""],["disabled",""],["checked","","disabled",""],["indeterminate",""],["indeterminate","","indeterminateToChecked","false"],[3,"example"],[1,"demo-layout__column"],[1,"demo-container"],["alignEnd",""],[1,"demo-layout__row"],["mdc-button","",3,"click"],["formField",""],["indeterminateToChecked","",3,"change"],["cb",""],[1,"demo-content__headline"],[1,"demo-checkbox--custom-all"],[1,"demo-checkbox--custom-stroke-and-fill"],[1,"mdc-touch-target-wrapper"],["touch",""]],template:function(e,c){if(1&e){var t=s.Sb();s.Rb(0,"div",0),s.Mb(1,"mdc-checkbox"),s.Mb(2,"mdc-checkbox",1),s.Mb(3,"mdc-checkbox",2),s.Mb(4,"mdc-checkbox",3),s.Mb(5,"mdc-checkbox",4),s.Mb(6,"mdc-checkbox",5),s.Mb(7,"example-viewer",6),s.Qb(),s.Rb(8,"div",0),s.Rb(9,"div",7),s.Rb(10,"div",8),s.Rb(11,"mdc-form-field"),s.Mb(12,"mdc-checkbox"),s.Rb(13,"label"),s.xc(14,"Label"),s.Qb(),s.Qb(),s.Qb(),s.Rb(15,"div",8),s.Rb(16,"mdc-form-field"),s.Mb(17,"mdc-checkbox",2),s.Rb(18,"label"),s.xc(19,"Disabled"),s.Qb(),s.Qb(),s.Qb(),s.Rb(20,"div",8),s.Rb(21,"mdc-form-field",9),s.Mb(22,"mdc-checkbox"),s.Rb(23,"label"),s.xc(24,"Label (RTL)"),s.Qb(),s.Qb(),s.Qb(),s.Qb(),s.Mb(25,"example-viewer",6),s.Qb(),s.Rb(26,"div",0),s.Rb(27,"div",10),s.Rb(28,"button",11),s.Zb("click",(function(e){return s.pc(t),s.oc(44).indeterminate=!0})),s.xc(29,"Indeterminate"),s.Qb(),s.Rb(30,"button",11),s.Zb("click",(function(e){s.pc(t);var b=s.oc(44);return c.toggle(b)})),s.xc(31,"Toggle"),s.Qb(),s.Qb(),s.Rb(32,"div",10),s.Rb(33,"button",11),s.Zb("click",(function(e){s.pc(t);var c=s.oc(44);return c.indeterminateToChecked=!c.indeterminateToChecked})),s.xc(34),s.Qb(),s.Rb(35,"button",11),s.Zb("click",(function(e){s.pc(t);var c=s.oc(42);return c.alignEnd=!c.alignEnd})),s.xc(36),s.Qb(),s.Rb(37,"button",11),s.Zb("click",(function(e){s.pc(t);var c=s.oc(44);return c.disabled=!c.disabled})),s.xc(38),s.Qb(),s.Rb(39,"button",11),s.Zb("click",(function(e){s.pc(t);var c=s.oc(44);return c.disableRipple=!c.disableRipple})),s.xc(40),s.Qb(),s.Qb(),s.Rb(41,"mdc-form-field",null,12),s.Rb(43,"mdc-checkbox",13,14),s.Zb("change",(function(e){return c.onChange(e)})),s.Qb(),s.Rb(45,"label"),s.xc(46),s.Qb(),s.Qb(),s.Mb(47,"example-viewer",6),s.Qb(),s.Rb(48,"div",0),s.Rb(49,"h3",15),s.xc(50,"Theme"),s.Qb(),s.Rb(51,"div",7),s.Rb(52,"div",8),s.Rb(53,"mdc-form-field"),s.Mb(54,"mdc-checkbox",16),s.Rb(55,"label"),s.xc(56,"Custom Stroke/Fill/Ink"),s.Qb(),s.Qb(),s.Qb(),s.Rb(57,"div",8),s.Rb(58,"mdc-form-field"),s.Mb(59,"mdc-checkbox",17),s.Rb(60,"label"),s.xc(61,"Custom Stroke and Fill"),s.Qb(),s.Qb(),s.Qb(),s.Qb(),s.Mb(62,"example-viewer",6),s.Qb(),s.Rb(63,"div",0),s.Rb(64,"h3",15),s.xc(65,"Accessibility"),s.Qb(),s.Rb(66,"p"),s.xc(67," Material Design spec advises that touch targets should be at least 48 x 48 px. To meet this requirement, add the `touch` property. "),s.Qb(),s.Rb(68,"p"),s.xc(69," Note that the outer mdc-touch-target-wrapper element is only necessary if you want to avoid potentially overlapping touch targets on adjacent elements (due to collapsing margins). "),s.Qb(),s.Rb(70,"div",10),s.Rb(71,"div",18),s.Rb(72,"mdc-form-field"),s.Mb(73,"mdc-checkbox",19),s.Rb(74,"label"),s.xc(75,"My Accessible Checkbox"),s.Qb(),s.Qb(),s.Qb(),s.Qb(),s.Mb(76,"example-viewer",6),s.Qb()}if(2&e){var b=s.oc(42),o=s.oc(44);s.Bb(7),s.ic("example",c.exampleSimple),s.Bb(18),s.ic("example",c.exampleLabel),s.Bb(9),s.zc(" Indeterminate To Checked: ",o.indeterminateToChecked?"On":"Off",""),s.Bb(2),s.zc("RTL: ",b.alignEnd?"On":"Off",""),s.Bb(2),s.zc("Disabled: ",o.disabled?"On":"Off",""),s.Bb(2),s.zc("Ripple: ",o.disableRipple?"Off":"On",""),s.Bb(6),s.zc("Checkbox value is ",o.checked,""),s.Bb(1),s.ic("example",c.exampleDynamic),s.Bb(15),s.ic("example",c.exampleTheme),s.Bb(14),s.ic("example",c.exampleAccessibility)}},directives:[x.a,k.a,u.a,p.a],encapsulation:2}),n)}]}],g=((i=function e(){_classCallCheck(this,e)}).\u0275mod=s.Jb({type:i}),i.\u0275inj=s.Ib({factory:function(e){return new(e||i)},imports:[[l.e.forChild(Q)],l.e]}),i);t.d(c,"CheckboxModule",(function(){return C}));var v,C=((v=function e(){_classCallCheck(this,e)}).\u0275mod=s.Jb({type:v}),v.\u0275inj=s.Ib({factory:function(e){return new(e||v)},imports:[[d.a,g]]}),v)}}]);