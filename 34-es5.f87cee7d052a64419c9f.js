function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{WxHU:function(e,t,n){"use strict";n.r(t),n.d(t,"TextFieldModule",(function(){return L}));var i=n("d2mR"),l=n("tyNb"),r=n("3Pt+"),a=n("AytR"),d=n("leug"),o=n("fXoL"),m=n("LuDt"),c=n("w0pw"),s=n("U/DG"),b=n("jhN1"),u=n("9UYg"),p=n("6D23"),f=n("OA+s"),x=n("dkiD"),h=n("4G1d"),v=n("ofXK"),g=n("Nwyg"),y=n("o085"),w=n("xBmo"),R=n("o/N6");function Q(e,t){1&e&&(o.Rb(0,"span"),o.wc(1,"Username is required"),o.Qb())}function T(e,t){1&e&&(o.Rb(0,"span"),o.wc(1,"Username is not long enough"),o.Qb())}function M(e,t){1&e&&(o.Rb(0,"span"),o.wc(1,"Username is max length is 11"),o.Qb())}function F(e,t){1&e&&(o.Rb(0,"span"),o.wc(1,"Weight is required"),o.Qb())}function C(e,t){1&e&&(o.Rb(0,"span"),o.wc(1,"Field is required"),o.Qb())}var S,k,B,I,E,q=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"isErrorState",value:function(e,t){return!!(e&&e.invalid&&(e.dirty||e.touched||t&&t.submitted))}}]),e}(),D=((k=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"ngOnInit",value:function(){this._componentViewer.template={title:"Text Field",description:"Text fields let users enter and edit text.",references:[{name:"Material Design guidelines: Text Fields",url:"https://material.io/design/components/text-fields.html"},{name:"Material Components Web",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-textfield/README.md"}],mdcUrls:[{name:"Sass Mixins",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-textfield/README.md#sass-mixins"},{name:"Character Counter Mixins",url:"https://github.com/material-components/material-components-web/tree/master/packages/mdc-textfield/character-counter#sass-mixins"},{name:"Helper Text Mixins",url:"https://github.com/material-components/material-components-web/tree/master/packages/mdc-textfield/helper-text#sass-mixins"},{name:"Icon Mixins",url:"https://github.com/material-components/material-components-web/tree/master/packages/mdc-textfield/icon#sass-mixins"}],code:"import {MdcTextFieldModule} from '@angular-mdc/web/textfield';",sass:"@use '@material/textfield/mdc-text-field';\n@use '@material/textfield';\n@use '@material/form-field/mdc-form-field';"}}}]),e}()).\u0275fac=function(e){return new(e||k)},k.\u0275cmp=o.Fb({type:k,selectors:[["ng-component"]],viewQuery:function(e,t){var n;1&e&&o.tc(d.b,!0),2&e&&o.nc(n=o.ac())&&(t._componentViewer=n.first)},decls:1,vars:0,template:function(e,t){1&e&&o.Mb(0,"component-viewer")},directives:[m.a],encapsulation:2}),k),O=((S=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"ngOnInit",value:function(){this._componentApi.docApi={sections:[{header:"MdcTextField",selectors:["mdc-text-field"],exportedAs:"mdcTextField",categories:[{name:"Properties",items:[{name:"id: string",summary:"Unique id of the element."},{name:"type: string = 'text'",summary:"Input type of textfield (e.g.: email, password, date, color)."},{name:"name: string",summary:"Name of the textfield."},{name:"label: string",summary:"Shown to the user when there's no focus or values."},{name:"value: string",summary:"The input element's value."},{name:"outlined: boolean",summary:"Set a border around all sides of the text field."},{name:"fullwidth: boolean",summary:"Set to fullwidth textfield. Do not use outlined to style a full width text field."},{name:"disabled: boolean",summary:"Disables the component."},{name:"prefix: string",summary:"Gets or sets the text content of the prefix, if it exists."},{name:"suffix: string",summary:"Gets or sets the text content of the suffix, if it exists."},{name:"readonly: boolean",summary:"Whether or not the textfield value is editable."},{name:"required: boolean",summary:"Whether the element is required."},{name:"characterCounter: boolean",summary:"Character counter is used if there is a character limit. It displays the ratio of characters used and the total character limit.\n                maxlength is required on MdcTextField."},{name:"useNativeValidation: boolean",summary:"Sets whether to check native HTML validity state (true, default) or custom validity state when updating styles (false)."},{name:"valid: boolean",summary:"Updates input validity styling using passed value."},{name:"empty: boolean",summary:"Returns whether the control is empty."},{name:"endAligned: boolean",summary:"Styles the text field with an end-aligned input."},{name:"ltrText: boolean",summary:"Styles the text field's text elements (input, prefix, and suffix) as LTR even when the direction is RTL. Useful for RTL languages that use LTR for fractional notations."},{name:"inputmode: string",summary:"Provides a hint to browsers for devices with onscreen keyboards to help them decide which keyboard to display.\n                'verbatim' | 'latin' | 'latin-name' | 'latin-prose' | 'full-width-latin' | 'kana' | 'kana-name' | 'katakana' | 'numeric' | 'tel' | 'email' | 'url'"},{name:"autocomplete: string",summary:"Indicates if the input can be automatically completed by the browser, usually by remembering previous values the user has entered."},{name:"tabIndex: number",summary:"Tab index of the text element."},{name:"pattern: string",summary:"Regular expression that the control's value is checked against."},{name:"maxlength: number",summary:"Maxlength of characters allowed to be entered."},{name:"minlength: number",summary:"Specifies the minimum number of characters that the user can enter."},{name:"max: number",summary:"The maximum numeric value for the input."},{name:"min: number",summary:"The minimum numeric value for this input, which must not be greater than its maximum (max attribute) value."},{name:"step: number",summary:"Works with the min and max attributes to limit the increments at which a numeric or date-time value can be set."},{name:"size: number",summary:"The initial size of the control."},{name:"helperText: MdcHelperText",summary:"Reference to related MdcHelperText"}]},{name:"Methods",items:[{name:"focus()",summary:"Sets focus to the input."}]},{name:"Events",items:[{name:"change(value)",summary:"Emitted when an alteration to the element value is committed."},{name:"blur(value)",summary:"Emitted whenever the input loses focus."},{name:"input(value)",summary:"Emitted synchronously when the value has been altered."},{name:"focus(boolean)",summary:"Emitted when the input gains or loses focus."}]}]},{header:"MdcHelperText",selectors:["mdc-helper-text","mdcHelperText"],exportedAs:"mdcHelperText",categories:[{name:"Properties",items:[{name:"validation: boolean",summary:"Help text can be used to provide additional validation messages."},{name:"persistent: boolean",summary:"Help text will always be visible."}]},{name:"Methods",items:[{name:"showToScreenReader()",summary:"Makes the helper text visible to the screen reader."},{name:"setValidity(inputIsValid: boolean)",summary:"Sets the validity of the helper text."}]}]},{header:"MdcTextFieldIcon",selectors:["mdc-icon[mdcTextFieldIcon]"],exportedAs:"mdcTextFieldIcon",categories:[{name:"Properties",items:[{name:"leading: boolean",summary:"Styles the text field as a text field with a leading icon."},{name:"trailing: boolean\t",summary:"Styles the text field as a text field with a trailing icon."}]}]},{header:"MdcTextarea",summary:"Same properties, methods and events as MdcTextField",selectors:["mdc-textarea"],exportedAs:"mdcTextarea",categories:[{name:"Properties",items:[{name:"rows: number",summary:"Number of rows for this textarea."},{name:"cols: number",summary:"Number of columns for this textarea."},{name:"characterCounter: boolean",summary:"Character counter is used if there is a character limit. It displays the ratio of characters used and the total character limit.\n                maxlength is required on MdcTextArea."}]}]},{header:"MDC_TEXT_FIELD_DEFAULT_OPTIONS",summary:"Injection token that can be used to configure the default options for all text fields within an app.",summaryCode:"const MDC_TEXT_FIELD_DEFAULT_OPTIONS:\n  InjectionToken<MdcTextFieldDefaultOptions>;"}]}}}]),e}()).\u0275fac=function(e){return new(e||S)},S.\u0275cmp=o.Fb({type:S,selectors:[["ng-component"]],viewQuery:function(e,t){var n;1&e&&o.tc(d.a,!0),2&e&&o.nc(n=o.ac())&&(t._componentApi=n.first)},decls:1,vars:0,template:function(e,t){1&e&&o.Mb(0,"component-api")},directives:[c.a],encapsulation:2}),S),V=function e(){_classCallCheck(this,e)},_=[{path:"",component:D,children:[{path:"",redirectTo:"api"},{path:"api",component:O},{path:"examples",component:(B=function(){function e(t,n){_classCallCheck(this,e),this.demoForm=new r.d({username:new r.b({value:null,disabled:!1},[r.p.required,r.p.minLength(3),r.p.maxLength(11)])}),this.matcher=new q,this.waypoint=new V,this.prefilledText="Prefilled",this.inputEvent="",this.changeEvent="",this.focusEvent=!1,this.exampleStandard={html:'<mdc-text-field label="Standard"\n  name="txt-field-standard"\n  required\n  [helperText]="standardHelper"></mdc-text-field>\n<mdc-helper-text #standardHelper validation persistent>Helper Text</mdc-helper-text>'},this.exampleEvents={html:'<mdc-text-field label="Standard"\n  (input)="onInput($event)"\n  (focus)="onFocus($event)"\n  (change)="onChange($event)"></mdc-text-field>',ts:"onInput(value: any): void {\n  this.inputEvent = value;\n}\n\nonInput(value: any): void {\n  // do something\n}\n\nonChange(value: any): void {\n  // do something\n}\n\nonFocus(focused: boolean): void {\n  // do something\n}"},this.exampleReactive={html:'<form [formGroup]="demoForm" (ngSubmit)="submit(demoForm)" #formDirective="ngForm">\n  <mdc-form-field>\n    <mdc-text-field formControlName="username" label="Username" outlined\n      [errorStateMatcher]="matcher"></mdc-text-field>\n    <mdc-helper-text validation>\n      <span *ngIf="demoForm.controls[\'username\'].hasError(\'required\')">Username is required</span>\n      <span *ngIf="demoForm.controls[\'username\'].hasError(\'minlength\')">Username is not long enough</span>\n      <span *ngIf="demoForm.controls[\'username\'].hasError(\'maxlength\')">Username is max length is 11</span>\n    </mdc-helper-text>\n  </mdc-form-field>\n  <div class="demo-layout__row">\n    <button mdc-button type="submit">Submit</button>\n    <button mdc-button type="button" (click)="resetForm(formDirective)">Reset</button>\n    <button mdc-button type="button" (click)="demoForm.controls[\'username\'].setValue(\'User-1\')">Set Value</button>\n  </div>\n</form>\n\n<p>Control Valid: {{demoForm.controls[\'username\'].valid}}</p>\n<p>Dirty: {{ demoForm.dirty }}</p>\n<p>Valid: {{ demoForm.valid }}</p>\n<p>Pristine: {{ demoForm.pristine }}</p>\n<p>Touched: {{ demoForm.touched }}</p>\n<p>Value: {{ demoForm.value | json }}</p>',ts:"/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\nmatcher = new MyErrorStateMatcher();\n\ndemoForm = new FormGroup({\n  username: new FormControl(\n    { value: null, disabled: false },\n    [\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(11)\n    ])\n});\n\nsubmit(f: NgForm | FormGroup) {\n  if (f.invalid) {\n    return;\n  }\n}\n\nresetForm(formDirective: FormGroupDirective) {\n  formDirective.resetForm();\n  this.demoForm.reset();\n}"},this.exampleNumericNgModel={html:'<form #demoWeightForm="ngForm" id="demoWeightForm" (ngSubmit)="submit(demoWeightForm)">\n  <mdc-form-field>\n    <mdc-text-field type="number" name="demoweight" label="Weight" ngModel #demoWeightModel="ngModel"\n      required></mdc-text-field>\n    <mdc-helper-text validation>\n      <span *ngIf="!demoweight?.value">Weight is required</span>\n    </mdc-helper-text>\n  </mdc-form-field>\n</form>\n\n<button mdc-button type="submit" form="demoWeightForm">Submit</button>\n<button mdc-button (click)="demoWeightForm.reset()">Reset</button>\n\n<p>Dirty: {{ demoWeightModel.dirty }}</p>\n<p>Valid: {{ demoWeightForm.valid }}</p>\n<p>Pristine: {{ demoWeightForm.pristine }}</p>\n<p>Touched: {{ demoWeightModel.touched }}</p>\n<p>Value: {{ demoWeightModel.value }}</p>'},this.exampleUsingValue={html:'<mdc-form-field>\n  <mdc-text-field #demoValue label="Enter value" [value]="demoInputValue" required></mdc-text-field>\n  <mdc-helper-text validation>\n    <span *ngIf="!demoValue?.value">Field is required</span>\n  </mdc-helper-text>\n</mdc-form-field>\n\n<button mdc-button (click)="demoValue.value = null">Reset value</button>\n\n<p>Value: {{demoValue.value}}</p>',ts:"demoInputValue: string;"},this.exampleDensity={html:'<mdc-text-field class="demo-density-text-field" label="Density"></mdc-text-field>\n<mdc-text-field class="demo-density-outlined-text-field" outlined label="Density"></mdc-text-field>\n<mdc-text-field class="demo-density-outlined-text-field-with-leading-icon" outlined label="Event date">\n  <mdc-icon mdcTextFieldIcon leading>event</mdc-icon>\n</mdc-text-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleIcons={html:'<mdc-text-field autocomplete="tel" type="tel" label="Phone number">\n  <mdc-icon mdcTextFieldIcon leading>phone</mdc-icon>\n  <mdc-icon mdcTextFieldIcon trailing>event</mdc-icon>\n</mdc-text-field>\n<mdc-text-field type="date" outlined label="Event date">\n  <mdc-icon mdcTextFieldIcon leading>event</mdc-icon>\n</mdc-text-field>\n<mdc-text-field type="date" outlined label="Event date">\n  <button mdc-icon-button mdcTextFieldIcon trailing icon="event"></button>\n</mdc-text-field>\n<mdc-text-field disabled label="Disabled">\n  <mdc-icon mdcTextFieldIcon leading>event</mdc-icon>\n</mdc-text-field>'},this.examplePrefixSuffix={html:'<mdc-text-field label="Currency Value" type="number" prefix="$" suffix=".00"></mdc-text-field>\n<mdc-text-field outlined label="Currency Value" type="number" prefix="$" suffix=".00"></mdc-text-field>\n<mdc-text-field outlined type="number" prefix="$" suffix=".00" endAligned></mdc-text-field>\n\n<div dir="rtl">\n  <mdc-text-field outlined label="Label" type="number"\n    suffix="/100" ltrText></mdc-text-field>\n</div>'},this.exampleSvgIcon={html:'<mdc-text-field outlined label="Svg icon">\n  <mdc-icon mdcTextFieldIcon leading svgIcon="thumbup" class="temporary-workaround-for-text-field-svg"></mdc-icon>\n</mdc-text-field>',ts:"import { DomSanitizer } from '@angular/platform-browser';\nimport { MdcIconRegistry } from '@angular-mdc/web';\n\nconstructor(iconRegistry: MdcIconRegistry, sanitizer: DomSanitizer) {\n  iconRegistry.addSvgIcon(\n    'thumbup', sanitizer.bypassSecurityTrustResourceUrl('/assets/thumbup-icon.svg'));\n}",sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleShape={html:'<mdc-text-field label="Standard" required class="demo-text-field-custom-colors"></mdc-text-field>\n\n<mdc-text-field label="Standard" class="demo-shaped-text-field"></mdc-text-field>\n\n<mdc-text-field label="Standard" outlined class="demo-shaped-text-field--outline"></mdc-text-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleNumeric={html:'<mdc-text-field type="number" label="Distance" [(ngModel)]="waypoint.dt"></mdc-text-field>\n\n<p>Model: {{waypoint | json}}</p>',ts:"class Directions {\n  dt: number;\n}\n\nwaypoint = new Directions();"},this.examplePrefilled={html:'<mdc-text-field [(ngModel)]="prefilledText" label="Username"></mdc-text-field>',ts:"prefilledText: string = 'Prefilled';"},this.exampleDateTime={html:'<mdc-text-field type="date" label="Birthday"></mdc-text-field>\n\n<mdc-text-field type="time" label="Time"></mdc-text-field>\n\n<mdc-text-field type="password" label="Password" required outlined></mdc-text-field>\n\n<mdc-text-field type="color" label="Color"></mdc-text-field>'},this.exampleRtl={html:'<mdc-form-field dir="rtl">\n  <mdc-text-field outlined label="Standard">\n    <mdc-icon mdcTextFieldIcon leading>phone</mdc-icon>\n  </mdc-text-field>\n</mdc-form-field>'},this.exampleFullWithSingleLine={html:'<mdc-text-field label="Subject" fullwidth></mdc-text-field>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleNoLabel={html:'<mdc-form-field>\n  <mdc-text-field></mdc-text-field>\n  <mdc-helper-text persistent>Helper Text</mdc-helper-text>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-text-field outlined></mdc-text-field>\n  <mdc-helper-text persistent>Helper Text</mdc-helper-text>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-text-field outlined class="demo-shaped-text-field--outline"></mdc-text-field>\n  <mdc-helper-text persistent>Helper Text</mdc-helper-text>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-text-field outlined required></mdc-text-field>\n  <mdc-helper-text validation>Required with no label</mdc-helper-text>\n</mdc-form-field>\n',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleCharacterCounter={html:'<mdc-form-field>\n  <mdc-text-field label="Standard" characterCounter maxlength="10">\n  </mdc-text-field>\n  <mdc-helper-text></mdc-helper-text>\n</mdc-form-field>\n\n<mdc-form-field>\n  <mdc-text-field outlined characterCounter label="Standard" maxlength="10">\n  </mdc-text-field>\n  <mdc-helper-text persistent>Helper Text\n  </mdc-helper-text>\n</mdc-form-field>'},this.exampleTACounter={html:'<mdc-textarea label="Comments" characterCounter maxlength="140"\n  [helperText]="taCounterHelper" rows="8" cols="40"></mdc-textarea>\n<mdc-helper-text #taCounterHelper validation>Helper Text</mdc-helper-text>'},this.exampleTextarea={html:'<mdc-textarea label="Comments" rows="8" cols="40" required [helperText]="commentsHelper"></mdc-textarea>\n<mdc-helper-text #commentsHelper validation>Helper Text</mdc-helper-text>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},this.exampleFullWidth={html:'<mdc-textarea label="Type your message here" fullwidth required rows="8"\n  [helperText]="fullWidthHelper"></mdc-textarea>\n<mdc-helper-text #fullWidthHelper validation>Helper Text</mdc-helper-text>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_text-field.scss"},t.addSvgIcon("thumbup",n.bypassSecurityTrustResourceUrl(a.a.production?"https://trimox.github.io/angular-mdc-web/assets/thumbup-icon.svg":"/assets/thumbup-icon.svg"))}return _createClass(e,[{key:"onInput",value:function(e){this.inputEvent=e}},{key:"onChange",value:function(e){this.changeEvent=e}},{key:"onFocus",value:function(e){this.focusEvent=e}},{key:"submit",value:function(e){}},{key:"resetForm",value:function(e){e.resetForm(),this.demoForm.reset()}},{key:"alternateColors",value:function(e){if(e.textarea)e.textarea?e.elementRef.nativeElement.classList.contains("demo-textarea")?e.elementRef.nativeElement.classList.remove("demo-textarea"):e.elementRef.nativeElement.classList.add("demo-textarea"):e.elementRef.nativeElement.classList.contains("demo-fullwidth-input")?e.elementRef.nativeElement.classList.remove("demo-fullwidth-input"):e.elementRef.nativeElement.classList.add("demo-fullwidth-input");else{var t="demo-text-field-custom-colors";e.elementRef.nativeElement.classList.contains(t)?e.elementRef.nativeElement.classList.remove(t):e.elementRef.nativeElement.classList.add(t)}}}]),e}(),B.\u0275fac=function(e){return new(e||B)(o.Lb(s.a),o.Lb(b.b))},B.\u0275cmp=o.Fb({type:B,selectors:[["ng-component"]],decls:302,vars:70,consts:[[1,"demo-content"],[1,"demo-layout__row"],["mdc-button","",3,"click"],["label","Standard","name","txt-field-standard","required","",3,"helperText"],["standard",""],["validation","","persistent",""],["standardHelper",""],[3,"example"],[1,"demo-content__headline"],["label","Standard",3,"input","focus","change"],["mdc-button","",3,"disabled","click"],[3,"formGroup","ngSubmit"],["formDirective","ngForm"],["formControlName","username","label","Username","outlined","",3,"errorStateMatcher"],["demoformInput",""],["validation",""],[4,"ngIf"],["mdc-button","","type","submit"],["mdc-button","","type","button",3,"click"],["id","demoWeightForm",3,"ngSubmit"],["demoWeightForm","ngForm"],["type","number","name","demoweight","label","Weight","ngModel","","required",""],["demoweight","","demoWeightModel","ngModel"],["mdc-button","","type","submit","form","demoWeightForm"],[1,"demo-container"],["label","Currency Value","type","number","prefix","$","suffix",".00"],["outlined","","label","Currency Value","type","number","prefix","$","suffix",".00"],["outlined","","type","number","prefix","$","suffix",".00","endAligned",""],["endAlignedExample",""],["dir","rtl"],["outlined","","label","Label","type","number","suffix","/100","ltrText",""],["ltrTextExample",""],["label","Standard","characterCounter","","maxlength","10"],["outlined","","characterCounter","","label","Standard","maxlength","10"],["persistent",""],["label","Comments","rows","8","cols","40","required","","maxlength","140","characterCounter","",3,"helperText"],["taCounterHelper",""],["outlined",""],["outlined","",1,"demo-shaped-text-field--outline"],["outlined","","required",""],["label","Enter value","required","",3,"value"],["demoValue",""],["autocomplete","tel","type","tel","label","Phone number"],["mdcTextFieldIcon","","leading",""],["mdcTextFieldIcon","","trailing",""],["type","date","outlined","","label","Event date"],["mdc-icon-button","","mdcTextFieldIcon","","trailing","","icon","event"],["disabled","","label","Disabled"],["outlined","","label","Svg icon"],["mdcTextFieldIcon","","leading","","svgIcon","thumbup",1,"temporary-workaround-for-text-field-svg"],["label","Density",1,"demo-density-text-field"],["outlined","","label","Density",1,"demo-density-outlined-text-field"],["outlined","","label","Event date",1,"demo-density-outlined-text-field-with-leading-icon"],["label","Standard","required","",1,"demo-text-field-custom-colors"],["label","Standard",1,"demo-shaped-text-field"],["label","Standard","outlined","",1,"demo-shaped-text-field--outline"],["type","number","label","Distance",3,"ngModel","ngModelChange"],["label","Username",3,"ngModel","ngModelChange"],["outlined","","label","Standard"],["type","date","label","Birthday"],["type","time","label","Time"],["type","password","label","Password","required","","outlined",""],["type","color","label","Color",2,"width","6rem"],["label","Subject","fullwidth",""],["demofullwidth",""],["label","Comments","rows","8","cols","40","required","",3,"helperText"],["comments",""],["commentsHelper",""],["label","Type your message here","fullwidth","","required","","rows","8",3,"helperText"],["demotextarea",""],["fullWidthHelper",""]],template:function(e,t){if(1&e){var n=o.Sb();o.Rb(0,"div",0),o.Rb(1,"div",1),o.Rb(2,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(11);return e.outlined=!e.outlined})),o.wc(3),o.Qb(),o.Rb(4,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(11);return e.required=!e.required})),o.wc(5),o.Qb(),o.Rb(6,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(11);return e.disabled=!e.disabled})),o.wc(7),o.Qb(),o.Rb(8,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(11);return e.readonly=!e.readonly})),o.wc(9),o.Qb(),o.Qb(),o.Mb(10,"mdc-text-field",3,4),o.Rb(12,"mdc-helper-text",5,6),o.wc(14,"Helper Text "),o.Qb(),o.Mb(15,"example-viewer",7),o.Qb(),o.Rb(16,"div",0),o.Rb(17,"h3",8),o.wc(18,"Input and Change events"),o.Qb(),o.Rb(19,"mdc-text-field",9),o.Zb("input",(function(e){return t.onInput(e)}))("focus",(function(e){return t.onFocus(e)}))("change",(function(e){return t.onChange(e)})),o.Qb(),o.Rb(20,"p"),o.wc(21),o.Qb(),o.Rb(22,"p"),o.wc(23),o.Qb(),o.Rb(24,"p"),o.wc(25),o.Qb(),o.Mb(26,"example-viewer",7),o.Qb(),o.Rb(27,"div",0),o.Rb(28,"h3",8),o.wc(29,"Reactive Form"),o.Qb(),o.Rb(30,"div",1),o.Rb(31,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(41);return e.outlined=!e.outlined})),o.wc(32),o.Qb(),o.Rb(33,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(41);return e.useNativeValidation=!e.useNativeValidation})),o.wc(34),o.Qb(),o.Rb(35,"button",10),o.Zb("click",(function(){return t.demoForm.controls.username.markAsTouched()})),o.wc(36,"Mark touched"),o.Qb(),o.Qb(),o.Rb(37,"form",11,12),o.Zb("ngSubmit",(function(){return t.submit(t.demoForm)})),o.Rb(39,"mdc-form-field"),o.Mb(40,"mdc-text-field",13,14),o.Rb(42,"mdc-helper-text",15),o.uc(43,Q,2,0,"span",16),o.uc(44,T,2,0,"span",16),o.uc(45,M,2,0,"span",16),o.Qb(),o.Qb(),o.Rb(46,"div",1),o.Rb(47,"button",17),o.wc(48,"Submit"),o.Qb(),o.Rb(49,"button",18),o.Zb("click",(function(){o.pc(n);var e=o.oc(38);return t.resetForm(e)})),o.wc(50,"Reset"),o.Qb(),o.Rb(51,"button",18),o.Zb("click",(function(){return t.demoForm.controls.username.setValue("User-1")})),o.wc(52,"Set Value"),o.Qb(),o.Qb(),o.Qb(),o.Rb(53,"p"),o.wc(54),o.Qb(),o.Rb(55,"p"),o.wc(56),o.Qb(),o.Rb(57,"p"),o.wc(58),o.Qb(),o.Rb(59,"p"),o.wc(60),o.Qb(),o.Rb(61,"p"),o.wc(62),o.Qb(),o.Rb(63,"p"),o.wc(64),o.ec(65,"json"),o.Qb(),o.Mb(66,"example-viewer",7),o.Qb(),o.Rb(67,"div",0),o.Rb(68,"h3",8),o.wc(69,"Numeric with ngModel Form"),o.Qb(),o.Rb(70,"div",1),o.Rb(71,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(77);return e.outlined=!e.outlined})),o.wc(72),o.Qb(),o.Qb(),o.Rb(73,"form",19,20),o.Zb("ngSubmit",(function(){o.pc(n);var e=o.oc(74);return t.submit(e)})),o.Rb(75,"mdc-form-field"),o.Mb(76,"mdc-text-field",21,22),o.Rb(79,"mdc-helper-text",15),o.uc(80,F,2,0,"span",16),o.Qb(),o.Qb(),o.Qb(),o.Rb(81,"div",1),o.Rb(82,"button",23),o.wc(83,"Submit"),o.Qb(),o.Rb(84,"button",2),o.Zb("click",(function(){return o.pc(n),o.oc(74).reset()})),o.wc(85,"Reset"),o.Qb(),o.Qb(),o.Rb(86,"p"),o.wc(87),o.Qb(),o.Rb(88,"p"),o.wc(89),o.Qb(),o.Rb(90,"p"),o.wc(91),o.Qb(),o.Rb(92,"p"),o.wc(93),o.Qb(),o.Rb(94,"p"),o.wc(95),o.Qb(),o.Mb(96,"example-viewer",7),o.Qb(),o.Rb(97,"div",0),o.Rb(98,"h3",8),o.wc(99,"Prefix and suffix text"),o.Qb(),o.Rb(100,"div",24),o.Mb(101,"mdc-text-field",25),o.Qb(),o.Rb(102,"div",24),o.Mb(103,"mdc-text-field",26),o.Qb(),o.Rb(104,"div",1),o.Rb(105,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(109);return e.endAligned=!e.endAligned})),o.wc(106),o.Qb(),o.Qb(),o.Rb(107,"div",24),o.Mb(108,"mdc-text-field",27,28),o.Qb(),o.Rb(110,"div",1),o.Rb(111,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(116);return e.ltrText=!e.ltrText})),o.wc(112),o.Qb(),o.Qb(),o.Rb(113,"div",24),o.Rb(114,"div",29),o.Mb(115,"mdc-text-field",30,31),o.Qb(),o.Qb(),o.Mb(117,"example-viewer",7),o.Qb(),o.Rb(118,"div",0),o.Rb(119,"h3",8),o.wc(120,"Character Counter"),o.Qb(),o.Rb(121,"div",1),o.Rb(122,"mdc-form-field"),o.Mb(123,"mdc-text-field",32),o.Mb(124,"mdc-helper-text"),o.Qb(),o.Rb(125,"mdc-form-field"),o.Mb(126,"mdc-text-field",33),o.Rb(127,"mdc-helper-text",34),o.wc(128,"Helper Text "),o.Qb(),o.Qb(),o.Qb(),o.Mb(129,"example-viewer",7),o.Qb(),o.Rb(130,"div",0),o.Rb(131,"h3",8),o.wc(132,"Textarea - Character Counter"),o.Qb(),o.Mb(133,"mdc-textarea",35),o.Rb(134,"mdc-helper-text",15,36),o.wc(136,"Helper Text"),o.Qb(),o.Mb(137,"example-viewer",7),o.Qb(),o.Rb(138,"div",0),o.Rb(139,"h3",8),o.wc(140,"No Label"),o.Qb(),o.Rb(141,"div",1),o.Rb(142,"mdc-form-field"),o.Mb(143,"mdc-text-field"),o.Rb(144,"mdc-helper-text",34),o.wc(145,"Helper Text "),o.Qb(),o.Qb(),o.Rb(146,"mdc-form-field"),o.Mb(147,"mdc-text-field",37),o.Rb(148,"mdc-helper-text",34),o.wc(149,"Helper Text "),o.Qb(),o.Qb(),o.Rb(150,"mdc-form-field"),o.Mb(151,"mdc-text-field",38),o.Rb(152,"mdc-helper-text",34),o.wc(153,"Helper Text "),o.Qb(),o.Qb(),o.Qb(),o.Rb(154,"mdc-form-field"),o.Mb(155,"mdc-text-field",39),o.Rb(156,"mdc-helper-text",15),o.wc(157,"Required with no label "),o.Qb(),o.Qb(),o.Mb(158,"example-viewer",7),o.Qb(),o.Rb(159,"div",0),o.Rb(160,"h3",8),o.wc(161,"Using [value]"),o.Qb(),o.Rb(162,"div",1),o.Rb(163,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(167);return e.required=!e.required})),o.wc(164),o.Qb(),o.Qb(),o.Rb(165,"mdc-form-field"),o.Mb(166,"mdc-text-field",40,41),o.Rb(168,"mdc-helper-text",15),o.uc(169,C,2,0,"span",16),o.Qb(),o.Qb(),o.Rb(170,"div",1),o.Rb(171,"button",2),o.Zb("click",(function(){return o.pc(n),o.oc(167).value=null})),o.wc(172,"Reset value"),o.Qb(),o.Qb(),o.Rb(173,"p"),o.wc(174),o.Qb(),o.Mb(175,"example-viewer",7),o.Qb(),o.Rb(176,"div",0),o.Rb(177,"h3",8),o.wc(178,"Leading and Trailing Icons"),o.Qb(),o.Rb(179,"div",24),o.Rb(180,"mdc-text-field",42),o.Rb(181,"mdc-icon",43),o.wc(182,"phone"),o.Qb(),o.Rb(183,"mdc-icon",44),o.wc(184,"event"),o.Qb(),o.Qb(),o.Qb(),o.Rb(185,"div",24),o.Rb(186,"mdc-text-field",45),o.Rb(187,"mdc-icon",43),o.wc(188,"event"),o.Qb(),o.Qb(),o.Qb(),o.Rb(189,"div",24),o.Rb(190,"mdc-text-field",45),o.Mb(191,"button",46),o.Qb(),o.Qb(),o.Rb(192,"div",24),o.Rb(193,"mdc-text-field",47),o.Rb(194,"mdc-icon",43),o.wc(195,"event"),o.Qb(),o.Qb(),o.Qb(),o.Mb(196,"example-viewer",7),o.Qb(),o.Rb(197,"div",0),o.Rb(198,"h3",8),o.wc(199,"Svg Icon"),o.Qb(),o.Rb(200,"div",24),o.Rb(201,"mdc-text-field",48),o.Mb(202,"mdc-icon",49),o.Qb(),o.Qb(),o.Mb(203,"example-viewer",7),o.Qb(),o.Rb(204,"div",0),o.Rb(205,"h3",8),o.wc(206,"Density"),o.Qb(),o.Rb(207,"div",24),o.Mb(208,"mdc-text-field",50),o.Qb(),o.Rb(209,"div",24),o.Mb(210,"mdc-text-field",51),o.Qb(),o.Rb(211,"div",24),o.Rb(212,"mdc-text-field",52),o.Rb(213,"mdc-icon",43),o.wc(214,"event"),o.Qb(),o.Qb(),o.Qb(),o.Mb(215,"example-viewer",7),o.Qb(),o.Rb(216,"div",0),o.Rb(217,"h3",8),o.wc(218,"Shape"),o.Qb(),o.Rb(219,"div",24),o.Mb(220,"mdc-text-field",53),o.Qb(),o.Rb(221,"div",24),o.Mb(222,"mdc-text-field",54),o.Qb(),o.Rb(223,"div",24),o.Mb(224,"mdc-text-field",55),o.Qb(),o.Mb(225,"example-viewer",7),o.Qb(),o.Rb(226,"div",0),o.Rb(227,"h3",8),o.wc(228,"Numeric with ngModel"),o.Qb(),o.Rb(229,"mdc-text-field",56),o.Zb("ngModelChange",(function(e){return t.waypoint.dt=e})),o.Qb(),o.Rb(230,"p"),o.wc(231),o.ec(232,"json"),o.Qb(),o.Mb(233,"example-viewer",7),o.Qb(),o.Rb(234,"div",0),o.Rb(235,"h3",8),o.wc(236,"Prefilled via ngModel"),o.Qb(),o.Rb(237,"mdc-text-field",57),o.Zb("ngModelChange",(function(e){return t.prefilledText=e})),o.Qb(),o.Rb(238,"p"),o.wc(239),o.Mb(240,"example-viewer",7),o.Qb(),o.Qb(),o.Rb(241,"div",0),o.Rb(242,"h3",8),o.wc(243,"RTL"),o.Qb(),o.Rb(244,"mdc-form-field",29),o.Rb(245,"mdc-text-field",58),o.Rb(246,"mdc-icon",43),o.wc(247,"phone"),o.Qb(),o.Qb(),o.Qb(),o.Mb(248,"example-viewer",7),o.Qb(),o.Rb(249,"div",0),o.Rb(250,"h3",8),o.wc(251,"Date / Time / Color / Password"),o.Qb(),o.Rb(252,"div",24),o.Mb(253,"mdc-text-field",59),o.Qb(),o.Rb(254,"div",24),o.Mb(255,"mdc-text-field",60),o.Qb(),o.Rb(256,"div",24),o.Mb(257,"mdc-text-field",61),o.Qb(),o.Rb(258,"div",24),o.Mb(259,"mdc-text-field",62),o.Qb(),o.Mb(260,"example-viewer",7),o.Qb(),o.Rb(261,"div",0),o.Rb(262,"h3",8),o.wc(263,"Full Width"),o.Qb(),o.Rb(264,"div",1),o.Rb(265,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(268);return t.alternateColors(e)})),o.wc(266,"Alternate Colors"),o.Qb(),o.Qb(),o.Mb(267,"mdc-text-field",63,64),o.Mb(269,"example-viewer",7),o.Qb(),o.Rb(270,"div",0),o.Rb(271,"h3",8),o.wc(272,"Textarea"),o.Qb(),o.Rb(273,"div",1),o.Rb(274,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(281);return e.disabled=!e.disabled})),o.wc(275),o.Qb(),o.Rb(276,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(281);return e.required=!e.required})),o.wc(277),o.Qb(),o.Rb(278,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(281);return t.alternateColors(e)})),o.wc(279,"Alternate Colors"),o.Qb(),o.Qb(),o.Mb(280,"mdc-textarea",65,66),o.Rb(282,"mdc-helper-text",15,67),o.wc(284,"Helper Text"),o.Qb(),o.Mb(285,"example-viewer",7),o.Qb(),o.Rb(286,"div",0),o.Rb(287,"h3",8),o.wc(288,"Full Width Textarea"),o.Qb(),o.Rb(289,"div",1),o.Rb(290,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(297);return e.disabled=!e.disabled})),o.wc(291),o.Qb(),o.Rb(292,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(297);return e.required=!e.required})),o.wc(293),o.Qb(),o.Rb(294,"button",2),o.Zb("click",(function(){o.pc(n);var e=o.oc(297);return t.alternateColors(e)})),o.wc(295,"Alternate Colors"),o.Qb(),o.Qb(),o.Mb(296,"mdc-textarea",68,69),o.Rb(298,"mdc-helper-text",15,70),o.wc(300,"Helper Text"),o.Qb(),o.Mb(301,"example-viewer",7),o.Qb()}if(2&e){var i=o.oc(11),l=o.oc(13),r=o.oc(41),a=o.oc(74),d=o.oc(77),m=o.oc(78),c=o.oc(109),s=o.oc(116),b=o.oc(135),u=o.oc(167),p=o.oc(281),f=o.oc(283),x=o.oc(297),h=o.oc(299);o.Bb(3),o.yc("Outlined: ",i.outlined?"On":"Off",""),o.Bb(2),o.yc("Required: ",i.required?"On":"Off",""),o.Bb(2),o.yc("Disabled: ",i.disabled?"On":"Off",""),o.Bb(2),o.yc("Read Only: ",i.readonly?"On":"Off",""),o.Bb(1),o.ic("helperText",l),o.Bb(5),o.ic("example",t.exampleStandard),o.Bb(6),o.yc("Input event: ",t.inputEvent,""),o.Bb(2),o.yc("Change event: ",t.changeEvent,""),o.Bb(2),o.yc("Focus event: ",t.focusEvent,""),o.Bb(1),o.ic("example",t.exampleEvents),o.Bb(6),o.yc("Outlined: ",r.outlined?"On":"Off",""),o.Bb(2),o.yc("Native validation: ",r.useNativeValidation?"On":"Off",""),o.Bb(1),o.ic("disabled",t.demoForm.touched),o.Bb(2),o.ic("formGroup",t.demoForm),o.Bb(3),o.ic("errorStateMatcher",t.matcher),o.Bb(3),o.ic("ngIf",t.demoForm.controls.username.hasError("required")),o.Bb(1),o.ic("ngIf",t.demoForm.controls.username.hasError("minlength")),o.Bb(1),o.ic("ngIf",t.demoForm.controls.username.hasError("maxlength")),o.Bb(9),o.yc("Control Valid: ",t.demoForm.controls.username.valid,""),o.Bb(2),o.yc("Dirty: ",t.demoForm.dirty,""),o.Bb(2),o.yc("Valid: ",t.demoForm.valid,""),o.Bb(2),o.yc("Pristine: ",t.demoForm.pristine,""),o.Bb(2),o.yc("Touched: ",t.demoForm.touched,""),o.Bb(2),o.yc("Value: ",o.fc(65,66,t.demoForm.value),""),o.Bb(2),o.ic("example",t.exampleReactive),o.Bb(6),o.yc("Outlined: ",d.outlined?"On":"Off",""),o.Bb(8),o.ic("ngIf",!(null!=d&&d.value)),o.Bb(7),o.yc("Dirty: ",m.dirty,""),o.Bb(2),o.yc("Valid: ",a.valid,""),o.Bb(2),o.yc("Pristine: ",a.pristine,""),o.Bb(2),o.yc("Touched: ",m.touched,""),o.Bb(2),o.yc("Value: ",m.value,""),o.Bb(1),o.ic("example",t.exampleNumericNgModel),o.Bb(10),o.yc("End Aligned: ",c.endAligned?"On":"Off",""),o.Bb(6),o.yc("LTR Text: ",s.ltrText?"On":"Off",""),o.Bb(5),o.ic("example",t.examplePrefixSuffix),o.Bb(12),o.ic("example",t.exampleCharacterCounter),o.Bb(4),o.ic("helperText",b),o.Bb(4),o.ic("example",t.exampleTACounter),o.Bb(21),o.ic("example",t.exampleNoLabel),o.Bb(6),o.yc("Required: ",u.required?"On":"Off",""),o.Bb(2),o.ic("value",t.demoInputValue),o.Bb(3),o.ic("ngIf",!(null!=u&&u.value)),o.Bb(5),o.yc("Value: ",u.value,""),o.Bb(1),o.ic("example",t.exampleUsingValue),o.Bb(21),o.ic("example",t.exampleIcons),o.Bb(7),o.ic("example",t.exampleSvgIcon),o.Bb(12),o.ic("example",t.exampleDensity),o.Bb(10),o.ic("example",t.exampleShape),o.Bb(4),o.ic("ngModel",t.waypoint.dt),o.Bb(2),o.yc("Model: ",o.fc(232,68,t.waypoint),""),o.Bb(2),o.ic("example",t.exampleNumeric),o.Bb(4),o.ic("ngModel",t.prefilledText),o.Bb(2),o.yc("ngModel: ",t.prefilledText," "),o.Bb(1),o.ic("example",t.examplePrefilled),o.Bb(8),o.ic("example",t.exampleRtl),o.Bb(12),o.ic("example",t.exampleDateTime),o.Bb(9),o.ic("example",t.exampleFullWithSingleLine),o.Bb(6),o.yc("Disabled: ",p.disabled?"On":"Off",""),o.Bb(2),o.yc("Required: ",p.required?"On":"Off",""),o.Bb(3),o.ic("helperText",f),o.Bb(5),o.ic("example",t.exampleTextarea),o.Bb(6),o.yc("Disabled: ",x.disabled?"On":"Off",""),o.Bb(2),o.yc("Required: ",x.required?"On":"Off",""),o.Bb(3),o.ic("helperText",h),o.Bb(5),o.ic("example",t.exampleFullWidth)}},directives:[u.a,p.a,f.a,x.a,r.q,r.k,r.e,h.a,r.j,r.c,v.k,r.l,r.m,r.o,g.a,y.b,w.a,R.a],pipes:[v.f],encapsulation:2}),B)}]}],H=((E=function e(){_classCallCheck(this,e)}).\u0275mod=o.Jb({type:E}),E.\u0275inj=o.Ib({factory:function(e){return new(e||E)},imports:[[l.e.forChild(_)],l.e]}),E),L=((I=function e(){_classCallCheck(this,e)}).\u0275mod=o.Jb({type:I}),I.\u0275inj=o.Ib({factory:function(e){return new(e||I)},imports:[[i.a,H]]}),I)}}]);