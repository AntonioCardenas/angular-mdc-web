function _defineProperties(c,e){for(var i=0;i<e.length;i++){var t=e[i];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(c,t.key,t)}}function _createClass(c,e,i){return e&&_defineProperties(c.prototype,e),i&&_defineProperties(c,i),c}function _classCallCheck(c,e){if(!(c instanceof e))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{T82o:function(c,e,i){"use strict";i.r(e),i.d(e,"ChipsModule",(function(){return S}));var t=i("d2mR"),n=i("tyNb"),o=i("3Pt+"),b=i("leug"),h=i("fXoL"),d=i("5l+6"),a=i("LuDt"),p=i("9UYg"),m=i("zlO5"),s=i("PMnV"),l=i("VRYb"),r=i("dkiD"),R=i("ofXK");function Q(c,e){if(1&c){var i=h.Sb();h.Rb(0,"mdc-chip",35),h.Zb("selectionChange",(function(c){return h.pc(i),h.dc().onChipSelection(c)})),h.wc(1),h.Qb()}if(2&c){var t=e.$implicit;h.ic("value",t.value),h.Bb(1),h.yc(" ",t.viewValue," ")}}function w(c,e){if(1&c&&(h.Rb(0,"mdc-chip",36),h.wc(1),h.Qb()),2&c){var i=e.$implicit;h.ic("value",i.value),h.Bb(1),h.yc(" ",i.viewValue," ")}}function u(c,e){if(1&c&&(h.Rb(0,"mdc-chip",36),h.wc(1),h.Qb()),2&c){var i=e.$implicit;h.ic("value",i.value),h.Bb(1),h.yc(" ",i.viewValue," ")}}var v,g,f,x,C,y,M=((g=function c(){_classCallCheck(this,c)}).\u0275fac=function(c){return new(c||g)},g.\u0275cmp=h.Fb({type:g,selectors:[["ng-component"]],decls:206,vars:0,consts:[[1,"docs-api"],["mdcHeadline6",""],[1,"markdown-code"],["mdcSubtitle2",""]],template:function(c,e){1&c&&(h.Rb(0,"div",0),h.Rb(1,"h3",1),h.wc(2,"MdcChipSet"),h.Qb(),h.Rb(3,"p"),h.wc(4," Selector: "),h.Rb(5,"span",2),h.wc(6,"mdc-chip-set"),h.Qb(),h.Qb(),h.wc(7," Exported as: "),h.Rb(8,"span",2),h.wc(9,"mdcChipSet"),h.Qb(),h.Rb(10,"h4",3),h.wc(11,"Properties"),h.Qb(),h.Rb(12,"table"),h.Rb(13,"thead"),h.Rb(14,"tr"),h.Rb(15,"th"),h.wc(16,"Name"),h.Qb(),h.Rb(17,"th"),h.wc(18,"Description"),h.Qb(),h.Qb(),h.Qb(),h.Rb(19,"tbody"),h.Rb(20,"tr"),h.Rb(21,"td"),h.wc(22,"choice: boolean"),h.Qb(),h.Rb(23,"td"),h.wc(24,"Indicates that the chips in the set are choice chips, which allow a single selection from a set of options."),h.Qb(),h.Qb(),h.Rb(25,"tr"),h.Rb(26,"td"),h.wc(27,"filter: boolean"),h.Qb(),h.Rb(28,"td"),h.wc(29,"Indicates that the chips in the set are filter chips, which allow multiple selection from a set of options."),h.Qb(),h.Qb(),h.Rb(30,"tr"),h.Rb(31,"td"),h.wc(32,"input: boolean"),h.Qb(),h.Rb(33,"td"),h.wc(34,"Indicates that the chips in the set are input chips, which enable user input by converting text into chips."),h.Qb(),h.Qb(),h.Rb(35,"tr"),h.Rb(36,"td"),h.wc(37,"touch: boolean"),h.Qb(),h.Rb(38,"td"),h.wc(39,"Set the component touch target to 48 x 48 px."),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Rb(40,"h4",3),h.wc(41,"Methods"),h.Qb(),h.Rb(42,"table"),h.Rb(43,"tbody"),h.Rb(44,"tr"),h.Rb(45,"td"),h.wc(46,"getSelectedChipIds(): string[]"),h.Qb(),h.Rb(47,"td"),h.wc(48,"Returns an array of the IDs of all selected chips."),h.Qb(),h.Qb(),h.Rb(49,"tr"),h.Rb(50,"td"),h.wc(51,"select(chipId: string): void"),h.Qb(),h.Rb(52,"td"),h.wc(53,"Selects the chip with the given id. Deselects all other chips if the chip set is of the choice variant."),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Rb(54,"h4",3),h.wc(55,"Events"),h.Qb(),h.Rb(56,"table"),h.Rb(57,"tbody"),h.Rb(58,"tr"),h.Rb(59,"td"),h.wc(60,"interaction: MdcChipInteractionEvent"),h.Qb(),h.Rb(61,"td"),h.wc(62,"Indicates when a chip is interacted with (via click/tap or Enter key)"),h.Qb(),h.Qb(),h.Rb(63,"tr"),h.Rb(64,"td"),h.wc(65,"change: MdcChipSetChange"),h.Qb(),h.Rb(66,"td"),h.wc(67,"Emitted when a chip is interacted with."),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Rb(68,"div",0),h.Rb(69,"h3",1),h.wc(70,"MdcChip"),h.Qb(),h.Rb(71,"p"),h.wc(72," Selector: "),h.Rb(73,"span",2),h.wc(74,"mdc-chip"),h.Qb(),h.Qb(),h.wc(75," Exported as: "),h.Rb(76,"span",2),h.wc(77,"mdcChip"),h.Qb(),h.Rb(78,"h4",3),h.wc(79,"Properties"),h.Qb(),h.Rb(80,"table"),h.Rb(81,"thead"),h.Rb(82,"tr"),h.Rb(83,"th"),h.wc(84,"Name"),h.Qb(),h.Rb(85,"th"),h.wc(86,"Description"),h.Qb(),h.Qb(),h.Qb(),h.Rb(87,"tbody"),h.Rb(88,"tr"),h.Rb(89,"td"),h.wc(90,"choice: boolean"),h.Qb(),h.Rb(91,"td"),h.wc(92,"Indicates that the chips in the set are choice chips, which allow a single selection from a set of options."),h.Qb(),h.Qb(),h.Rb(93,"tr"),h.Rb(94,"td"),h.wc(95,"filter: boolean"),h.Qb(),h.Rb(96,"td"),h.wc(97,"Indicates that the chips in the set are filter chips, which allow multiple selection from a set of options."),h.Qb(),h.Qb(),h.Rb(98,"tr"),h.Rb(99,"td"),h.wc(100,"input: boolean"),h.Qb(),h.Rb(101,"td"),h.wc(102,"Indicates that the chips in the set are input chips, which enable user input by converting text into chips."),h.Qb(),h.Qb(),h.Rb(103,"tr"),h.Rb(104,"td"),h.wc(105,"label: string"),h.Qb(),h.Rb(106,"td"),h.wc(107,"Sets the text content of the chip."),h.Qb(),h.Qb(),h.Rb(108,"tr"),h.Rb(109,"td"),h.wc(110,"value: string | string[]"),h.Qb(),h.Rb(111,"td"),h.wc(112,"The value of the chip. Defaults to the content inside "),h.Rb(113,"code"),h.wc(114,"mdc-chip"),h.Qb(),h.wc(115,"."),h.Qb(),h.Qb(),h.Rb(116,"tr"),h.Rb(117,"td"),h.wc(118,"removable: boolean"),h.Qb(),h.Rb(119,"td"),h.wc(120,"Sets whether a trailing icon click should trigger exit/removal of the chip. (Default is true)"),h.Qb(),h.Qb(),h.Rb(121,"tr"),h.Rb(122,"td"),h.wc(123,"disableRipple: boolean"),h.Qb(),h.Rb(124,"td"),h.wc(125,"Whether ripples are disabled."),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Rb(126,"h4",3),h.wc(127,"Methods"),h.Qb(),h.Rb(128,"table"),h.Rb(129,"tbody"),h.Rb(130,"tr"),h.Rb(131,"td"),h.wc(132,"focus()"),h.Qb(),h.Rb(133,"td"),h.wc(134,"Set focus to the chip."),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Rb(135,"h4",3),h.wc(136,"Events"),h.Qb(),h.Rb(137,"table"),h.Rb(138,"tbody"),h.Rb(139,"tr"),h.Rb(140,"td"),h.wc(141,"interactionEvent: MdcChipInteractionEvent"),h.Qb(),h.Rb(142,"td"),h.wc(143,"Indicates the chip was interacted with (via click/tap or Enter key) "),h.Qb(),h.Qb(),h.Rb(144,"tr"),h.Rb(145,"td"),h.wc(146,"selectionChange: MdcChipSelectionEvent"),h.Qb(),h.Rb(147,"td"),h.wc(148,"Indicates the chip's selection state has changed (for choice/filter chips)"),h.Qb(),h.Qb(),h.Rb(149,"tr"),h.Rb(150,"td"),h.wc(151,"removalEvent: MdcChipRemovalEvent"),h.Qb(),h.Rb(152,"td"),h.wc(153,"Indicates the chip removal event from a chip set"),h.Qb(),h.Qb(),h.Rb(154,"tr"),h.Rb(155,"td"),h.wc(156,"navigationEvent: MdcChipNavigationEvent"),h.Qb(),h.Rb(157,"td"),h.wc(158,"Indicates a navigation event has occurred on a chip"),h.Qb(),h.Qb(),h.Rb(159,"tr"),h.Rb(160,"td"),h.wc(161,"trailingIconInteraction: MdcChipInteractionEvent"),h.Qb(),h.Rb(162,"td"),h.wc(163,"Indicates the chip's trailing icon was interacted with (via click/tap or Enter key)"),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Rb(164,"div",0),h.Rb(165,"h3",1),h.wc(166,"MdcChipText"),h.Qb(),h.wc(167," Optional. Indicates the text content of the chip. "),h.Rb(168,"p"),h.wc(169," Selector: "),h.Rb(170,"span",2),h.wc(171,"mdc-chip-text"),h.Qb(),h.Qb(),h.wc(172," Exported as: "),h.Rb(173,"span",2),h.wc(174,"mdcChipText"),h.Qb(),h.Qb(),h.Rb(175,"div",0),h.Rb(176,"h3",1),h.wc(177,"MdcChipIcon"),h.Qb(),h.wc(178," Optional. Indicates the text content of the chip. "),h.Rb(179,"p"),h.wc(180," Selector: "),h.Rb(181,"span",2),h.wc(182,"mdc-chip-icon"),h.Qb(),h.Qb(),h.wc(183," Exported as: "),h.Rb(184,"span",2),h.wc(185,"mdcChipIcon"),h.Qb(),h.Rb(186,"h4",3),h.wc(187,"Properties"),h.Qb(),h.Rb(188,"table"),h.Rb(189,"thead"),h.Rb(190,"tr"),h.Rb(191,"th"),h.wc(192,"Name"),h.Qb(),h.Rb(193,"th"),h.wc(194,"Description"),h.Qb(),h.Qb(),h.Qb(),h.Rb(195,"tbody"),h.Rb(196,"tr"),h.Rb(197,"td"),h.wc(198,"leading: boolean"),h.Qb(),h.Rb(199,"td"),h.wc(200,"Indicates a leading icon in the chip"),h.Qb(),h.Qb(),h.Rb(201,"tr"),h.Rb(202,"td"),h.wc(203,"trailing: boolean"),h.Qb(),h.Rb(204,"td"),h.wc(205,"Indicates a trailing icon in the chip"),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Qb())},directives:[d.i,d.l],encapsulation:2}),g),k=((v=function c(){_classCallCheck(this,c)}).\u0275fac=function(c){return new(c||v)},v.\u0275cmp=h.Fb({type:v,selectors:[["ng-component"]],decls:155,vars:0,consts:[[1,"docs-api"],["mdcSubtitle2",""]],template:function(c,e){1&c&&(h.Rb(0,"div",0),h.Rb(1,"h4",1),h.wc(2,"Sass Mixins"),h.Qb(),h.Rb(3,"table"),h.Rb(4,"thead"),h.Rb(5,"tr"),h.Rb(6,"th"),h.wc(7,"Mixin"),h.Qb(),h.Rb(8,"th"),h.wc(9,"Description"),h.Qb(),h.Qb(),h.Qb(),h.Rb(10,"tbody"),h.Rb(11,"tr"),h.Rb(12,"td"),h.Rb(13,"code"),h.wc(14,"spacing($gap-size)"),h.Qb(),h.Qb(),h.Rb(15,"td"),h.wc(16,"Customizes the amount of space between each chip in the set"),h.Qb(),h.Qb(),h.Rb(17,"tr"),h.Rb(18,"td"),h.Rb(19,"code"),h.wc(20,"shape-radius($radius, $rtl-reflexive)"),h.Qb(),h.Qb(),h.Rb(21,"td"),h.wc(22,"Sets the rounded shape to chip with given radius size. Set "),h.Rb(23,"code"),h.wc(24,"$rtl-reflexive"),h.Qb(),h.wc(25," to true to flip radius values in RTL context, defaults to false."),h.Qb(),h.Qb(),h.Rb(26,"tr"),h.Rb(27,"td"),h.Rb(28,"code"),h.wc(29,"fill-color-accessible($color)"),h.Qb(),h.Qb(),h.Rb(30,"td"),h.wc(31,"Customizes the background fill color for a chip, and updates the chip's ink, icon and ripple colors to meet accessibility standards "),h.Qb(),h.Qb(),h.Rb(32,"tr"),h.Rb(33,"td"),h.Rb(34,"code"),h.wc(35,"fill-color($color)"),h.Qb(),h.Qb(),h.Rb(36,"td"),h.wc(37,"Customizes the background fill color for a chip"),h.Qb(),h.Qb(),h.Rb(38,"tr"),h.Rb(39,"td"),h.Rb(40,"code"),h.wc(41,"ink-color($color)"),h.Qb(),h.Qb(),h.Rb(42,"td"),h.wc(43,"Customizes the text ink color for a chip, and updates the chip's ripple color to match"),h.Qb(),h.Qb(),h.Rb(44,"tr"),h.Rb(45,"td"),h.Rb(46,"code"),h.wc(47,"selected-ink-color($color)"),h.Qb(),h.Qb(),h.Rb(48,"td"),h.wc(49,"Customizes text ink and ripple color of a chip in the "),h.Rb(50,"em"),h.wc(51,"selected"),h.Qb(),h.wc(52," state"),h.Qb(),h.Qb(),h.Rb(53,"tr"),h.Rb(54,"td"),h.Rb(55,"code"),h.wc(56,"outline($width, $style, $color)"),h.Qb(),h.Qb(),h.Rb(57,"td"),h.wc(58,"Customizes the outline properties for a chip"),h.Qb(),h.Qb(),h.Rb(59,"tr"),h.Rb(60,"td"),h.Rb(61,"code"),h.wc(62,"outline-width($width, $horizontal-padding)"),h.Qb(),h.Qb(),h.Rb(63,"td"),h.wc(64,"Customizes the outline width for a chip. "),h.Rb(65,"code"),h.wc(66,"$horizontal-padding"),h.Qb(),h.wc(67," is only required in cases where "),h.Rb(68,"code"),h.wc(69,"horizontal-padding"),h.Qb(),h.wc(70," is also included with a custom value"),h.Qb(),h.Qb(),h.Rb(71,"tr"),h.Rb(72,"td"),h.Rb(73,"code"),h.wc(74,"outline-style($style)"),h.Qb(),h.Qb(),h.Rb(75,"td"),h.wc(76,"Customizes the outline style for a chip"),h.Qb(),h.Qb(),h.Rb(77,"tr"),h.Rb(78,"td"),h.Rb(79,"code"),h.wc(80,"outline-color($color)"),h.Qb(),h.Qb(),h.Rb(81,"td"),h.wc(82,"Customizes the outline color for a chip"),h.Qb(),h.Qb(),h.Rb(83,"tr"),h.Rb(84,"td"),h.Rb(85,"code"),h.wc(86,"height($height)"),h.Qb(),h.Qb(),h.Rb(87,"td"),h.wc(88,"Customizes the height for a chip"),h.Qb(),h.Qb(),h.Rb(89,"tr"),h.Rb(90,"td"),h.Rb(91,"code"),h.wc(92,"horizontal-padding($padding)"),h.Qb(),h.Qb(),h.Rb(93,"td"),h.wc(94,"Customizes the horizontal padding for a chip"),h.Qb(),h.Qb(),h.Rb(95,"tr"),h.Rb(96,"td"),h.Rb(97,"code"),h.wc(98,"leading-icon-color($color, $opacity)"),h.Qb(),h.Qb(),h.Rb(99,"td"),h.wc(100,"Customizes the color of a leading icon in a chip, optionally customizes opacity"),h.Qb(),h.Qb(),h.Rb(101,"tr"),h.Rb(102,"td"),h.Rb(103,"code"),h.wc(104,"trailing-icon-color($color, $opacity, $hover-opacity, $focus-opacity)"),h.Qb(),h.Qb(),h.Rb(105,"td"),h.wc(106,"Customizes the color of a trailing icon in a chip, optionally customizes regular/hover/focus opacities"),h.Qb(),h.Qb(),h.Rb(107,"tr"),h.Rb(108,"td"),h.Rb(109,"code"),h.wc(110,"leading-icon-size($size)"),h.Qb(),h.Qb(),h.Rb(111,"td"),h.wc(112,"Customizes the size of a leading icon in a chip"),h.Qb(),h.Qb(),h.Rb(113,"tr"),h.Rb(114,"td"),h.Rb(115,"code"),h.wc(116,"trailing-icon-size($size)"),h.Qb(),h.Qb(),h.Rb(117,"td"),h.wc(118,"Customizes the size of a trailing icon in a chip"),h.Qb(),h.Qb(),h.Rb(119,"tr"),h.Rb(120,"td"),h.Rb(121,"code"),h.wc(122,"leading-icon-margin($left-margin, $right-margin)"),h.Qb(),h.Qb(),h.Rb(123,"td"),h.wc(124,"Customizes the margin of a leading icon in a chip"),h.Qb(),h.Qb(),h.Rb(125,"tr"),h.Rb(126,"td"),h.Rb(127,"code"),h.wc(128,"trailing-icon-margin($left-margin, $right-margin)"),h.Qb(),h.Qb(),h.Rb(129,"td"),h.wc(130,"Customizes the margin of a trailing icon in a chip"),h.Qb(),h.Qb(),h.Rb(131,"tr"),h.Rb(132,"td"),h.Rb(133,"code"),h.wc(134,"elevation-transition()"),h.Qb(),h.Qb(),h.Rb(135,"td"),h.wc(136,"Adds a MDC elevation transition to the chip. This should be used instead of setting transition with "),h.Rb(137,"code"),h.wc(138,"mdc-elevation-transition-value()"),h.Qb(),h.wc(139," directly when a box shadow transition is desired for a chip"),h.Qb(),h.Qb(),h.Rb(140,"tr"),h.Rb(141,"td"),h.Rb(142,"code"),h.wc(143,"density($density-scale)"),h.Qb(),h.Qb(),h.Rb(144,"td"),h.wc(145,"Sets density scale for chip. Supported density scales are "),h.Rb(146,"code"),h.wc(147,"-2"),h.Qb(),h.wc(148,", "),h.Rb(149,"code"),h.wc(150,"-1"),h.Qb(),h.wc(151," and "),h.Rb(152,"code"),h.wc(153,"0"),h.Qb(),h.wc(154," (default)."),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Qb())},directives:[d.l],encapsulation:2}),v),z=[{path:"",component:(x=function(){function c(){_classCallCheck(this,c)}return _createClass(c,[{key:"ngOnInit",value:function(){this._componentViewer.template={title:"Chips",description:"Chips are compact elements that allow users to enter information, select a choice, filter content, or trigger an action.",references:[{name:"Material Design guidelines: Chips",url:"https://material.io/guidelines/components/chips.html"},{name:"Material Components Web",url:"https://github.com/material-components/material-components-web/blob/master/packages/mdc-chips/README.md"}],code:"import {MdcChipsModule} from '@angular-mdc/web';",sass:"@use '@material/chips/mdc-chips';\n@use '@material/chips';"}}}]),c}(),x.\u0275fac=function(c){return new(c||x)},x.\u0275cmp=h.Fb({type:x,selectors:[["ng-component"]],viewQuery:function(c,e){var i;1&c&&h.tc(b.a,!0),2&c&&h.nc(i=h.ac())&&(e._componentViewer=i.first)},decls:1,vars:0,template:function(c,e){1&c&&h.Mb(0,"component-viewer")},directives:[a.a],encapsulation:2}),x),children:[{path:"",redirectTo:"api"},{path:"api",component:M},{path:"sass",component:k},{path:"examples",component:(f=function(){function c(){_classCallCheck(this,c),this.demoChipValue="pizza-1",this.ngModelValue="tacos-2",this.chipForm=new o.d({chipFood:new o.b("steak-0")}),this.foods=[{value:"steak-0",viewValue:"Steak"},{value:"pizza-1",viewValue:"Pizza"},{value:"tacos-2",viewValue:"Tacos"}],this.reuseFoods="foods: ChipFood[] = [\n  {value: 'steak-0', viewValue: 'Steak'},\n  {value: 'pizza-1', viewValue: 'Pizza'},\n  {value: 'tacos-2', viewValue: 'Tacos'},\n];",this.exampleSimple={html:"<mdc-chip-set>\n  <mdc-chip>\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-text>Jane Smith</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>"},this.exampleInput={html:'<mdc-chip-set input>\n  <mdc-chip label="Alice" (removalEvent)="onChipRemoved($event)">\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-icon trailing>cancel</mdc-chip-icon>\n  </mdc-chip>\n  <mdc-chip label="Bob" (removalEvent)="onChipRemoved($event)">\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-icon trailing>cancel</mdc-chip-icon>\n  </mdc-chip>\n  <mdc-chip label=\'Charlie\' (removalEvent)="onChipRemoved($event)">\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-icon trailing>cancel</mdc-chip-icon>\n  </mdc-chip>\n  <mdc-chip label=\'David\' (removalEvent)="onChipRemoved($event)">\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-icon trailing>cancel</mdc-chip-icon>\n  </mdc-chip>\n</mdc-chip-set>'},this.exampleChoice={html:"<mdc-chip-set choice>\n  <mdc-chip>\n    <mdc-chip-text>Get Directions</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-text>Get Weather</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-text>Add to Calendar</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>"},this.exampleFilter={html:"<mdc-chip-set filter>\n  <mdc-chip>\n    <mdc-chip-text>Tops</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-text>Bottoms</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-text>Shoes</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-text>Accessories</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>"},this.exampleFilterWithIcon={html:"<mdc-chip-set filter>\n  <mdc-chip>\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-text>Alice</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-text>Bob</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-text>Charlie</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>face</mdc-chip-icon>\n    <mdc-chip-text>David</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>"},this.exampleAction={html:"<mdc-chip-set>\n  <mdc-chip>\n    <mdc-chip-icon leading>wb_sunny</mdc-chip-icon>\n    <mdc-chip-text>Turn on lights</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>bookmark</mdc-chip-icon>\n    <mdc-chip-text>Bookmark</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>alarm</mdc-chip-icon>\n    <mdc-chip-text>Set alarm</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip>\n    <mdc-chip-icon leading>directions</mdc-chip-icon>\n    <mdc-chip-text>Get Directions</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>"},this.exampleShape={html:'<mdc-chip-set>\n  <mdc-chip class="custom-chip--shape-radius">\n    <mdc-chip-text>Turn on lights</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--shape-radius">\n    <mdc-chip-text>Bookmark</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--shape-radius">\n    <mdc-chip-text>Set alarm</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--shape-radius">\n    <mdc-chip-text>Get Directions</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_chips.scss"},this.exampleTheme={html:'<mdc-chip-set>\n  <mdc-chip class="custom-chip-secondary">\n    <mdc-chip-text>Turn on lights</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip-secondary">\n    <mdc-chip-text>Bookmark</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip-secondary">\n    <mdc-chip-text>Set alarm</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip-secondary">\n    <mdc-chip-text>Get Directions</mdc-chip-text>\n  </mdc-chip>\n</mdc-chip-set>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_chips.scss"},this.exampleCustom={html:'<mdc-chip-set>\n  <mdc-chip class="custom-chip--height">\n    <mdc-chip-text>Height</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--horizontal-padding">\n    <mdc-chip-text>Horizontal Padding</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--leading-icon-color">\n    <mdc-chip-icon leading>wb_sunny</mdc-chip-icon>\n    <mdc-chip-text>Leading Icon Color</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--trailing-icon-color">\n    <mdc-chip-text>Trailing Icon Color</mdc-chip-text>\n    <mdc-chip-icon trailing>wb_sunny</mdc-chip-icon>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--leading-icon-size">\n    <mdc-chip-icon leading>wb_sunny</mdc-chip-icon>\n    <mdc-chip-text>Leading Icon Size</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--trailing-icon-size">\n    <mdc-chip-text>Trailing Icon Size</mdc-chip-text>\n    <mdc-chip-icon trailing>wb_sunny</mdc-chip-icon>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--leading-icon-margin">\n    <mdc-chip-icon leading>wb_sunny</mdc-chip-icon>\n    <mdc-chip-text>Leading Icon Margin</mdc-chip-text>\n  </mdc-chip>\n  <mdc-chip class="custom-chip--trailing-icon-margin">\n    <mdc-chip-text>Trailing Icon Margin</mdc-chip-text>\n    <mdc-chip-icon trailing>wb_sunny</mdc-chip-icon>\n  </mdc-chip>\n</mdc-chip-set>',sass:"https://raw.githubusercontent.com/trimox/angular-mdc-web/master/demos/src/styles/_chips.scss"},this.exampleValue={html:'<mdc-chip-set choice #chipSetValue (change)="onChipSetChange($event)" [value]="demoChipValue">\n  <mdc-chip *ngFor="let food of foods" [value]="food.value"\n    (interaction)="onChipInteraction($event)"\n    (selectionChange)="onChipInteraction($event)">\n    {{food.viewValue}}\n  </mdc-chip>\n</mdc-chip-set>',ts:"".concat(this.reuseFoods,"\n\ndemoChipValue = 'pizza-1';\n\nonChipSetChange(evt: MdcChipSetChange): void {\n  // do something\n}\n\nonChipInteraction(evt: MdcChipInteractionEvent): void {\n  // do something\n}\n\nonChipSelection(evt: MdcChipSelectionEvent): void {\n  // do something\n}")},this.exampleNgModel={html:'<mdc-chip-set choice [(ngModel)]="ngModelValue">\n  <mdc-chip *ngFor="let food of foods" [value]="food.value">\n    {{food.viewValue}}\n  </mdc-chip>\n</mdc-chip-set>',ts:"ngModelValue = 'tacos-2';\n\n".concat(this.reuseFoods)},this.exampleReactiveForm={html:'<form [formGroup]="chipForm" novalidate>\n  <mdc-chip-set choice formControlName="chipFood">\n    <mdc-chip *ngFor="let food of foods" [value]="food.value">\n      {{food.viewValue}}\n    </mdc-chip>\n  </mdc-chip-set>\n</form>',ts:"".concat(this.reuseFoods,"\n\nchipForm = new FormGroup({\n  chipFood: new FormControl('steak-0')\n});")},this.exampleAccessibility={html:'<div class="mdc-touch-target-wrapper">\n  <mdc-chip touch label="My Accessibility Chip"></mdc-chip>\n</div>'}}return _createClass(c,[{key:"onChipSetChange",value:function(c){console.log(c)}},{key:"onChipInteraction",value:function(c){console.log("MdcChipInteractionEvent: ".concat(c.chipId," : ").concat(c.value))}},{key:"onChipSelection",value:function(c){console.log("MdcChipSelectionEvent: ".concat(c.chipId," : ").concat(c.selected))}},{key:"onChipRemoved",value:function(c){console.log("MdcChipRemovalEvent: ".concat(c.chipId))}}]),c}(),f.\u0275fac=function(c){return new(c||f)},f.\u0275cmp=h.Fb({type:f,selectors:[["ng-component"]],decls:239,vars:26,consts:[[1,"demo-content"],[1,"demo-layout__row"],["mdc-button","",3,"click"],["simplechip",""],["leading",""],[3,"example"],[1,"demo-content__headline"],["input",""],["inputchipset",""],["label","Alice",3,"removalEvent"],["trailing",""],["label","Bob",3,"removalEvent"],["label","Charlie",3,"removalEvent"],["label","David",3,"removalEvent"],["choice",""],["filter",""],["choice","",3,"value","change","interaction"],["chipSetValue",""],[3,"value","selectionChange",4,"ngFor","ngForOf"],["choice","",3,"ngModel","ngModelChange"],[3,"value",4,"ngFor","ngForOf"],["novalidate","",3,"formGroup"],["choice","","formControlName","chipFood"],[1,"custom-chip--shape-radius"],[1,"custom-chip-secondary"],[1,"custom-chip--height"],[1,"custom-chip--horizontal-padding"],[1,"custom-chip--leading-icon-color"],[1,"custom-chip--trailing-icon-color",3,"removable"],[1,"custom-chip--leading-icon-size"],[1,"custom-chip--trailing-icon-size",3,"removable"],[1,"custom-chip--leading-icon-margin"],[1,"custom-chip--trailing-icon-margin",3,"removable"],[1,"mdc-touch-target-wrapper"],["touch","","label","My Accessibility Chip"],[3,"value","selectionChange"],[3,"value"]],template:function(c,e){if(1&c){var i=h.Sb();h.Rb(0,"div",0),h.Rb(1,"div",1),h.Rb(2,"button",2),h.Zb("click",(function(){h.pc(i);var c=h.oc(6);return c.disableRipple=!c.disableRipple})),h.wc(3),h.Qb(),h.Qb(),h.Rb(4,"mdc-chip-set"),h.Rb(5,"mdc-chip",null,3),h.Rb(7,"mdc-chip-icon",4),h.wc(8,"face"),h.Qb(),h.Rb(9,"mdc-chip-text"),h.wc(10,"Jane Smith"),h.Qb(),h.Qb(),h.Qb(),h.Mb(11,"example-viewer",5),h.Qb(),h.Rb(12,"div",0),h.Rb(13,"h3",6),h.wc(14,"Input Chips"),h.Qb(),h.Rb(15,"div",1),h.Rb(16,"mdc-chip-set",7,8),h.Rb(18,"mdc-chip",9),h.Zb("removalEvent",(function(c){return e.onChipRemoved(c)})),h.Rb(19,"mdc-chip-icon",4),h.wc(20,"face"),h.Qb(),h.Rb(21,"mdc-chip-icon",10),h.wc(22,"cancel"),h.Qb(),h.Qb(),h.Rb(23,"mdc-chip",11),h.Zb("removalEvent",(function(c){return e.onChipRemoved(c)})),h.Rb(24,"mdc-chip-icon",4),h.wc(25,"face"),h.Qb(),h.Rb(26,"mdc-chip-icon",10),h.wc(27,"cancel"),h.Qb(),h.Qb(),h.Rb(28,"mdc-chip",12),h.Zb("removalEvent",(function(c){return e.onChipRemoved(c)})),h.Rb(29,"mdc-chip-icon",4),h.wc(30,"face"),h.Qb(),h.Rb(31,"mdc-chip-icon",10),h.wc(32,"cancel"),h.Qb(),h.Qb(),h.Rb(33,"mdc-chip",13),h.Zb("removalEvent",(function(c){return e.onChipRemoved(c)})),h.Rb(34,"mdc-chip-icon",4),h.wc(35,"face"),h.Qb(),h.Rb(36,"mdc-chip-icon",10),h.wc(37,"cancel"),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Mb(38,"example-viewer",5),h.Qb(),h.Rb(39,"div",0),h.Rb(40,"h3",6),h.wc(41,"Choice Chips"),h.Qb(),h.Rb(42,"div",1),h.Rb(43,"mdc-chip-set",14),h.Rb(44,"mdc-chip"),h.Rb(45,"mdc-chip-text"),h.wc(46,"Get Directions"),h.Qb(),h.Qb(),h.Rb(47,"mdc-chip"),h.Rb(48,"mdc-chip-text"),h.wc(49,"Get Weather"),h.Qb(),h.Qb(),h.Rb(50,"mdc-chip"),h.Rb(51,"mdc-chip-text"),h.wc(52,"Add to Calendar"),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Mb(53,"example-viewer",5),h.Qb(),h.Rb(54,"div",0),h.Rb(55,"h3",6),h.wc(56,"Filter Chips"),h.Qb(),h.Rb(57,"div",1),h.Rb(58,"mdc-chip-set",15),h.Rb(59,"mdc-chip"),h.Rb(60,"mdc-chip-text"),h.wc(61,"Tops"),h.Qb(),h.Qb(),h.Rb(62,"mdc-chip"),h.Rb(63,"mdc-chip-text"),h.wc(64,"Bottoms"),h.Qb(),h.Qb(),h.Rb(65,"mdc-chip"),h.Rb(66,"mdc-chip-text"),h.wc(67,"Shoes"),h.Qb(),h.Qb(),h.Rb(68,"mdc-chip"),h.Rb(69,"mdc-chip-text"),h.wc(70,"Accessories"),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Mb(71,"example-viewer",5),h.Qb(),h.Rb(72,"div",0),h.Rb(73,"h3",6),h.wc(74,"Filter Chips with Leading Icon"),h.Qb(),h.Rb(75,"div",1),h.Rb(76,"mdc-chip-set",15),h.Rb(77,"mdc-chip"),h.Rb(78,"mdc-chip-icon",4),h.wc(79,"face"),h.Qb(),h.Rb(80,"mdc-chip-text"),h.wc(81,"Alice"),h.Qb(),h.Qb(),h.Rb(82,"mdc-chip"),h.Rb(83,"mdc-chip-icon",4),h.wc(84,"face"),h.Qb(),h.Rb(85,"mdc-chip-text"),h.wc(86,"Bob"),h.Qb(),h.Qb(),h.Rb(87,"mdc-chip"),h.Rb(88,"mdc-chip-icon",4),h.wc(89,"face"),h.Qb(),h.Rb(90,"mdc-chip-text"),h.wc(91,"Charlie"),h.Qb(),h.Qb(),h.Rb(92,"mdc-chip"),h.Rb(93,"mdc-chip-icon",4),h.wc(94,"face"),h.Qb(),h.Rb(95,"mdc-chip-text"),h.wc(96,"David"),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Mb(97,"example-viewer",5),h.Qb(),h.Rb(98,"div",0),h.Rb(99,"h3",6),h.wc(100,"Action Chips"),h.Qb(),h.Rb(101,"div",1),h.Rb(102,"mdc-chip-set"),h.Rb(103,"mdc-chip"),h.Rb(104,"mdc-chip-icon",4),h.wc(105,"wb_sunny"),h.Qb(),h.Rb(106,"mdc-chip-text"),h.wc(107,"Turn on lights"),h.Qb(),h.Qb(),h.Rb(108,"mdc-chip"),h.Rb(109,"mdc-chip-icon",4),h.wc(110,"bookmark"),h.Qb(),h.Rb(111,"mdc-chip-text"),h.wc(112,"Bookmark"),h.Qb(),h.Qb(),h.Rb(113,"mdc-chip"),h.Rb(114,"mdc-chip-icon",4),h.wc(115,"alarm"),h.Qb(),h.Rb(116,"mdc-chip-text"),h.wc(117,"Set alarm"),h.Qb(),h.Qb(),h.Rb(118,"mdc-chip"),h.Rb(119,"mdc-chip-icon",4),h.wc(120,"directions"),h.Qb(),h.Rb(121,"mdc-chip-text"),h.wc(122,"Get Directions"),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Mb(123,"example-viewer",5),h.Qb(),h.Rb(124,"div",0),h.Rb(125,"h3",6),h.wc(126,"Choice with value"),h.Qb(),h.Rb(127,"mdc-chip-set",16,17),h.Zb("change",(function(c){return e.onChipSetChange(c)}))("interaction",(function(c){return e.onChipInteraction(c)})),h.uc(129,Q,2,2,"mdc-chip",18),h.Qb(),h.Rb(130,"p"),h.wc(131),h.Qb(),h.Mb(132,"example-viewer",5),h.Qb(),h.Rb(133,"div",0),h.Rb(134,"h3",6),h.wc(135,"NgModel"),h.Qb(),h.Rb(136,"mdc-chip-set",19),h.Zb("ngModelChange",(function(c){return e.ngModelValue=c})),h.uc(137,w,2,2,"mdc-chip",20),h.Qb(),h.Rb(138,"p"),h.wc(139),h.Qb(),h.Mb(140,"example-viewer",5),h.Qb(),h.Rb(141,"div",0),h.Rb(142,"h3",6),h.wc(143,"Reactive Form"),h.Qb(),h.Rb(144,"form",21),h.Rb(145,"mdc-chip-set",22),h.uc(146,u,2,2,"mdc-chip",20),h.Qb(),h.Qb(),h.Rb(147,"p"),h.wc(148),h.Qb(),h.Mb(149,"example-viewer",5),h.Qb(),h.Rb(150,"div",0),h.Rb(151,"h3",6),h.wc(152,"Shape"),h.Qb(),h.Rb(153,"div",1),h.Rb(154,"mdc-chip-set"),h.Rb(155,"mdc-chip",23),h.Rb(156,"mdc-chip-text"),h.wc(157,"Turn on lights"),h.Qb(),h.Qb(),h.Rb(158,"mdc-chip",23),h.Rb(159,"mdc-chip-text"),h.wc(160,"Bookmark"),h.Qb(),h.Qb(),h.Rb(161,"mdc-chip",23),h.Rb(162,"mdc-chip-text"),h.wc(163,"Set alarm"),h.Qb(),h.Qb(),h.Rb(164,"mdc-chip",23),h.Rb(165,"mdc-chip-text"),h.wc(166,"Get Directions"),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Mb(167,"example-viewer",5),h.Qb(),h.Rb(168,"div",0),h.Rb(169,"h3",6),h.wc(170,"Theme"),h.Qb(),h.Rb(171,"div",1),h.Rb(172,"mdc-chip-set"),h.Rb(173,"mdc-chip",24),h.Rb(174,"mdc-chip-text"),h.wc(175,"Turn on lights"),h.Qb(),h.Qb(),h.Rb(176,"mdc-chip",24),h.Rb(177,"mdc-chip-text"),h.wc(178,"Bookmark"),h.Qb(),h.Qb(),h.Rb(179,"mdc-chip",24),h.Rb(180,"mdc-chip-text"),h.wc(181,"Set alarm"),h.Qb(),h.Qb(),h.Rb(182,"mdc-chip",24),h.Rb(183,"mdc-chip-text"),h.wc(184,"Get Directions"),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Mb(185,"example-viewer",5),h.Qb(),h.Rb(186,"div",0),h.Rb(187,"h3",6),h.wc(188,"Custom"),h.Qb(),h.Rb(189,"div",1),h.Rb(190,"mdc-chip-set"),h.Rb(191,"mdc-chip",25),h.Rb(192,"mdc-chip-text"),h.wc(193,"Height"),h.Qb(),h.Qb(),h.Rb(194,"mdc-chip",26),h.Rb(195,"mdc-chip-text"),h.wc(196,"Horizontal Padding"),h.Qb(),h.Qb(),h.Rb(197,"mdc-chip",27),h.Rb(198,"mdc-chip-icon",4),h.wc(199,"wb_sunny"),h.Qb(),h.Rb(200,"mdc-chip-text"),h.wc(201,"Leading Icon Color"),h.Qb(),h.Qb(),h.Rb(202,"mdc-chip",28),h.Rb(203,"mdc-chip-text"),h.wc(204,"Trailing Icon Color"),h.Qb(),h.Rb(205,"mdc-chip-icon",10),h.wc(206,"wb_sunny"),h.Qb(),h.Qb(),h.Rb(207,"mdc-chip",29),h.Rb(208,"mdc-chip-icon",4),h.wc(209,"wb_sunny"),h.Qb(),h.Rb(210,"mdc-chip-text"),h.wc(211,"Leading Icon Size"),h.Qb(),h.Qb(),h.Rb(212,"mdc-chip",30),h.Rb(213,"mdc-chip-text"),h.wc(214,"Trailing Icon Size"),h.Qb(),h.Rb(215,"mdc-chip-icon",10),h.wc(216,"wb_sunny"),h.Qb(),h.Qb(),h.Rb(217,"mdc-chip",31),h.Rb(218,"mdc-chip-icon",4),h.wc(219,"wb_sunny"),h.Qb(),h.Rb(220,"mdc-chip-text"),h.wc(221,"Leading Icon Margin"),h.Qb(),h.Qb(),h.Rb(222,"mdc-chip",32),h.Rb(223,"mdc-chip-text"),h.wc(224,"Trailing Icon Margin"),h.Qb(),h.Rb(225,"mdc-chip-icon",10),h.wc(226,"wb_sunny"),h.Qb(),h.Qb(),h.Qb(),h.Qb(),h.Mb(227,"example-viewer",5),h.Qb(),h.Rb(228,"div",0),h.Rb(229,"h3",6),h.wc(230,"Accessibility"),h.Qb(),h.Rb(231,"p"),h.wc(232," Material Design spec advises that touch targets should be at least 48 x 48 px. To meet this requirement, add the `touch` property. "),h.Qb(),h.Rb(233,"p"),h.wc(234," Note that the outer mdc-touch-target-wrapper element is only necessary if you want to avoid potentially overlapping touch targets on adjacent elements (due to collapsing margins). "),h.Qb(),h.Rb(235,"div",1),h.Rb(236,"div",33),h.Mb(237,"mdc-chip",34),h.Qb(),h.Qb(),h.Mb(238,"example-viewer",5),h.Qb()}if(2&c){var t=h.oc(6),n=h.oc(128);h.Bb(3),h.yc("Disable Ripple: ",t.disableRipple?"On":"Off",""),h.Bb(8),h.ic("example",e.exampleSimple),h.Bb(27),h.ic("example",e.exampleInput),h.Bb(15),h.ic("example",e.exampleChoice),h.Bb(18),h.ic("example",e.exampleFilter),h.Bb(26),h.ic("example",e.exampleFilterWithIcon),h.Bb(26),h.ic("example",e.exampleAction),h.Bb(4),h.ic("value",e.demoChipValue),h.Bb(2),h.ic("ngForOf",e.foods),h.Bb(2),h.yc("Value: ",n.value,""),h.Bb(1),h.ic("example",e.exampleValue),h.Bb(4),h.ic("ngModel",e.ngModelValue),h.Bb(1),h.ic("ngForOf",e.foods),h.Bb(2),h.yc("Value: ",e.ngModelValue,""),h.Bb(1),h.ic("example",e.exampleNgModel),h.Bb(4),h.ic("formGroup",e.chipForm),h.Bb(2),h.ic("ngForOf",e.foods),h.Bb(2),h.yc("Value: ",e.chipForm.controls.chipFood.value,""),h.Bb(1),h.ic("example",e.exampleReactiveForm),h.Bb(18),h.ic("example",e.exampleShape),h.Bb(18),h.ic("example",e.exampleTheme),h.Bb(17),h.ic("removable",!1),h.Bb(10),h.ic("removable",!1),h.Bb(10),h.ic("removable",!1),h.Bb(5),h.ic("example",e.exampleCustom),h.Bb(11),h.ic("example",e.exampleAccessibility)}},directives:[p.a,m.a,s.b,s.d,l.b,r.a,R.j,o.j,o.m,o.q,o.k,o.e,o.c],encapsulation:2}),f)}]}],I=((y=function c(){_classCallCheck(this,c)}).\u0275mod=h.Jb({type:y}),y.\u0275inj=h.Ib({factory:function(c){return new(c||y)},imports:[[n.e.forChild(z)],n.e]}),y),S=((C=function c(){_classCallCheck(this,c)}).\u0275mod=h.Jb({type:C}),C.\u0275inj=h.Ib({factory:function(c){return new(c||C)},imports:[[t.a,I]]}),C)},leug:function(c,e,i){"use strict";var t=i("LuDt");i.d(e,"a",(function(){return t.a}))}}]);